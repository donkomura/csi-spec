// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/cxx/.protoc/csi.proto

#include "lib/cxx/.protoc/csi.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace csi {
namespace v1 {

inline constexpr VolumeUsage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : available_{::int64_t{0}},
        total_{::int64_t{0}},
        used_{::int64_t{0}},
        unit_{static_cast< ::csi::v1::VolumeUsage_Unit >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeUsage::VolumeUsage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeUsageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeUsageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeUsageDefaultTypeInternal() {}
  union {
    VolumeUsage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeUsageDefaultTypeInternal _VolumeUsage_default_instance_;

inline constexpr VolumeContentSource_VolumeSource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeContentSource_VolumeSource::VolumeContentSource_VolumeSource(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeContentSource_VolumeSourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeContentSource_VolumeSourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeContentSource_VolumeSourceDefaultTypeInternal() {}
  union {
    VolumeContentSource_VolumeSource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeContentSource_VolumeSourceDefaultTypeInternal _VolumeContentSource_VolumeSource_default_instance_;

inline constexpr VolumeContentSource_SnapshotSource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeContentSource_SnapshotSource::VolumeContentSource_SnapshotSource(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeContentSource_SnapshotSourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeContentSource_SnapshotSourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeContentSource_SnapshotSourceDefaultTypeInternal() {}
  union {
    VolumeContentSource_SnapshotSource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeContentSource_SnapshotSourceDefaultTypeInternal _VolumeContentSource_SnapshotSource_default_instance_;

inline constexpr VolumeCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        abnormal_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeCondition::VolumeCondition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeConditionDefaultTypeInternal() {}
  union {
    VolumeCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeConditionDefaultTypeInternal _VolumeCondition_default_instance_;

inline constexpr VolumeCapability_MountVolume::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mount_flags_{},
        fs_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_mount_group_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeCapability_MountVolume::VolumeCapability_MountVolume(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeCapability_MountVolumeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeCapability_MountVolumeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeCapability_MountVolumeDefaultTypeInternal() {}
  union {
    VolumeCapability_MountVolume _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeCapability_MountVolumeDefaultTypeInternal _VolumeCapability_MountVolume_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR VolumeCapability_BlockVolume::VolumeCapability_BlockVolume(::_pbi::ConstantInitialized) {}
struct VolumeCapability_BlockVolumeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeCapability_BlockVolumeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeCapability_BlockVolumeDefaultTypeInternal() {}
  union {
    VolumeCapability_BlockVolume _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeCapability_BlockVolumeDefaultTypeInternal _VolumeCapability_BlockVolume_default_instance_;

inline constexpr VolumeCapability_AccessMode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{static_cast< ::csi::v1::VolumeCapability_AccessMode_Mode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeCapability_AccessMode::VolumeCapability_AccessMode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeCapability_AccessModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeCapability_AccessModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeCapability_AccessModeDefaultTypeInternal() {}
  union {
    VolumeCapability_AccessMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeCapability_AccessModeDefaultTypeInternal _VolumeCapability_AccessMode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Volume_VolumeContextEntry_DoNotUse::Volume_VolumeContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct Volume_VolumeContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Volume_VolumeContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Volume_VolumeContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Volume_VolumeContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Volume_VolumeContextEntry_DoNotUseDefaultTypeInternal _Volume_VolumeContextEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUseDefaultTypeInternal _ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUseDefaultTypeInternal _ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUseDefaultTypeInternal _ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal _ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUseDefaultTypeInternal _ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUseDefaultTypeInternal _ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal _ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Topology_SegmentsEntry_DoNotUse::Topology_SegmentsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct Topology_SegmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Topology_SegmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Topology_SegmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Topology_SegmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Topology_SegmentsEntry_DoNotUseDefaultTypeInternal _Topology_SegmentsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ProbeRequest::ProbeRequest(::_pbi::ConstantInitialized) {}
struct ProbeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProbeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProbeRequestDefaultTypeInternal() {}
  union {
    ProbeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProbeRequestDefaultTypeInternal _ProbeRequest_default_instance_;

inline constexpr PluginCapability_VolumeExpansion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::csi::v1::PluginCapability_VolumeExpansion_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PluginCapability_VolumeExpansion::PluginCapability_VolumeExpansion(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PluginCapability_VolumeExpansionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginCapability_VolumeExpansionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginCapability_VolumeExpansionDefaultTypeInternal() {}
  union {
    PluginCapability_VolumeExpansion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginCapability_VolumeExpansionDefaultTypeInternal _PluginCapability_VolumeExpansion_default_instance_;

inline constexpr PluginCapability_Service::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::csi::v1::PluginCapability_Service_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PluginCapability_Service::PluginCapability_Service(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PluginCapability_ServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginCapability_ServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginCapability_ServiceDefaultTypeInternal() {}
  union {
    PluginCapability_Service _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginCapability_ServiceDefaultTypeInternal _PluginCapability_Service_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeUnstageVolumeResponse::NodeUnstageVolumeResponse(::_pbi::ConstantInitialized) {}
struct NodeUnstageVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeUnstageVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeUnstageVolumeResponseDefaultTypeInternal() {}
  union {
    NodeUnstageVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeUnstageVolumeResponseDefaultTypeInternal _NodeUnstageVolumeResponse_default_instance_;

inline constexpr NodeUnstageVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        staging_target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeUnstageVolumeRequest::NodeUnstageVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeUnstageVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeUnstageVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeUnstageVolumeRequestDefaultTypeInternal() {}
  union {
    NodeUnstageVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeUnstageVolumeRequestDefaultTypeInternal _NodeUnstageVolumeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeUnpublishVolumeResponse::NodeUnpublishVolumeResponse(::_pbi::ConstantInitialized) {}
struct NodeUnpublishVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeUnpublishVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeUnpublishVolumeResponseDefaultTypeInternal() {}
  union {
    NodeUnpublishVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeUnpublishVolumeResponseDefaultTypeInternal _NodeUnpublishVolumeResponse_default_instance_;

inline constexpr NodeUnpublishVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeUnpublishVolumeRequest::NodeUnpublishVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeUnpublishVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeUnpublishVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeUnpublishVolumeRequestDefaultTypeInternal() {}
  union {
    NodeUnpublishVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeUnpublishVolumeRequestDefaultTypeInternal _NodeUnpublishVolumeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeStageVolumeResponse::NodeStageVolumeResponse(::_pbi::ConstantInitialized) {}
struct NodeStageVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeStageVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeStageVolumeResponseDefaultTypeInternal() {}
  union {
    NodeStageVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeStageVolumeResponseDefaultTypeInternal _NodeStageVolumeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeStageVolumeRequest_VolumeContextEntry_DoNotUse::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NodeStageVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeStageVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeStageVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodeStageVolumeRequest_VolumeContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeStageVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal _NodeStageVolumeRequest_VolumeContextEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeStageVolumeRequest_SecretsEntry_DoNotUse::NodeStageVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NodeStageVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeStageVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeStageVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodeStageVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeStageVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _NodeStageVolumeRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeStageVolumeRequest_PublishContextEntry_DoNotUse::NodeStageVolumeRequest_PublishContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NodeStageVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeStageVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeStageVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodeStageVolumeRequest_PublishContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeStageVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal _NodeStageVolumeRequest_PublishContextEntry_DoNotUse_default_instance_;

inline constexpr NodeServiceCapability_RPC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::csi::v1::NodeServiceCapability_RPC_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeServiceCapability_RPC::NodeServiceCapability_RPC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeServiceCapability_RPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeServiceCapability_RPCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeServiceCapability_RPCDefaultTypeInternal() {}
  union {
    NodeServiceCapability_RPC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeServiceCapability_RPCDefaultTypeInternal _NodeServiceCapability_RPC_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodePublishVolumeResponse::NodePublishVolumeResponse(::_pbi::ConstantInitialized) {}
struct NodePublishVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodePublishVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodePublishVolumeResponseDefaultTypeInternal() {}
  union {
    NodePublishVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodePublishVolumeResponseDefaultTypeInternal _NodePublishVolumeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodePublishVolumeRequest_VolumeContextEntry_DoNotUse::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NodePublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodePublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodePublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodePublishVolumeRequest_VolumeContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodePublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal _NodePublishVolumeRequest_VolumeContextEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodePublishVolumeRequest_SecretsEntry_DoNotUse::NodePublishVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NodePublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodePublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodePublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodePublishVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodePublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _NodePublishVolumeRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodePublishVolumeRequest_PublishContextEntry_DoNotUse::NodePublishVolumeRequest_PublishContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NodePublishVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodePublishVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodePublishVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodePublishVolumeRequest_PublishContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodePublishVolumeRequest_PublishContextEntry_DoNotUseDefaultTypeInternal _NodePublishVolumeRequest_PublishContextEntry_DoNotUse_default_instance_;

inline constexpr NodeGetVolumeStatsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        staging_target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeGetVolumeStatsRequest::NodeGetVolumeStatsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeGetVolumeStatsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeGetVolumeStatsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeGetVolumeStatsRequestDefaultTypeInternal() {}
  union {
    NodeGetVolumeStatsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeGetVolumeStatsRequestDefaultTypeInternal _NodeGetVolumeStatsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeGetInfoRequest::NodeGetInfoRequest(::_pbi::ConstantInitialized) {}
struct NodeGetInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeGetInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeGetInfoRequestDefaultTypeInternal() {}
  union {
    NodeGetInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeGetInfoRequestDefaultTypeInternal _NodeGetInfoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeGetCapabilitiesRequest::NodeGetCapabilitiesRequest(::_pbi::ConstantInitialized) {}
struct NodeGetCapabilitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeGetCapabilitiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeGetCapabilitiesRequestDefaultTypeInternal() {}
  union {
    NodeGetCapabilitiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeGetCapabilitiesRequestDefaultTypeInternal _NodeGetCapabilitiesRequest_default_instance_;

inline constexpr NodeExpandVolumeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capacity_bytes_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeExpandVolumeResponse::NodeExpandVolumeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeExpandVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeExpandVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeExpandVolumeResponseDefaultTypeInternal() {}
  union {
    NodeExpandVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeExpandVolumeResponseDefaultTypeInternal _NodeExpandVolumeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NodeExpandVolumeRequest_SecretsEntry_DoNotUse::NodeExpandVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NodeExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodeExpandVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _NodeExpandVolumeRequest_SecretsEntry_DoNotUse_default_instance_;

inline constexpr ListVolumesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : starting_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_entries_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListVolumesRequest::ListVolumesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListVolumesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVolumesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVolumesRequestDefaultTypeInternal() {}
  union {
    ListVolumesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVolumesRequestDefaultTypeInternal _ListVolumesRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ListSnapshotsRequest_SecretsEntry_DoNotUse::ListSnapshotsRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ListSnapshotsRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSnapshotsRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSnapshotsRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ListSnapshotsRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSnapshotsRequest_SecretsEntry_DoNotUseDefaultTypeInternal _ListSnapshotsRequest_SecretsEntry_DoNotUse_default_instance_;

inline constexpr GroupControllerServiceCapability_RPC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::csi::v1::GroupControllerServiceCapability_RPC_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GroupControllerServiceCapability_RPC::GroupControllerServiceCapability_RPC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupControllerServiceCapability_RPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupControllerServiceCapability_RPCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupControllerServiceCapability_RPCDefaultTypeInternal() {}
  union {
    GroupControllerServiceCapability_RPC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupControllerServiceCapability_RPCDefaultTypeInternal _GroupControllerServiceCapability_RPC_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GroupControllerGetCapabilitiesRequest::GroupControllerGetCapabilitiesRequest(::_pbi::ConstantInitialized) {}
struct GroupControllerGetCapabilitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupControllerGetCapabilitiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupControllerGetCapabilitiesRequestDefaultTypeInternal() {}
  union {
    GroupControllerGetCapabilitiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupControllerGetCapabilitiesRequestDefaultTypeInternal _GroupControllerGetCapabilitiesRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal _GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetPluginInfoResponse_ManifestEntry_DoNotUse::GetPluginInfoResponse_ManifestEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GetPluginInfoResponse_ManifestEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPluginInfoResponse_ManifestEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPluginInfoResponse_ManifestEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetPluginInfoResponse_ManifestEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPluginInfoResponse_ManifestEntry_DoNotUseDefaultTypeInternal _GetPluginInfoResponse_ManifestEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetPluginInfoRequest::GetPluginInfoRequest(::_pbi::ConstantInitialized) {}
struct GetPluginInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPluginInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPluginInfoRequestDefaultTypeInternal() {}
  union {
    GetPluginInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPluginInfoRequestDefaultTypeInternal _GetPluginInfoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetPluginCapabilitiesRequest::GetPluginCapabilitiesRequest(::_pbi::ConstantInitialized) {}
struct GetPluginCapabilitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPluginCapabilitiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPluginCapabilitiesRequestDefaultTypeInternal() {}
  union {
    GetPluginCapabilitiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPluginCapabilitiesRequestDefaultTypeInternal _GetPluginCapabilitiesRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetCapacityRequest_ParametersEntry_DoNotUse::GetCapacityRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GetCapacityRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCapacityRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCapacityRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetCapacityRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCapacityRequest_ParametersEntry_DoNotUseDefaultTypeInternal _GetCapacityRequest_ParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DeleteVolumeResponse::DeleteVolumeResponse(::_pbi::ConstantInitialized) {}
struct DeleteVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVolumeResponseDefaultTypeInternal() {}
  union {
    DeleteVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVolumeResponseDefaultTypeInternal _DeleteVolumeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DeleteVolumeRequest_SecretsEntry_DoNotUse::DeleteVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct DeleteVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeleteVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _DeleteVolumeRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DeleteVolumeGroupSnapshotResponse::DeleteVolumeGroupSnapshotResponse(::_pbi::ConstantInitialized) {}
struct DeleteVolumeGroupSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVolumeGroupSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVolumeGroupSnapshotResponseDefaultTypeInternal() {}
  union {
    DeleteVolumeGroupSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVolumeGroupSnapshotResponseDefaultTypeInternal _DeleteVolumeGroupSnapshotResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal _DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DeleteSnapshotResponse::DeleteSnapshotResponse(::_pbi::ConstantInitialized) {}
struct DeleteSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSnapshotResponseDefaultTypeInternal() {}
  union {
    DeleteSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSnapshotResponseDefaultTypeInternal _DeleteSnapshotResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DeleteSnapshotRequest_SecretsEntry_DoNotUse::DeleteSnapshotRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct DeleteSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeleteSnapshotRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal _DeleteSnapshotRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateVolumeRequest_SecretsEntry_DoNotUse::CreateVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CreateVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _CreateVolumeRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateVolumeRequest_ParametersEntry_DoNotUse::CreateVolumeRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CreateVolumeRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateVolumeRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeRequest_ParametersEntry_DoNotUseDefaultTypeInternal _CreateVolumeRequest_ParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateVolumeRequest_MutableParametersEntry_DoNotUse::CreateVolumeRequest_MutableParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CreateVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateVolumeRequest_MutableParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal _CreateVolumeRequest_MutableParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal _CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal _CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateSnapshotRequest_SecretsEntry_DoNotUse::CreateSnapshotRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CreateSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateSnapshotRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSnapshotRequest_SecretsEntry_DoNotUseDefaultTypeInternal _CreateSnapshotRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CreateSnapshotRequest_ParametersEntry_DoNotUse::CreateSnapshotRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CreateSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateSnapshotRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSnapshotRequest_ParametersEntry_DoNotUseDefaultTypeInternal _CreateSnapshotRequest_ParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerUnpublishVolumeResponse::ControllerUnpublishVolumeResponse(::_pbi::ConstantInitialized) {}
struct ControllerUnpublishVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerUnpublishVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerUnpublishVolumeResponseDefaultTypeInternal() {}
  union {
    ControllerUnpublishVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerUnpublishVolumeResponseDefaultTypeInternal _ControllerUnpublishVolumeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse_default_instance_;

inline constexpr ControllerServiceCapability_RPC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::csi::v1::ControllerServiceCapability_RPC_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerServiceCapability_RPC::ControllerServiceCapability_RPC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerServiceCapability_RPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerServiceCapability_RPCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerServiceCapability_RPCDefaultTypeInternal() {}
  union {
    ControllerServiceCapability_RPC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerServiceCapability_RPCDefaultTypeInternal _ControllerServiceCapability_RPC_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControllerPublishVolumeResponse_PublishContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerPublishVolumeResponse_PublishContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerPublishVolumeResponse_PublishContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerPublishVolumeResponse_PublishContextEntry_DoNotUseDefaultTypeInternal _ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUseDefaultTypeInternal _ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerPublishVolumeRequest_SecretsEntry_DoNotUse::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControllerPublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerPublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerPublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControllerPublishVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerPublishVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _ControllerPublishVolumeRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerModifyVolumeResponse::ControllerModifyVolumeResponse(::_pbi::ConstantInitialized) {}
struct ControllerModifyVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerModifyVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerModifyVolumeResponseDefaultTypeInternal() {}
  union {
    ControllerModifyVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerModifyVolumeResponseDefaultTypeInternal _ControllerModifyVolumeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerModifyVolumeRequest_SecretsEntry_DoNotUse::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControllerModifyVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerModifyVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerModifyVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControllerModifyVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerModifyVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _ControllerModifyVolumeRequest_SecretsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUseDefaultTypeInternal _ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse_default_instance_;

inline constexpr ControllerGetVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerGetVolumeRequest::ControllerGetVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerGetVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerGetVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerGetVolumeRequestDefaultTypeInternal() {}
  union {
    ControllerGetVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerGetVolumeRequestDefaultTypeInternal _ControllerGetVolumeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerGetCapabilitiesRequest::ControllerGetCapabilitiesRequest(::_pbi::ConstantInitialized) {}
struct ControllerGetCapabilitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerGetCapabilitiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerGetCapabilitiesRequestDefaultTypeInternal() {}
  union {
    ControllerGetCapabilitiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerGetCapabilitiesRequestDefaultTypeInternal _ControllerGetCapabilitiesRequest_default_instance_;

inline constexpr ControllerExpandVolumeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capacity_bytes_{::int64_t{0}},
        node_expansion_required_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerExpandVolumeResponse::ControllerExpandVolumeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerExpandVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerExpandVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerExpandVolumeResponseDefaultTypeInternal() {}
  union {
    ControllerExpandVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerExpandVolumeResponseDefaultTypeInternal _ControllerExpandVolumeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ControllerExpandVolumeRequest_SecretsEntry_DoNotUse::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ControllerExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ControllerExpandVolumeRequest_SecretsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerExpandVolumeRequest_SecretsEntry_DoNotUseDefaultTypeInternal _ControllerExpandVolumeRequest_SecretsEntry_DoNotUse_default_instance_;

inline constexpr CapacityRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : required_bytes_{::int64_t{0}},
        limit_bytes_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CapacityRange::CapacityRange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CapacityRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapacityRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapacityRangeDefaultTypeInternal() {}
  union {
    CapacityRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapacityRangeDefaultTypeInternal _CapacityRange_default_instance_;

inline constexpr VolumeContentSource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeContentSource::VolumeContentSource(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeContentSourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeContentSourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeContentSourceDefaultTypeInternal() {}
  union {
    VolumeContentSource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeContentSourceDefaultTypeInternal _VolumeContentSource_default_instance_;

inline constexpr VolumeCapability::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        access_mode_{nullptr},
        access_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeCapability::VolumeCapability(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeCapabilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeCapabilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeCapabilityDefaultTypeInternal() {}
  union {
    VolumeCapability _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeCapabilityDefaultTypeInternal _VolumeCapability_default_instance_;

inline constexpr Topology::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segments_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Topology::Topology(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopologyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopologyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopologyDefaultTypeInternal() {}
  union {
    Topology _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopologyDefaultTypeInternal _Topology_default_instance_;

inline constexpr Snapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        group_snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_time_{nullptr},
        size_bytes_{::int64_t{0}},
        ready_to_use_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Snapshot::Snapshot(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotDefaultTypeInternal() {}
  union {
    Snapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotDefaultTypeInternal _Snapshot_default_instance_;

inline constexpr ProbeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ready_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ProbeResponse::ProbeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProbeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProbeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProbeResponseDefaultTypeInternal() {}
  union {
    ProbeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProbeResponseDefaultTypeInternal _ProbeResponse_default_instance_;

inline constexpr PluginCapability::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PluginCapability::PluginCapability(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PluginCapabilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginCapabilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginCapabilityDefaultTypeInternal() {}
  union {
    PluginCapability _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginCapabilityDefaultTypeInternal _PluginCapability_default_instance_;

inline constexpr NodeServiceCapability::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR NodeServiceCapability::NodeServiceCapability(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeServiceCapabilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeServiceCapabilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeServiceCapabilityDefaultTypeInternal() {}
  union {
    NodeServiceCapability _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeServiceCapabilityDefaultTypeInternal _NodeServiceCapability_default_instance_;

inline constexpr NodeGetVolumeStatsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        usage_{},
        volume_condition_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeGetVolumeStatsResponse::NodeGetVolumeStatsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeGetVolumeStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeGetVolumeStatsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeGetVolumeStatsResponseDefaultTypeInternal() {}
  union {
    NodeGetVolumeStatsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeGetVolumeStatsResponseDefaultTypeInternal _NodeGetVolumeStatsResponse_default_instance_;

inline constexpr ListVolumesResponse_VolumeStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        published_node_ids_{},
        volume_condition_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListVolumesResponse_VolumeStatus::ListVolumesResponse_VolumeStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListVolumesResponse_VolumeStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVolumesResponse_VolumeStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVolumesResponse_VolumeStatusDefaultTypeInternal() {}
  union {
    ListVolumesResponse_VolumeStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVolumesResponse_VolumeStatusDefaultTypeInternal _ListVolumesResponse_VolumeStatus_default_instance_;

inline constexpr ListSnapshotsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secrets_{},
        starting_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_entries_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListSnapshotsRequest::ListSnapshotsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListSnapshotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSnapshotsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSnapshotsRequestDefaultTypeInternal() {}
  union {
    ListSnapshotsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSnapshotsRequestDefaultTypeInternal _ListSnapshotsRequest_default_instance_;

inline constexpr GroupControllerServiceCapability::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GroupControllerServiceCapability::GroupControllerServiceCapability(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupControllerServiceCapabilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupControllerServiceCapabilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupControllerServiceCapabilityDefaultTypeInternal() {}
  union {
    GroupControllerServiceCapability _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupControllerServiceCapabilityDefaultTypeInternal _GroupControllerServiceCapability_default_instance_;

inline constexpr GetVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshot_ids_{},
        secrets_{},
        group_snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetVolumeGroupSnapshotRequest::GetVolumeGroupSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetVolumeGroupSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVolumeGroupSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVolumeGroupSnapshotRequestDefaultTypeInternal() {}
  union {
    GetVolumeGroupSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVolumeGroupSnapshotRequestDefaultTypeInternal _GetVolumeGroupSnapshotRequest_default_instance_;

inline constexpr GetPluginInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : manifest_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vendor_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPluginInfoResponse::GetPluginInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPluginInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPluginInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPluginInfoResponseDefaultTypeInternal() {}
  union {
    GetPluginInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPluginInfoResponseDefaultTypeInternal _GetPluginInfoResponse_default_instance_;

inline constexpr GetCapacityResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        maximum_volume_size_{nullptr},
        minimum_volume_size_{nullptr},
        available_capacity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetCapacityResponse::GetCapacityResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetCapacityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCapacityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCapacityResponseDefaultTypeInternal() {}
  union {
    GetCapacityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCapacityResponseDefaultTypeInternal _GetCapacityResponse_default_instance_;

inline constexpr DeleteVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secrets_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteVolumeRequest::DeleteVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVolumeRequestDefaultTypeInternal() {}
  union {
    DeleteVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVolumeRequestDefaultTypeInternal _DeleteVolumeRequest_default_instance_;

inline constexpr DeleteVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshot_ids_{},
        secrets_{},
        group_snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteVolumeGroupSnapshotRequest::DeleteVolumeGroupSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteVolumeGroupSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVolumeGroupSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVolumeGroupSnapshotRequestDefaultTypeInternal() {}
  union {
    DeleteVolumeGroupSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVolumeGroupSnapshotRequestDefaultTypeInternal _DeleteVolumeGroupSnapshotRequest_default_instance_;

inline constexpr DeleteSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secrets_{},
        snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteSnapshotRequest::DeleteSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSnapshotRequestDefaultTypeInternal() {}
  union {
    DeleteSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSnapshotRequestDefaultTypeInternal _DeleteSnapshotRequest_default_instance_;

inline constexpr CreateVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : source_volume_ids_{},
        secrets_{},
        parameters_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotRequest::CreateVolumeGroupSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateVolumeGroupSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeGroupSnapshotRequestDefaultTypeInternal() {}
  union {
    CreateVolumeGroupSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeGroupSnapshotRequestDefaultTypeInternal _CreateVolumeGroupSnapshotRequest_default_instance_;

inline constexpr CreateSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secrets_{},
        parameters_{},
        source_volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSnapshotRequest::CreateSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSnapshotRequestDefaultTypeInternal() {}
  union {
    CreateSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSnapshotRequestDefaultTypeInternal _CreateSnapshotRequest_default_instance_;

inline constexpr ControllerUnpublishVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secrets_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerUnpublishVolumeRequest::ControllerUnpublishVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerUnpublishVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerUnpublishVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerUnpublishVolumeRequestDefaultTypeInternal() {}
  union {
    ControllerUnpublishVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerUnpublishVolumeRequestDefaultTypeInternal _ControllerUnpublishVolumeRequest_default_instance_;

inline constexpr ControllerServiceCapability::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerServiceCapability::ControllerServiceCapability(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerServiceCapabilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerServiceCapabilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerServiceCapabilityDefaultTypeInternal() {}
  union {
    ControllerServiceCapability _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerServiceCapabilityDefaultTypeInternal _ControllerServiceCapability_default_instance_;

inline constexpr ControllerPublishVolumeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : publish_context_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerPublishVolumeResponse::ControllerPublishVolumeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerPublishVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerPublishVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerPublishVolumeResponseDefaultTypeInternal() {}
  union {
    ControllerPublishVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerPublishVolumeResponseDefaultTypeInternal _ControllerPublishVolumeResponse_default_instance_;

inline constexpr ControllerModifyVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secrets_{},
        mutable_parameters_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerModifyVolumeRequest::ControllerModifyVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerModifyVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerModifyVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerModifyVolumeRequestDefaultTypeInternal() {}
  union {
    ControllerModifyVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerModifyVolumeRequestDefaultTypeInternal _ControllerModifyVolumeRequest_default_instance_;

inline constexpr ControllerGetVolumeResponse_VolumeStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        published_node_ids_{},
        volume_condition_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerGetVolumeResponse_VolumeStatus::ControllerGetVolumeResponse_VolumeStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerGetVolumeResponse_VolumeStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerGetVolumeResponse_VolumeStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerGetVolumeResponse_VolumeStatusDefaultTypeInternal() {}
  union {
    ControllerGetVolumeResponse_VolumeStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerGetVolumeResponse_VolumeStatusDefaultTypeInternal _ControllerGetVolumeResponse_VolumeStatus_default_instance_;

inline constexpr VolumeGroupSnapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        snapshots_{},
        group_snapshot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_time_{nullptr},
        ready_to_use_{false} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeGroupSnapshot::VolumeGroupSnapshot(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeGroupSnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeGroupSnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeGroupSnapshotDefaultTypeInternal() {}
  union {
    VolumeGroupSnapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeGroupSnapshotDefaultTypeInternal _VolumeGroupSnapshot_default_instance_;

inline constexpr Volume::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        volume_context_{},
        accessible_topology_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_source_{nullptr},
        capacity_bytes_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Volume::Volume(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeDefaultTypeInternal() {}
  union {
    Volume _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeDefaultTypeInternal _Volume_default_instance_;

inline constexpr ValidateVolumeCapabilitiesResponse_Confirmed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : volume_context_{},
        volume_capabilities_{},
        parameters_{},
        mutable_parameters_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_Confirmed::ValidateVolumeCapabilitiesResponse_Confirmed(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ValidateVolumeCapabilitiesResponse_ConfirmedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse_ConfirmedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesResponse_ConfirmedDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesResponse_Confirmed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesResponse_ConfirmedDefaultTypeInternal _ValidateVolumeCapabilitiesResponse_Confirmed_default_instance_;

inline constexpr ValidateVolumeCapabilitiesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : volume_context_{},
        volume_capabilities_{},
        parameters_{},
        secrets_{},
        mutable_parameters_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequest::ValidateVolumeCapabilitiesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ValidateVolumeCapabilitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesRequestDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesRequestDefaultTypeInternal _ValidateVolumeCapabilitiesRequest_default_instance_;

inline constexpr TopologyRequirement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requisite_{},
        preferred_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TopologyRequirement::TopologyRequirement(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopologyRequirementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopologyRequirementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopologyRequirementDefaultTypeInternal() {}
  union {
    TopologyRequirement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopologyRequirementDefaultTypeInternal _TopologyRequirement_default_instance_;

inline constexpr NodeStageVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        publish_context_{},
        secrets_{},
        volume_context_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        staging_target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_capability_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeStageVolumeRequest::NodeStageVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeStageVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeStageVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeStageVolumeRequestDefaultTypeInternal() {}
  union {
    NodeStageVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeStageVolumeRequestDefaultTypeInternal _NodeStageVolumeRequest_default_instance_;

inline constexpr NodePublishVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        publish_context_{},
        secrets_{},
        volume_context_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        staging_target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_capability_{nullptr},
        readonly_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NodePublishVolumeRequest::NodePublishVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodePublishVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodePublishVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodePublishVolumeRequestDefaultTypeInternal() {}
  union {
    NodePublishVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodePublishVolumeRequestDefaultTypeInternal _NodePublishVolumeRequest_default_instance_;

inline constexpr NodeGetInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accessible_topology_{nullptr},
        max_volumes_per_node_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR NodeGetInfoResponse::NodeGetInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeGetInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeGetInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeGetInfoResponseDefaultTypeInternal() {}
  union {
    NodeGetInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeGetInfoResponseDefaultTypeInternal _NodeGetInfoResponse_default_instance_;

inline constexpr NodeGetCapabilitiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capabilities_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeGetCapabilitiesResponse::NodeGetCapabilitiesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeGetCapabilitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeGetCapabilitiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeGetCapabilitiesResponseDefaultTypeInternal() {}
  union {
    NodeGetCapabilitiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeGetCapabilitiesResponseDefaultTypeInternal _NodeGetCapabilitiesResponse_default_instance_;

inline constexpr NodeExpandVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        secrets_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        staging_target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        capacity_range_{nullptr},
        volume_capability_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeExpandVolumeRequest::NodeExpandVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeExpandVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeExpandVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeExpandVolumeRequestDefaultTypeInternal() {}
  union {
    NodeExpandVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeExpandVolumeRequestDefaultTypeInternal _NodeExpandVolumeRequest_default_instance_;

inline constexpr ListSnapshotsResponse_Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        snapshot_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListSnapshotsResponse_Entry::ListSnapshotsResponse_Entry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListSnapshotsResponse_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSnapshotsResponse_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSnapshotsResponse_EntryDefaultTypeInternal() {}
  union {
    ListSnapshotsResponse_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSnapshotsResponse_EntryDefaultTypeInternal _ListSnapshotsResponse_Entry_default_instance_;

inline constexpr GroupControllerGetCapabilitiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capabilities_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GroupControllerGetCapabilitiesResponse::GroupControllerGetCapabilitiesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupControllerGetCapabilitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupControllerGetCapabilitiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupControllerGetCapabilitiesResponseDefaultTypeInternal() {}
  union {
    GroupControllerGetCapabilitiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupControllerGetCapabilitiesResponseDefaultTypeInternal _GroupControllerGetCapabilitiesResponse_default_instance_;

inline constexpr GetPluginCapabilitiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capabilities_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPluginCapabilitiesResponse::GetPluginCapabilitiesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPluginCapabilitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPluginCapabilitiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPluginCapabilitiesResponseDefaultTypeInternal() {}
  union {
    GetPluginCapabilitiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPluginCapabilitiesResponseDefaultTypeInternal _GetPluginCapabilitiesResponse_default_instance_;

inline constexpr GetCapacityRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        volume_capabilities_{},
        parameters_{},
        accessible_topology_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetCapacityRequest::GetCapacityRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetCapacityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCapacityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCapacityRequestDefaultTypeInternal() {}
  union {
    GetCapacityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCapacityRequestDefaultTypeInternal _GetCapacityRequest_default_instance_;

inline constexpr CreateSnapshotResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        snapshot_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSnapshotResponse::CreateSnapshotResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSnapshotResponseDefaultTypeInternal() {}
  union {
    CreateSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSnapshotResponseDefaultTypeInternal _CreateSnapshotResponse_default_instance_;

inline constexpr ControllerPublishVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        secrets_{},
        volume_context_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_capability_{nullptr},
        readonly_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerPublishVolumeRequest::ControllerPublishVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerPublishVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerPublishVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerPublishVolumeRequestDefaultTypeInternal() {}
  union {
    ControllerPublishVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerPublishVolumeRequestDefaultTypeInternal _ControllerPublishVolumeRequest_default_instance_;

inline constexpr ControllerGetCapabilitiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capabilities_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerGetCapabilitiesResponse::ControllerGetCapabilitiesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerGetCapabilitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerGetCapabilitiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerGetCapabilitiesResponseDefaultTypeInternal() {}
  union {
    ControllerGetCapabilitiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerGetCapabilitiesResponseDefaultTypeInternal _ControllerGetCapabilitiesResponse_default_instance_;

inline constexpr ControllerExpandVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        secrets_{},
        volume_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        capacity_range_{nullptr},
        volume_capability_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerExpandVolumeRequest::ControllerExpandVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerExpandVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerExpandVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerExpandVolumeRequestDefaultTypeInternal() {}
  union {
    ControllerExpandVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerExpandVolumeRequestDefaultTypeInternal _ControllerExpandVolumeRequest_default_instance_;

inline constexpr ValidateVolumeCapabilitiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        confirmed_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponse::ValidateVolumeCapabilitiesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ValidateVolumeCapabilitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateVolumeCapabilitiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateVolumeCapabilitiesResponseDefaultTypeInternal() {}
  union {
    ValidateVolumeCapabilitiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateVolumeCapabilitiesResponseDefaultTypeInternal _ValidateVolumeCapabilitiesResponse_default_instance_;

inline constexpr ListVolumesResponse_Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        volume_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListVolumesResponse_Entry::ListVolumesResponse_Entry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListVolumesResponse_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVolumesResponse_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVolumesResponse_EntryDefaultTypeInternal() {}
  union {
    ListVolumesResponse_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVolumesResponse_EntryDefaultTypeInternal _ListVolumesResponse_Entry_default_instance_;

inline constexpr ListSnapshotsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        next_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListSnapshotsResponse::ListSnapshotsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListSnapshotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSnapshotsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSnapshotsResponseDefaultTypeInternal() {}
  union {
    ListSnapshotsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSnapshotsResponseDefaultTypeInternal _ListSnapshotsResponse_default_instance_;

inline constexpr GetVolumeGroupSnapshotResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        group_snapshot_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetVolumeGroupSnapshotResponse::GetVolumeGroupSnapshotResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetVolumeGroupSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVolumeGroupSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVolumeGroupSnapshotResponseDefaultTypeInternal() {}
  union {
    GetVolumeGroupSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVolumeGroupSnapshotResponseDefaultTypeInternal _GetVolumeGroupSnapshotResponse_default_instance_;

inline constexpr CreateVolumeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        volume_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateVolumeResponse::CreateVolumeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeResponseDefaultTypeInternal() {}
  union {
    CreateVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeResponseDefaultTypeInternal _CreateVolumeResponse_default_instance_;

inline constexpr CreateVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        volume_capabilities_{},
        parameters_{},
        secrets_{},
        mutable_parameters_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        capacity_range_{nullptr},
        volume_content_source_{nullptr},
        accessibility_requirements_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateVolumeRequest::CreateVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeRequestDefaultTypeInternal() {}
  union {
    CreateVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeRequestDefaultTypeInternal _CreateVolumeRequest_default_instance_;

inline constexpr CreateVolumeGroupSnapshotResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        group_snapshot_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotResponse::CreateVolumeGroupSnapshotResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateVolumeGroupSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVolumeGroupSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVolumeGroupSnapshotResponseDefaultTypeInternal() {}
  union {
    CreateVolumeGroupSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVolumeGroupSnapshotResponseDefaultTypeInternal _CreateVolumeGroupSnapshotResponse_default_instance_;

inline constexpr ControllerGetVolumeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        volume_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerGetVolumeResponse::ControllerGetVolumeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControllerGetVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerGetVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerGetVolumeResponseDefaultTypeInternal() {}
  union {
    ControllerGetVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerGetVolumeResponseDefaultTypeInternal _ControllerGetVolumeResponse_default_instance_;

inline constexpr ListVolumesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        next_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListVolumesResponse::ListVolumesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListVolumesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVolumesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVolumesResponseDefaultTypeInternal() {}
  union {
    ListVolumesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVolumesResponseDefaultTypeInternal _ListVolumesResponse_default_instance_;
}  // namespace v1
}  // namespace csi
static ::_pb::Metadata file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[124];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[7];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto = nullptr;
const ::uint32_t TableStruct_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse_ManifestEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse_ManifestEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse_ManifestEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse_ManifestEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse, _impl_.vendor_version_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginInfoResponse, _impl_.manifest_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginCapabilitiesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginCapabilitiesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetPluginCapabilitiesResponse, _impl_.capabilities_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability_Service, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability_Service, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability_VolumeExpansion, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability_VolumeExpansion, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ProbeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ProbeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ProbeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ProbeResponse, _impl_.ready_),
    0,
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_ParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_ParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_ParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_ParametersEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_MutableParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_MutableParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_MutableParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest_MutableParametersEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.capacity_range_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.volume_capabilities_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.volume_content_source_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.accessibility_requirements_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeRequest, _impl_.mutable_parameters_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    1,
    2,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource_SnapshotSource, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource_SnapshotSource, _impl_.snapshot_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource_VolumeSource, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource_VolumeSource, _impl_.volume_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeResponse, _impl_.volume_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability_BlockVolume, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability_MountVolume, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability_MountVolume, _impl_.fs_type_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability_MountVolume, _impl_.mount_flags_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability_MountVolume, _impl_.volume_mount_group_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability_AccessMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability_AccessMode, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability, _impl_.access_mode_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability, _impl_.access_type_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::CapacityRange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CapacityRange, _impl_.required_bytes_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CapacityRange, _impl_.limit_bytes_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume_VolumeContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume_VolumeContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume_VolumeContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume_VolumeContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume, _impl_.capacity_bytes_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume, _impl_.volume_context_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume, _impl_.content_source_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Volume, _impl_.accessible_topology_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::TopologyRequirement, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::TopologyRequirement, _impl_.requisite_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::TopologyRequirement, _impl_.preferred_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Topology_SegmentsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Topology_SegmentsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::Topology_SegmentsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Topology_SegmentsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::Topology, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::Topology, _impl_.segments_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeRequest, _impl_.secrets_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _impl_.node_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _impl_.volume_capability_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _impl_.readonly_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeRequest, _impl_.volume_context_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerPublishVolumeResponse, _impl_.publish_context_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest, _impl_.node_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeRequest, _impl_.secrets_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerUnpublishVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest, _impl_.volume_context_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest, _impl_.volume_capabilities_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesRequest, _impl_.mutable_parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.volume_context_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.volume_capabilities_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.mutable_parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse, _impl_.confirmed_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ValidateVolumeCapabilitiesResponse, _impl_.message_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesRequest, _impl_.max_entries_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesRequest, _impl_.starting_token_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_VolumeStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_VolumeStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_VolumeStatus, _impl_.published_node_ids_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_VolumeStatus, _impl_.volume_condition_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_Entry, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_Entry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_Entry, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse_Entry, _impl_.status_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListVolumesResponse, _impl_.next_token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse_VolumeStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse_VolumeStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse_VolumeStatus, _impl_.published_node_ids_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse_VolumeStatus, _impl_.volume_condition_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetVolumeResponse, _impl_.status_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeRequest, _impl_.mutable_parameters_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerModifyVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest_ParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest_ParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest_ParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest_ParametersEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest, _impl_.volume_capabilities_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityRequest, _impl_.accessible_topology_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityResponse, _impl_.available_capacity_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityResponse, _impl_.maximum_volume_size_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetCapacityResponse, _impl_.minimum_volume_size_),
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetCapabilitiesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetCapabilitiesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerGetCapabilitiesResponse, _impl_.capabilities_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerServiceCapability_RPC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerServiceCapability_RPC, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerServiceCapability, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerServiceCapability, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerServiceCapability, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_ParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_ParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_ParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest_ParametersEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest, _impl_.source_volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotRequest, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateSnapshotResponse, _impl_.snapshot_),
    0,
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _impl_.size_bytes_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _impl_.snapshot_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _impl_.source_volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _impl_.creation_time_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _impl_.ready_to_use_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::Snapshot, _impl_.group_snapshot_id_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotRequest, _impl_.snapshot_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotRequest, _impl_.secrets_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest, _impl_.max_entries_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest, _impl_.starting_token_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest, _impl_.source_volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest, _impl_.snapshot_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsResponse_Entry, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsResponse_Entry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsResponse_Entry, _impl_.snapshot_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsResponse, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ListSnapshotsResponse, _impl_.next_token_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest, _impl_.capacity_range_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeRequest, _impl_.volume_capability_),
    ~0u,
    0,
    ~0u,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeResponse, _impl_.capacity_bytes_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerExpandVolumeResponse, _impl_.node_expansion_required_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_PublishContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_PublishContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_PublishContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_PublishContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _impl_.publish_context_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _impl_.staging_target_path_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _impl_.volume_capability_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeRequest, _impl_.volume_context_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeStageVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnstageVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnstageVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnstageVolumeRequest, _impl_.staging_target_path_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnstageVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_PublishContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_PublishContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_PublishContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_PublishContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.publish_context_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.staging_target_path_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.target_path_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.volume_capability_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.readonly_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeRequest, _impl_.volume_context_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodePublishVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnpublishVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnpublishVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnpublishVolumeRequest, _impl_.target_path_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeUnpublishVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsRequest, _impl_.volume_path_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsRequest, _impl_.staging_target_path_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsResponse, _impl_.usage_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetVolumeStatsResponse, _impl_.volume_condition_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeUsage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeUsage, _impl_.available_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeUsage, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeUsage, _impl_.used_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeUsage, _impl_.unit_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCondition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCondition, _impl_.abnormal_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCondition, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetCapabilitiesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetCapabilitiesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetCapabilitiesResponse, _impl_.capabilities_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeServiceCapability_RPC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeServiceCapability_RPC, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeServiceCapability, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeServiceCapability, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeServiceCapability, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetInfoResponse, _impl_.node_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetInfoResponse, _impl_.max_volumes_per_node_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeGetInfoResponse, _impl_.accessible_topology_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _impl_.volume_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _impl_.volume_path_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _impl_.capacity_range_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _impl_.staging_target_path_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _impl_.volume_capability_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeRequest, _impl_.secrets_),
    ~0u,
    ~0u,
    0,
    ~0u,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeExpandVolumeResponse, _impl_.capacity_bytes_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerGetCapabilitiesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerGetCapabilitiesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerGetCapabilitiesResponse, _impl_.capabilities_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerServiceCapability_RPC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerServiceCapability_RPC, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerServiceCapability, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerServiceCapability, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerServiceCapability, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest, _impl_.source_volume_ids_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotRequest, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::CreateVolumeGroupSnapshotResponse, _impl_.group_snapshot_),
    0,
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeGroupSnapshot, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeGroupSnapshot, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeGroupSnapshot, _impl_.group_snapshot_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeGroupSnapshot, _impl_.snapshots_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeGroupSnapshot, _impl_.creation_time_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeGroupSnapshot, _impl_.ready_to_use_),
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest, _impl_.group_snapshot_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest, _impl_.snapshot_ids_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotRequest, _impl_.secrets_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::DeleteVolumeGroupSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest, _impl_.group_snapshot_id_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest, _impl_.snapshot_ids_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotRequest, _impl_.secrets_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csi::v1::GetVolumeGroupSnapshotResponse, _impl_.group_snapshot_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::csi::v1::GetPluginInfoRequest)},
        {8, 18, -1, sizeof(::csi::v1::GetPluginInfoResponse_ManifestEntry_DoNotUse)},
        {20, -1, -1, sizeof(::csi::v1::GetPluginInfoResponse)},
        {31, -1, -1, sizeof(::csi::v1::GetPluginCapabilitiesRequest)},
        {39, -1, -1, sizeof(::csi::v1::GetPluginCapabilitiesResponse)},
        {48, -1, -1, sizeof(::csi::v1::PluginCapability_Service)},
        {57, -1, -1, sizeof(::csi::v1::PluginCapability_VolumeExpansion)},
        {66, -1, -1, sizeof(::csi::v1::PluginCapability)},
        {77, -1, -1, sizeof(::csi::v1::ProbeRequest)},
        {85, 94, -1, sizeof(::csi::v1::ProbeResponse)},
        {95, 105, -1, sizeof(::csi::v1::CreateVolumeRequest_ParametersEntry_DoNotUse)},
        {107, 117, -1, sizeof(::csi::v1::CreateVolumeRequest_SecretsEntry_DoNotUse)},
        {119, 129, -1, sizeof(::csi::v1::CreateVolumeRequest_MutableParametersEntry_DoNotUse)},
        {131, 147, -1, sizeof(::csi::v1::CreateVolumeRequest)},
        {155, -1, -1, sizeof(::csi::v1::VolumeContentSource_SnapshotSource)},
        {164, -1, -1, sizeof(::csi::v1::VolumeContentSource_VolumeSource)},
        {173, -1, -1, sizeof(::csi::v1::VolumeContentSource)},
        {184, 193, -1, sizeof(::csi::v1::CreateVolumeResponse)},
        {194, -1, -1, sizeof(::csi::v1::VolumeCapability_BlockVolume)},
        {202, -1, -1, sizeof(::csi::v1::VolumeCapability_MountVolume)},
        {213, -1, -1, sizeof(::csi::v1::VolumeCapability_AccessMode)},
        {222, 234, -1, sizeof(::csi::v1::VolumeCapability)},
        {237, -1, -1, sizeof(::csi::v1::CapacityRange)},
        {247, 257, -1, sizeof(::csi::v1::Volume_VolumeContextEntry_DoNotUse)},
        {259, 272, -1, sizeof(::csi::v1::Volume)},
        {277, -1, -1, sizeof(::csi::v1::TopologyRequirement)},
        {287, 297, -1, sizeof(::csi::v1::Topology_SegmentsEntry_DoNotUse)},
        {299, -1, -1, sizeof(::csi::v1::Topology)},
        {308, 318, -1, sizeof(::csi::v1::DeleteVolumeRequest_SecretsEntry_DoNotUse)},
        {320, -1, -1, sizeof(::csi::v1::DeleteVolumeRequest)},
        {330, -1, -1, sizeof(::csi::v1::DeleteVolumeResponse)},
        {338, 348, -1, sizeof(::csi::v1::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse)},
        {350, 360, -1, sizeof(::csi::v1::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse)},
        {362, 376, -1, sizeof(::csi::v1::ControllerPublishVolumeRequest)},
        {382, 392, -1, sizeof(::csi::v1::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse)},
        {394, -1, -1, sizeof(::csi::v1::ControllerPublishVolumeResponse)},
        {403, 413, -1, sizeof(::csi::v1::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse)},
        {415, -1, -1, sizeof(::csi::v1::ControllerUnpublishVolumeRequest)},
        {426, -1, -1, sizeof(::csi::v1::ControllerUnpublishVolumeResponse)},
        {434, 444, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse)},
        {446, 456, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse)},
        {458, 468, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse)},
        {470, 480, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse)},
        {482, -1, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesRequest)},
        {496, 506, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse)},
        {508, 518, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse)},
        {520, 530, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse)},
        {532, -1, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed)},
        {544, 554, -1, sizeof(::csi::v1::ValidateVolumeCapabilitiesResponse)},
        {556, -1, -1, sizeof(::csi::v1::ListVolumesRequest)},
        {566, 576, -1, sizeof(::csi::v1::ListVolumesResponse_VolumeStatus)},
        {578, 588, -1, sizeof(::csi::v1::ListVolumesResponse_Entry)},
        {590, -1, -1, sizeof(::csi::v1::ListVolumesResponse)},
        {600, -1, -1, sizeof(::csi::v1::ControllerGetVolumeRequest)},
        {609, 619, -1, sizeof(::csi::v1::ControllerGetVolumeResponse_VolumeStatus)},
        {621, 631, -1, sizeof(::csi::v1::ControllerGetVolumeResponse)},
        {633, 643, -1, sizeof(::csi::v1::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse)},
        {645, 655, -1, sizeof(::csi::v1::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse)},
        {657, -1, -1, sizeof(::csi::v1::ControllerModifyVolumeRequest)},
        {668, -1, -1, sizeof(::csi::v1::ControllerModifyVolumeResponse)},
        {676, 686, -1, sizeof(::csi::v1::GetCapacityRequest_ParametersEntry_DoNotUse)},
        {688, 699, -1, sizeof(::csi::v1::GetCapacityRequest)},
        {702, 713, -1, sizeof(::csi::v1::GetCapacityResponse)},
        {716, -1, -1, sizeof(::csi::v1::ControllerGetCapabilitiesRequest)},
        {724, -1, -1, sizeof(::csi::v1::ControllerGetCapabilitiesResponse)},
        {733, -1, -1, sizeof(::csi::v1::ControllerServiceCapability_RPC)},
        {742, -1, -1, sizeof(::csi::v1::ControllerServiceCapability)},
        {752, 762, -1, sizeof(::csi::v1::CreateSnapshotRequest_SecretsEntry_DoNotUse)},
        {764, 774, -1, sizeof(::csi::v1::CreateSnapshotRequest_ParametersEntry_DoNotUse)},
        {776, -1, -1, sizeof(::csi::v1::CreateSnapshotRequest)},
        {788, 797, -1, sizeof(::csi::v1::CreateSnapshotResponse)},
        {798, 812, -1, sizeof(::csi::v1::Snapshot)},
        {818, 828, -1, sizeof(::csi::v1::DeleteSnapshotRequest_SecretsEntry_DoNotUse)},
        {830, -1, -1, sizeof(::csi::v1::DeleteSnapshotRequest)},
        {840, -1, -1, sizeof(::csi::v1::DeleteSnapshotResponse)},
        {848, 858, -1, sizeof(::csi::v1::ListSnapshotsRequest_SecretsEntry_DoNotUse)},
        {860, -1, -1, sizeof(::csi::v1::ListSnapshotsRequest)},
        {873, 882, -1, sizeof(::csi::v1::ListSnapshotsResponse_Entry)},
        {883, -1, -1, sizeof(::csi::v1::ListSnapshotsResponse)},
        {893, 903, -1, sizeof(::csi::v1::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse)},
        {905, 917, -1, sizeof(::csi::v1::ControllerExpandVolumeRequest)},
        {921, -1, -1, sizeof(::csi::v1::ControllerExpandVolumeResponse)},
        {931, 941, -1, sizeof(::csi::v1::NodeStageVolumeRequest_PublishContextEntry_DoNotUse)},
        {943, 953, -1, sizeof(::csi::v1::NodeStageVolumeRequest_SecretsEntry_DoNotUse)},
        {955, 965, -1, sizeof(::csi::v1::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse)},
        {967, 981, -1, sizeof(::csi::v1::NodeStageVolumeRequest)},
        {987, -1, -1, sizeof(::csi::v1::NodeStageVolumeResponse)},
        {995, -1, -1, sizeof(::csi::v1::NodeUnstageVolumeRequest)},
        {1005, -1, -1, sizeof(::csi::v1::NodeUnstageVolumeResponse)},
        {1013, 1023, -1, sizeof(::csi::v1::NodePublishVolumeRequest_PublishContextEntry_DoNotUse)},
        {1025, 1035, -1, sizeof(::csi::v1::NodePublishVolumeRequest_SecretsEntry_DoNotUse)},
        {1037, 1047, -1, sizeof(::csi::v1::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse)},
        {1049, 1065, -1, sizeof(::csi::v1::NodePublishVolumeRequest)},
        {1073, -1, -1, sizeof(::csi::v1::NodePublishVolumeResponse)},
        {1081, -1, -1, sizeof(::csi::v1::NodeUnpublishVolumeRequest)},
        {1091, -1, -1, sizeof(::csi::v1::NodeUnpublishVolumeResponse)},
        {1099, -1, -1, sizeof(::csi::v1::NodeGetVolumeStatsRequest)},
        {1110, 1120, -1, sizeof(::csi::v1::NodeGetVolumeStatsResponse)},
        {1122, -1, -1, sizeof(::csi::v1::VolumeUsage)},
        {1134, -1, -1, sizeof(::csi::v1::VolumeCondition)},
        {1144, -1, -1, sizeof(::csi::v1::NodeGetCapabilitiesRequest)},
        {1152, -1, -1, sizeof(::csi::v1::NodeGetCapabilitiesResponse)},
        {1161, -1, -1, sizeof(::csi::v1::NodeServiceCapability_RPC)},
        {1170, -1, -1, sizeof(::csi::v1::NodeServiceCapability)},
        {1180, -1, -1, sizeof(::csi::v1::NodeGetInfoRequest)},
        {1188, 1199, -1, sizeof(::csi::v1::NodeGetInfoResponse)},
        {1202, 1212, -1, sizeof(::csi::v1::NodeExpandVolumeRequest_SecretsEntry_DoNotUse)},
        {1214, 1228, -1, sizeof(::csi::v1::NodeExpandVolumeRequest)},
        {1234, -1, -1, sizeof(::csi::v1::NodeExpandVolumeResponse)},
        {1243, -1, -1, sizeof(::csi::v1::GroupControllerGetCapabilitiesRequest)},
        {1251, -1, -1, sizeof(::csi::v1::GroupControllerGetCapabilitiesResponse)},
        {1260, -1, -1, sizeof(::csi::v1::GroupControllerServiceCapability_RPC)},
        {1269, -1, -1, sizeof(::csi::v1::GroupControllerServiceCapability)},
        {1279, 1289, -1, sizeof(::csi::v1::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse)},
        {1291, 1301, -1, sizeof(::csi::v1::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse)},
        {1303, -1, -1, sizeof(::csi::v1::CreateVolumeGroupSnapshotRequest)},
        {1315, 1324, -1, sizeof(::csi::v1::CreateVolumeGroupSnapshotResponse)},
        {1325, 1337, -1, sizeof(::csi::v1::VolumeGroupSnapshot)},
        {1341, 1351, -1, sizeof(::csi::v1::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse)},
        {1353, -1, -1, sizeof(::csi::v1::DeleteVolumeGroupSnapshotRequest)},
        {1364, -1, -1, sizeof(::csi::v1::DeleteVolumeGroupSnapshotResponse)},
        {1372, 1382, -1, sizeof(::csi::v1::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse)},
        {1384, -1, -1, sizeof(::csi::v1::GetVolumeGroupSnapshotRequest)},
        {1395, 1404, -1, sizeof(::csi::v1::GetVolumeGroupSnapshotResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::csi::v1::_GetPluginInfoRequest_default_instance_._instance,
    &::csi::v1::_GetPluginInfoResponse_ManifestEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_GetPluginInfoResponse_default_instance_._instance,
    &::csi::v1::_GetPluginCapabilitiesRequest_default_instance_._instance,
    &::csi::v1::_GetPluginCapabilitiesResponse_default_instance_._instance,
    &::csi::v1::_PluginCapability_Service_default_instance_._instance,
    &::csi::v1::_PluginCapability_VolumeExpansion_default_instance_._instance,
    &::csi::v1::_PluginCapability_default_instance_._instance,
    &::csi::v1::_ProbeRequest_default_instance_._instance,
    &::csi::v1::_ProbeResponse_default_instance_._instance,
    &::csi::v1::_CreateVolumeRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_CreateVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_CreateVolumeRequest_MutableParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_CreateVolumeRequest_default_instance_._instance,
    &::csi::v1::_VolumeContentSource_SnapshotSource_default_instance_._instance,
    &::csi::v1::_VolumeContentSource_VolumeSource_default_instance_._instance,
    &::csi::v1::_VolumeContentSource_default_instance_._instance,
    &::csi::v1::_CreateVolumeResponse_default_instance_._instance,
    &::csi::v1::_VolumeCapability_BlockVolume_default_instance_._instance,
    &::csi::v1::_VolumeCapability_MountVolume_default_instance_._instance,
    &::csi::v1::_VolumeCapability_AccessMode_default_instance_._instance,
    &::csi::v1::_VolumeCapability_default_instance_._instance,
    &::csi::v1::_CapacityRange_default_instance_._instance,
    &::csi::v1::_Volume_VolumeContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_Volume_default_instance_._instance,
    &::csi::v1::_TopologyRequirement_default_instance_._instance,
    &::csi::v1::_Topology_SegmentsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_Topology_default_instance_._instance,
    &::csi::v1::_DeleteVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_DeleteVolumeRequest_default_instance_._instance,
    &::csi::v1::_DeleteVolumeResponse_default_instance_._instance,
    &::csi::v1::_ControllerPublishVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ControllerPublishVolumeRequest_default_instance_._instance,
    &::csi::v1::_ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ControllerPublishVolumeResponse_default_instance_._instance,
    &::csi::v1::_ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ControllerUnpublishVolumeRequest_default_instance_._instance,
    &::csi::v1::_ControllerUnpublishVolumeResponse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesRequest_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesResponse_Confirmed_default_instance_._instance,
    &::csi::v1::_ValidateVolumeCapabilitiesResponse_default_instance_._instance,
    &::csi::v1::_ListVolumesRequest_default_instance_._instance,
    &::csi::v1::_ListVolumesResponse_VolumeStatus_default_instance_._instance,
    &::csi::v1::_ListVolumesResponse_Entry_default_instance_._instance,
    &::csi::v1::_ListVolumesResponse_default_instance_._instance,
    &::csi::v1::_ControllerGetVolumeRequest_default_instance_._instance,
    &::csi::v1::_ControllerGetVolumeResponse_VolumeStatus_default_instance_._instance,
    &::csi::v1::_ControllerGetVolumeResponse_default_instance_._instance,
    &::csi::v1::_ControllerModifyVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ControllerModifyVolumeRequest_default_instance_._instance,
    &::csi::v1::_ControllerModifyVolumeResponse_default_instance_._instance,
    &::csi::v1::_GetCapacityRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_GetCapacityRequest_default_instance_._instance,
    &::csi::v1::_GetCapacityResponse_default_instance_._instance,
    &::csi::v1::_ControllerGetCapabilitiesRequest_default_instance_._instance,
    &::csi::v1::_ControllerGetCapabilitiesResponse_default_instance_._instance,
    &::csi::v1::_ControllerServiceCapability_RPC_default_instance_._instance,
    &::csi::v1::_ControllerServiceCapability_default_instance_._instance,
    &::csi::v1::_CreateSnapshotRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_CreateSnapshotRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_CreateSnapshotRequest_default_instance_._instance,
    &::csi::v1::_CreateSnapshotResponse_default_instance_._instance,
    &::csi::v1::_Snapshot_default_instance_._instance,
    &::csi::v1::_DeleteSnapshotRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_DeleteSnapshotRequest_default_instance_._instance,
    &::csi::v1::_DeleteSnapshotResponse_default_instance_._instance,
    &::csi::v1::_ListSnapshotsRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ListSnapshotsRequest_default_instance_._instance,
    &::csi::v1::_ListSnapshotsResponse_Entry_default_instance_._instance,
    &::csi::v1::_ListSnapshotsResponse_default_instance_._instance,
    &::csi::v1::_ControllerExpandVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_ControllerExpandVolumeRequest_default_instance_._instance,
    &::csi::v1::_ControllerExpandVolumeResponse_default_instance_._instance,
    &::csi::v1::_NodeStageVolumeRequest_PublishContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_NodeStageVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_NodeStageVolumeRequest_VolumeContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_NodeStageVolumeRequest_default_instance_._instance,
    &::csi::v1::_NodeStageVolumeResponse_default_instance_._instance,
    &::csi::v1::_NodeUnstageVolumeRequest_default_instance_._instance,
    &::csi::v1::_NodeUnstageVolumeResponse_default_instance_._instance,
    &::csi::v1::_NodePublishVolumeRequest_PublishContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_NodePublishVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_NodePublishVolumeRequest_VolumeContextEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_NodePublishVolumeRequest_default_instance_._instance,
    &::csi::v1::_NodePublishVolumeResponse_default_instance_._instance,
    &::csi::v1::_NodeUnpublishVolumeRequest_default_instance_._instance,
    &::csi::v1::_NodeUnpublishVolumeResponse_default_instance_._instance,
    &::csi::v1::_NodeGetVolumeStatsRequest_default_instance_._instance,
    &::csi::v1::_NodeGetVolumeStatsResponse_default_instance_._instance,
    &::csi::v1::_VolumeUsage_default_instance_._instance,
    &::csi::v1::_VolumeCondition_default_instance_._instance,
    &::csi::v1::_NodeGetCapabilitiesRequest_default_instance_._instance,
    &::csi::v1::_NodeGetCapabilitiesResponse_default_instance_._instance,
    &::csi::v1::_NodeServiceCapability_RPC_default_instance_._instance,
    &::csi::v1::_NodeServiceCapability_default_instance_._instance,
    &::csi::v1::_NodeGetInfoRequest_default_instance_._instance,
    &::csi::v1::_NodeGetInfoResponse_default_instance_._instance,
    &::csi::v1::_NodeExpandVolumeRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_NodeExpandVolumeRequest_default_instance_._instance,
    &::csi::v1::_NodeExpandVolumeResponse_default_instance_._instance,
    &::csi::v1::_GroupControllerGetCapabilitiesRequest_default_instance_._instance,
    &::csi::v1::_GroupControllerGetCapabilitiesResponse_default_instance_._instance,
    &::csi::v1::_GroupControllerServiceCapability_RPC_default_instance_._instance,
    &::csi::v1::_GroupControllerServiceCapability_default_instance_._instance,
    &::csi::v1::_CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_CreateVolumeGroupSnapshotRequest_default_instance_._instance,
    &::csi::v1::_CreateVolumeGroupSnapshotResponse_default_instance_._instance,
    &::csi::v1::_VolumeGroupSnapshot_default_instance_._instance,
    &::csi::v1::_DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_DeleteVolumeGroupSnapshotRequest_default_instance_._instance,
    &::csi::v1::_DeleteVolumeGroupSnapshotResponse_default_instance_._instance,
    &::csi::v1::_GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse_default_instance_._instance,
    &::csi::v1::_GetVolumeGroupSnapshotRequest_default_instance_._instance,
    &::csi::v1::_GetVolumeGroupSnapshotResponse_default_instance_._instance,
};
const char descriptor_table_protodef_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\031lib/cxx/.protoc/csi.proto\022\006csi.v1\032 goo"
    "gle/protobuf/descriptor.proto\032\037google/pr"
    "otobuf/timestamp.proto\032\036google/protobuf/"
    "wrappers.proto\"\026\n\024GetPluginInfoRequest\"\255"
    "\001\n\025GetPluginInfoResponse\022\014\n\004name\030\001 \001(\t\022\026"
    "\n\016vendor_version\030\002 \001(\t\022=\n\010manifest\030\003 \003(\013"
    "2+.csi.v1.GetPluginInfoResponse.Manifest"
    "Entry\032/\n\rManifestEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\t:\0028\001\"\036\n\034GetPluginCapabilitiesR"
    "equest\"O\n\035GetPluginCapabilitiesResponse\022"
    ".\n\014capabilities\030\001 \003(\0132\030.csi.v1.PluginCap"
    "ability\"\312\003\n\020PluginCapability\0223\n\007service\030"
    "\001 \001(\0132 .csi.v1.PluginCapability.ServiceH"
    "\000\022D\n\020volume_expansion\030\002 \001(\0132(.csi.v1.Plu"
    "ginCapability.VolumeExpansionH\000\032\264\001\n\007Serv"
    "ice\0223\n\004type\030\001 \001(\0162%.csi.v1.PluginCapabil"
    "ity.Service.Type\"t\n\004Type\022\013\n\007UNKNOWN\020\000\022\026\n"
    "\022CONTROLLER_SERVICE\020\001\022$\n VOLUME_ACCESSIB"
    "ILITY_CONSTRAINTS\020\002\022!\n\030GROUP_CONTROLLER_"
    "SERVICE\020\003\032\003\240B\001\032|\n\017VolumeExpansion\022;\n\004typ"
    "e\030\001 \001(\0162-.csi.v1.PluginCapability.Volume"
    "Expansion.Type\",\n\004Type\022\013\n\007UNKNOWN\020\000\022\n\n\006O"
    "NLINE\020\001\022\013\n\007OFFLINE\020\002B\006\n\004type\"\016\n\014ProbeReq"
    "uest\":\n\rProbeResponse\022)\n\005ready\030\001 \001(\0132\032.g"
    "oogle.protobuf.BoolValue\"\371\004\n\023CreateVolum"
    "eRequest\022\014\n\004name\030\001 \001(\t\022-\n\016capacity_range"
    "\030\002 \001(\0132\025.csi.v1.CapacityRange\0225\n\023volume_"
    "capabilities\030\003 \003(\0132\030.csi.v1.VolumeCapabi"
    "lity\022\?\n\nparameters\030\004 \003(\0132+.csi.v1.Create"
    "VolumeRequest.ParametersEntry\022>\n\007secrets"
    "\030\005 \003(\0132(.csi.v1.CreateVolumeRequest.Secr"
    "etsEntryB\003\230B\001\022:\n\025volume_content_source\030\006"
    " \001(\0132\033.csi.v1.VolumeContentSource\022\?\n\032acc"
    "essibility_requirements\030\007 \001(\0132\033.csi.v1.T"
    "opologyRequirement\022S\n\022mutable_parameters"
    "\030\010 \003(\01322.csi.v1.CreateVolumeRequest.Muta"
    "bleParametersEntryB\003\240B\001\0321\n\017ParametersEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032.\n\014Se"
    "cretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
    "8\001\0328\n\026MutableParametersEntry\022\013\n\003key\030\001 \001("
    "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\343\001\n\023VolumeContentSo"
    "urce\022>\n\010snapshot\030\001 \001(\0132*.csi.v1.VolumeCo"
    "ntentSource.SnapshotSourceH\000\022:\n\006volume\030\002"
    " \001(\0132(.csi.v1.VolumeContentSource.Volume"
    "SourceH\000\032%\n\016SnapshotSource\022\023\n\013snapshot_i"
    "d\030\001 \001(\t\032!\n\014VolumeSource\022\021\n\tvolume_id\030\001 \001"
    "(\tB\006\n\004type\"6\n\024CreateVolumeResponse\022\036\n\006vo"
    "lume\030\001 \001(\0132\016.csi.v1.Volume\"\331\004\n\020VolumeCap"
    "ability\0225\n\005block\030\001 \001(\0132$.csi.v1.VolumeCa"
    "pability.BlockVolumeH\000\0225\n\005mount\030\002 \001(\0132$."
    "csi.v1.VolumeCapability.MountVolumeH\000\0228\n"
    "\013access_mode\030\003 \001(\0132#.csi.v1.VolumeCapabi"
    "lity.AccessMode\032\r\n\013BlockVolume\032O\n\013MountV"
    "olume\022\017\n\007fs_type\030\001 \001(\t\022\023\n\013mount_flags\030\002 "
    "\003(\t\022\032\n\022volume_mount_group\030\003 \001(\t\032\255\002\n\nAcce"
    "ssMode\0226\n\004mode\030\001 \001(\0162(.csi.v1.VolumeCapa"
    "bility.AccessMode.Mode\"\346\001\n\004Mode\022\013\n\007UNKNO"
    "WN\020\000\022\026\n\022SINGLE_NODE_WRITER\020\001\022\033\n\027SINGLE_N"
    "ODE_READER_ONLY\020\002\022\032\n\026MULTI_NODE_READER_O"
    "NLY\020\003\022\034\n\030MULTI_NODE_SINGLE_WRITER\020\004\022\033\n\027M"
    "ULTI_NODE_MULTI_WRITER\020\005\022\"\n\031SINGLE_NODE_"
    "SINGLE_WRITER\020\006\032\003\240B\001\022!\n\030SINGLE_NODE_MULT"
    "I_WRITER\020\007\032\003\240B\001B\r\n\013access_type\"<\n\rCapaci"
    "tyRange\022\026\n\016required_bytes\030\001 \001(\003\022\023\n\013limit"
    "_bytes\030\002 \001(\003\"\210\002\n\006Volume\022\026\n\016capacity_byte"
    "s\030\001 \001(\003\022\021\n\tvolume_id\030\002 \001(\t\0229\n\016volume_con"
    "text\030\003 \003(\0132!.csi.v1.Volume.VolumeContext"
    "Entry\0223\n\016content_source\030\004 \001(\0132\033.csi.v1.V"
    "olumeContentSource\022-\n\023accessible_topolog"
    "y\030\005 \003(\0132\020.csi.v1.Topology\0324\n\022VolumeConte"
    "xtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
    "_\n\023TopologyRequirement\022#\n\trequisite\030\001 \003("
    "\0132\020.csi.v1.Topology\022#\n\tpreferred\030\002 \003(\0132\020"
    ".csi.v1.Topology\"m\n\010Topology\0220\n\010segments"
    "\030\001 \003(\0132\036.csi.v1.Topology.SegmentsEntry\032/"
    "\n\rSegmentsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\"\230\001\n\023DeleteVolumeRequest\022\021\n\tvolum"
    "e_id\030\001 \001(\t\022>\n\007secrets\030\002 \003(\0132(.csi.v1.Del"
    "eteVolumeRequest.SecretsEntryB\003\230B\001\032.\n\014Se"
    "cretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
    "8\001\"\026\n\024DeleteVolumeResponse\"\217\003\n\036Controlle"
    "rPublishVolumeRequest\022\021\n\tvolume_id\030\001 \001(\t"
    "\022\017\n\007node_id\030\002 \001(\t\0223\n\021volume_capability\030\003"
    " \001(\0132\030.csi.v1.VolumeCapability\022\020\n\010readon"
    "ly\030\004 \001(\010\022I\n\007secrets\030\005 \003(\01323.csi.v1.Contr"
    "ollerPublishVolumeRequest.SecretsEntryB\003"
    "\230B\001\022Q\n\016volume_context\030\006 \003(\01329.csi.v1.Con"
    "trollerPublishVolumeRequest.VolumeContex"
    "tEntry\032.\n\014SecretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\t:\0028\001\0324\n\022VolumeContextEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\256\001\n\037Control"
    "lerPublishVolumeResponse\022T\n\017publish_cont"
    "ext\030\001 \003(\0132;.csi.v1.ControllerPublishVolu"
    "meResponse.PublishContextEntry\0325\n\023Publis"
    "hContextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"\303\001\n ControllerUnpublishVolumeReque"
    "st\022\021\n\tvolume_id\030\001 \001(\t\022\017\n\007node_id\030\002 \001(\t\022K"
    "\n\007secrets\030\003 \003(\01325.csi.v1.ControllerUnpub"
    "lishVolumeRequest.SecretsEntryB\003\230B\001\032.\n\014S"
    "ecretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
    "\0028\001\"#\n!ControllerUnpublishVolumeResponse"
    "\"\226\005\n!ValidateVolumeCapabilitiesRequest\022\021"
    "\n\tvolume_id\030\001 \001(\t\022T\n\016volume_context\030\002 \003("
    "\0132<.csi.v1.ValidateVolumeCapabilitiesReq"
    "uest.VolumeContextEntry\0225\n\023volume_capabi"
    "lities\030\003 \003(\0132\030.csi.v1.VolumeCapability\022M"
    "\n\nparameters\030\004 \003(\01329.csi.v1.ValidateVolu"
    "meCapabilitiesRequest.ParametersEntry\022L\n"
    "\007secrets\030\005 \003(\01326.csi.v1.ValidateVolumeCa"
    "pabilitiesRequest.SecretsEntryB\003\230B\001\022a\n\022m"
    "utable_parameters\030\006 \003(\0132@.csi.v1.Validat"
    "eVolumeCapabilitiesRequest.MutableParame"
    "tersEntryB\003\240B\001\0324\n\022VolumeContextEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0321\n\017Paramete"
    "rsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032"
    ".\n\014SecretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\0328\n\026MutableParametersEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\217\005\n\"ValidateVo"
    "lumeCapabilitiesResponse\022G\n\tconfirmed\030\001 "
    "\001(\01324.csi.v1.ValidateVolumeCapabilitiesR"
    "esponse.Confirmed\022\017\n\007message\030\002 \001(\t\032\216\004\n\tC"
    "onfirmed\022_\n\016volume_context\030\001 \003(\0132G.csi.v"
    "1.ValidateVolumeCapabilitiesResponse.Con"
    "firmed.VolumeContextEntry\0225\n\023volume_capa"
    "bilities\030\002 \003(\0132\030.csi.v1.VolumeCapability"
    "\022X\n\nparameters\030\003 \003(\0132D.csi.v1.ValidateVo"
    "lumeCapabilitiesResponse.Confirmed.Param"
    "etersEntry\022l\n\022mutable_parameters\030\004 \003(\0132K"
    ".csi.v1.ValidateVolumeCapabilitiesRespon"
    "se.Confirmed.MutableParametersEntryB\003\240B\001"
    "\0324\n\022VolumeContextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\t:\0028\001\0321\n\017ParametersEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0328\n\026MutablePara"
    "metersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
    "\0028\001\"A\n\022ListVolumesRequest\022\023\n\013max_entries"
    "\030\001 \001(\005\022\026\n\016starting_token\030\002 \001(\t\"\244\002\n\023ListV"
    "olumesResponse\0222\n\007entries\030\001 \003(\0132!.csi.v1"
    ".ListVolumesResponse.Entry\022\022\n\nnext_token"
    "\030\002 \001(\t\032b\n\014VolumeStatus\022\032\n\022published_node"
    "_ids\030\001 \003(\t\0226\n\020volume_condition\030\002 \001(\0132\027.c"
    "si.v1.VolumeConditionB\003\240B\001\032a\n\005Entry\022\036\n\006v"
    "olume\030\001 \001(\0132\016.csi.v1.Volume\0228\n\006status\030\002 "
    "\001(\0132(.csi.v1.ListVolumesResponse.VolumeS"
    "tatus\"4\n\032ControllerGetVolumeRequest\022\021\n\tv"
    "olume_id\030\001 \001(\t:\003\240B\001\"\343\001\n\033ControllerGetVol"
    "umeResponse\022\036\n\006volume\030\001 \001(\0132\016.csi.v1.Vol"
    "ume\022@\n\006status\030\002 \001(\01320.csi.v1.ControllerG"
    "etVolumeResponse.VolumeStatus\032]\n\014VolumeS"
    "tatus\022\032\n\022published_node_ids\030\001 \003(\t\0221\n\020vol"
    "ume_condition\030\002 \001(\0132\027.csi.v1.VolumeCondi"
    "tion:\003\240B\001\"\305\002\n\035ControllerModifyVolumeRequ"
    "est\022\021\n\tvolume_id\030\001 \001(\t\022H\n\007secrets\030\002 \003(\0132"
    "2.csi.v1.ControllerModifyVolumeRequest.S"
    "ecretsEntryB\003\230B\001\022X\n\022mutable_parameters\030\003"
    " \003(\0132<.csi.v1.ControllerModifyVolumeRequ"
    "est.MutableParametersEntry\032.\n\014SecretsEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0328\n\026Mu"
    "tableParametersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\t:\0028\001:\003\240B\001\"%\n\036ControllerModifyVol"
    "umeResponse:\003\240B\001\"\355\001\n\022GetCapacityRequest\022"
    "5\n\023volume_capabilities\030\001 \003(\0132\030.csi.v1.Vo"
    "lumeCapability\022>\n\nparameters\030\002 \003(\0132*.csi"
    ".v1.GetCapacityRequest.ParametersEntry\022-"
    "\n\023accessible_topology\030\003 \001(\0132\020.csi.v1.Top"
    "ology\0321\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\t:\0028\001\"\252\001\n\023GetCapacityResponse"
    "\022\032\n\022available_capacity\030\001 \001(\003\0228\n\023maximum_"
    "volume_size\030\002 \001(\0132\033.google.protobuf.Int6"
    "4Value\022=\n\023minimum_volume_size\030\003 \001(\0132\033.go"
    "ogle.protobuf.Int64ValueB\003\240B\001\"\"\n Control"
    "lerGetCapabilitiesRequest\"^\n!ControllerG"
    "etCapabilitiesResponse\0229\n\014capabilities\030\001"
    " \003(\0132#.csi.v1.ControllerServiceCapabilit"
    "y\"\213\004\n\033ControllerServiceCapability\0226\n\003rpc"
    "\030\001 \001(\0132\'.csi.v1.ControllerServiceCapabil"
    "ity.RPCH\000\032\253\003\n\003RPC\022:\n\004type\030\001 \001(\0162,.csi.v1"
    ".ControllerServiceCapability.RPC.Type\"\347\002"
    "\n\004Type\022\013\n\007UNKNOWN\020\000\022\030\n\024CREATE_DELETE_VOL"
    "UME\020\001\022\034\n\030PUBLISH_UNPUBLISH_VOLUME\020\002\022\020\n\014L"
    "IST_VOLUMES\020\003\022\020\n\014GET_CAPACITY\020\004\022\032\n\026CREAT"
    "E_DELETE_SNAPSHOT\020\005\022\022\n\016LIST_SNAPSHOTS\020\006\022"
    "\020\n\014CLONE_VOLUME\020\007\022\024\n\020PUBLISH_READONLY\020\010\022"
    "\021\n\rEXPAND_VOLUME\020\t\022 \n\034LIST_VOLUMES_PUBLI"
    "SHED_NODES\020\n\022\031\n\020VOLUME_CONDITION\020\013\032\003\240B\001\022"
    "\023\n\nGET_VOLUME\020\014\032\003\240B\001\022!\n\030SINGLE_NODE_MULT"
    "I_WRITER\020\r\032\003\240B\001\022\026\n\rMODIFY_VOLUME\020\016\032\003\240B\001B"
    "\006\n\004type\"\247\002\n\025CreateSnapshotRequest\022\030\n\020sou"
    "rce_volume_id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022@\n\007sec"
    "rets\030\003 \003(\0132*.csi.v1.CreateSnapshotReques"
    "t.SecretsEntryB\003\230B\001\022A\n\nparameters\030\004 \003(\0132"
    "-.csi.v1.CreateSnapshotRequest.Parameter"
    "sEntry\032.\n\014SecretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\t:\0028\001\0321\n\017ParametersEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"<\n\026CreateSnaps"
    "hotResponse\022\"\n\010snapshot\030\001 \001(\0132\020.csi.v1.S"
    "napshot\"\266\001\n\010Snapshot\022\022\n\nsize_bytes\030\001 \001(\003"
    "\022\023\n\013snapshot_id\030\002 \001(\t\022\030\n\020source_volume_i"
    "d\030\003 \001(\t\0221\n\rcreation_time\030\004 \001(\0132\032.google."
    "protobuf.Timestamp\022\024\n\014ready_to_use\030\005 \001(\010"
    "\022\036\n\021group_snapshot_id\030\006 \001(\tB\003\240B\001\"\236\001\n\025Del"
    "eteSnapshotRequest\022\023\n\013snapshot_id\030\001 \001(\t\022"
    "@\n\007secrets\030\002 \003(\0132*.csi.v1.DeleteSnapshot"
    "Request.SecretsEntryB\003\230B\001\032.\n\014SecretsEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\030\n\026Del"
    "eteSnapshotResponse\"\343\001\n\024ListSnapshotsReq"
    "uest\022\023\n\013max_entries\030\001 \001(\005\022\026\n\016starting_to"
    "ken\030\002 \001(\t\022\030\n\020source_volume_id\030\003 \001(\t\022\023\n\013s"
    "napshot_id\030\004 \001(\t\022\?\n\007secrets\030\005 \003(\0132).csi."
    "v1.ListSnapshotsRequest.SecretsEntryB\003\230B"
    "\001\032.\n\014SecretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
    "\002 \001(\t:\0028\001\"\216\001\n\025ListSnapshotsResponse\0224\n\007e"
    "ntries\030\001 \003(\0132#.csi.v1.ListSnapshotsRespo"
    "nse.Entry\022\022\n\nnext_token\030\002 \001(\t\032+\n\005Entry\022\""
    "\n\010snapshot\030\001 \001(\0132\020.csi.v1.Snapshot\"\220\002\n\035C"
    "ontrollerExpandVolumeRequest\022\021\n\tvolume_i"
    "d\030\001 \001(\t\022-\n\016capacity_range\030\002 \001(\0132\025.csi.v1"
    ".CapacityRange\022H\n\007secrets\030\003 \003(\01322.csi.v1"
    ".ControllerExpandVolumeRequest.SecretsEn"
    "tryB\003\230B\001\0223\n\021volume_capability\030\004 \001(\0132\030.cs"
    "i.v1.VolumeCapability\032.\n\014SecretsEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"Y\n\036Control"
    "lerExpandVolumeResponse\022\026\n\016capacity_byte"
    "s\030\001 \001(\003\022\037\n\027node_expansion_required\030\002 \001(\010"
    "\"\365\003\n\026NodeStageVolumeRequest\022\021\n\tvolume_id"
    "\030\001 \001(\t\022K\n\017publish_context\030\002 \003(\01322.csi.v1"
    ".NodeStageVolumeRequest.PublishContextEn"
    "try\022\033\n\023staging_target_path\030\003 \001(\t\0223\n\021volu"
    "me_capability\030\004 \001(\0132\030.csi.v1.VolumeCapab"
    "ility\022A\n\007secrets\030\005 \003(\0132+.csi.v1.NodeStag"
    "eVolumeRequest.SecretsEntryB\003\230B\001\022I\n\016volu"
    "me_context\030\006 \003(\01321.csi.v1.NodeStageVolum"
    "eRequest.VolumeContextEntry\0325\n\023PublishCo"
    "ntextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
    "8\001\032.\n\014SecretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
    "\030\002 \001(\t:\0028\001\0324\n\022VolumeContextEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\031\n\027NodeStageVol"
    "umeResponse\"J\n\030NodeUnstageVolumeRequest\022"
    "\021\n\tvolume_id\030\001 \001(\t\022\033\n\023staging_target_pat"
    "h\030\002 \001(\t\"\033\n\031NodeUnstageVolumeResponse\"\244\004\n"
    "\030NodePublishVolumeRequest\022\021\n\tvolume_id\030\001"
    " \001(\t\022M\n\017publish_context\030\002 \003(\01324.csi.v1.N"
    "odePublishVolumeRequest.PublishContextEn"
    "try\022\033\n\023staging_target_path\030\003 \001(\t\022\023\n\013targ"
    "et_path\030\004 \001(\t\0223\n\021volume_capability\030\005 \001(\013"
    "2\030.csi.v1.VolumeCapability\022\020\n\010readonly\030\006"
    " \001(\010\022C\n\007secrets\030\007 \003(\0132-.csi.v1.NodePubli"
    "shVolumeRequest.SecretsEntryB\003\230B\001\022K\n\016vol"
    "ume_context\030\010 \003(\01323.csi.v1.NodePublishVo"
    "lumeRequest.VolumeContextEntry\0325\n\023Publis"
    "hContextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\032.\n\014SecretsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\0324\n\022VolumeContextEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\033\n\031NodePubli"
    "shVolumeResponse\"D\n\032NodeUnpublishVolumeR"
    "equest\022\021\n\tvolume_id\030\001 \001(\t\022\023\n\013target_path"
    "\030\002 \001(\t\"\035\n\033NodeUnpublishVolumeResponse\"`\n"
    "\031NodeGetVolumeStatsRequest\022\021\n\tvolume_id\030"
    "\001 \001(\t\022\023\n\013volume_path\030\002 \001(\t\022\033\n\023staging_ta"
    "rget_path\030\003 \001(\t\"x\n\032NodeGetVolumeStatsRes"
    "ponse\022\"\n\005usage\030\001 \003(\0132\023.csi.v1.VolumeUsag"
    "e\0226\n\020volume_condition\030\002 \001(\0132\027.csi.v1.Vol"
    "umeConditionB\003\240B\001\"\221\001\n\013VolumeUsage\022\021\n\tava"
    "ilable\030\001 \001(\003\022\r\n\005total\030\002 \001(\003\022\014\n\004used\030\003 \001("
    "\003\022&\n\004unit\030\004 \001(\0162\030.csi.v1.VolumeUsage.Uni"
    "t\"*\n\004Unit\022\013\n\007UNKNOWN\020\000\022\t\n\005BYTES\020\001\022\n\n\006INO"
    "DES\020\002\"9\n\017VolumeCondition\022\020\n\010abnormal\030\001 \001"
    "(\010\022\017\n\007message\030\002 \001(\t:\003\240B\001\"\034\n\032NodeGetCapab"
    "ilitiesRequest\"R\n\033NodeGetCapabilitiesRes"
    "ponse\0223\n\014capabilities\030\001 \003(\0132\035.csi.v1.Nod"
    "eServiceCapability\"\276\002\n\025NodeServiceCapabi"
    "lity\0220\n\003rpc\030\001 \001(\0132!.csi.v1.NodeServiceCa"
    "pability.RPCH\000\032\352\001\n\003RPC\0224\n\004type\030\001 \001(\0162&.c"
    "si.v1.NodeServiceCapability.RPC.Type\"\254\001\n"
    "\004Type\022\013\n\007UNKNOWN\020\000\022\030\n\024STAGE_UNSTAGE_VOLU"
    "ME\020\001\022\024\n\020GET_VOLUME_STATS\020\002\022\021\n\rEXPAND_VOL"
    "UME\020\003\022\031\n\020VOLUME_CONDITION\020\004\032\003\240B\001\022!\n\030SING"
    "LE_NODE_MULTI_WRITER\020\005\032\003\240B\001\022\026\n\022VOLUME_MO"
    "UNT_GROUP\020\006B\006\n\004type\"\024\n\022NodeGetInfoReques"
    "t\"s\n\023NodeGetInfoResponse\022\017\n\007node_id\030\001 \001("
    "\t\022\034\n\024max_volumes_per_node\030\002 \001(\003\022-\n\023acces"
    "sible_topology\030\003 \001(\0132\020.csi.v1.Topology\"\271"
    "\002\n\027NodeExpandVolumeRequest\022\021\n\tvolume_id\030"
    "\001 \001(\t\022\023\n\013volume_path\030\002 \001(\t\022-\n\016capacity_r"
    "ange\030\003 \001(\0132\025.csi.v1.CapacityRange\022\033\n\023sta"
    "ging_target_path\030\004 \001(\t\0223\n\021volume_capabil"
    "ity\030\005 \001(\0132\030.csi.v1.VolumeCapability\022E\n\007s"
    "ecrets\030\006 \003(\0132,.csi.v1.NodeExpandVolumeRe"
    "quest.SecretsEntryB\006\230B\001\240B\001\032.\n\014SecretsEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"2\n\030No"
    "deExpandVolumeResponse\022\026\n\016capacity_bytes"
    "\030\001 \001(\003\",\n%GroupControllerGetCapabilities"
    "Request:\003\240B\001\"m\n&GroupControllerGetCapabi"
    "litiesResponse\022>\n\014capabilities\030\001 \003(\0132(.c"
    "si.v1.GroupControllerServiceCapability:\003"
    "\240B\001\"\374\001\n GroupControllerServiceCapability"
    "\022;\n\003rpc\030\001 \001(\0132,.csi.v1.GroupControllerSe"
    "rviceCapability.RPCH\000\032\215\001\n\003RPC\022\?\n\004type\030\001 "
    "\001(\01621.csi.v1.GroupControllerServiceCapab"
    "ility.RPC.Type\"E\n\004Type\022\013\n\007UNKNOWN\020\000\0220\n\'C"
    "REATE_DELETE_GET_VOLUME_GROUP_SNAPSHOT\020\001"
    "\032\003\240B\001:\003\240B\001B\006\n\004type\"\316\002\n CreateVolumeGroup"
    "SnapshotRequest\022\014\n\004name\030\001 \001(\t\022\031\n\021source_"
    "volume_ids\030\002 \003(\t\022K\n\007secrets\030\003 \003(\01325.csi."
    "v1.CreateVolumeGroupSnapshotRequest.Secr"
    "etsEntryB\003\230B\001\022L\n\nparameters\030\004 \003(\01328.csi."
    "v1.CreateVolumeGroupSnapshotRequest.Para"
    "metersEntry\032.\n\014SecretsEntry\022\013\n\003key\030\001 \001(\t"
    "\022\r\n\005value\030\002 \001(\t:\0028\001\0321\n\017ParametersEntry\022\013"
    "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001:\003\240B\001\"]\n!C"
    "reateVolumeGroupSnapshotResponse\0223\n\016grou"
    "p_snapshot\030\001 \001(\0132\033.csi.v1.VolumeGroupSna"
    "pshot:\003\240B\001\"\243\001\n\023VolumeGroupSnapshot\022\031\n\021gr"
    "oup_snapshot_id\030\001 \001(\t\022#\n\tsnapshots\030\002 \003(\013"
    "2\020.csi.v1.Snapshot\0221\n\rcreation_time\030\003 \001("
    "\0132\032.google.protobuf.Timestamp\022\024\n\014ready_t"
    "o_use\030\004 \001(\010:\003\240B\001\"\325\001\n DeleteVolumeGroupSn"
    "apshotRequest\022\031\n\021group_snapshot_id\030\001 \001(\t"
    "\022\024\n\014snapshot_ids\030\002 \003(\t\022K\n\007secrets\030\003 \003(\0132"
    "5.csi.v1.DeleteVolumeGroupSnapshotReques"
    "t.SecretsEntryB\003\230B\001\032.\n\014SecretsEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001:\003\240B\001\"(\n!Dele"
    "teVolumeGroupSnapshotResponse:\003\240B\001\"\317\001\n\035G"
    "etVolumeGroupSnapshotRequest\022\031\n\021group_sn"
    "apshot_id\030\001 \001(\t\022\024\n\014snapshot_ids\030\002 \003(\t\022H\n"
    "\007secrets\030\003 \003(\01322.csi.v1.GetVolumeGroupSn"
    "apshotRequest.SecretsEntryB\003\230B\001\032.\n\014Secre"
    "tsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001:"
    "\003\240B\001\"Z\n\036GetVolumeGroupSnapshotResponse\0223"
    "\n\016group_snapshot\030\001 \001(\0132\033.csi.v1.VolumeGr"
    "oupSnapshot:\003\240B\0012\372\001\n\010Identity\022N\n\rGetPlug"
    "inInfo\022\034.csi.v1.GetPluginInfoRequest\032\035.c"
    "si.v1.GetPluginInfoResponse\"\000\022f\n\025GetPlug"
    "inCapabilities\022$.csi.v1.GetPluginCapabil"
    "itiesRequest\032%.csi.v1.GetPluginCapabilit"
    "iesResponse\"\000\0226\n\005Probe\022\024.csi.v1.ProbeReq"
    "uest\032\025.csi.v1.ProbeResponse\"\0002\273\n\n\nContro"
    "ller\022K\n\014CreateVolume\022\033.csi.v1.CreateVolu"
    "meRequest\032\034.csi.v1.CreateVolumeResponse\""
    "\000\022K\n\014DeleteVolume\022\033.csi.v1.DeleteVolumeR"
    "equest\032\034.csi.v1.DeleteVolumeResponse\"\000\022l"
    "\n\027ControllerPublishVolume\022&.csi.v1.Contr"
    "ollerPublishVolumeRequest\032\'.csi.v1.Contr"
    "ollerPublishVolumeResponse\"\000\022r\n\031Controll"
    "erUnpublishVolume\022(.csi.v1.ControllerUnp"
    "ublishVolumeRequest\032).csi.v1.ControllerU"
    "npublishVolumeResponse\"\000\022u\n\032ValidateVolu"
    "meCapabilities\022).csi.v1.ValidateVolumeCa"
    "pabilitiesRequest\032*.csi.v1.ValidateVolum"
    "eCapabilitiesResponse\"\000\022H\n\013ListVolumes\022\032"
    ".csi.v1.ListVolumesRequest\032\033.csi.v1.List"
    "VolumesResponse\"\000\022H\n\013GetCapacity\022\032.csi.v"
    "1.GetCapacityRequest\032\033.csi.v1.GetCapacit"
    "yResponse\"\000\022r\n\031ControllerGetCapabilities"
    "\022(.csi.v1.ControllerGetCapabilitiesReque"
    "st\032).csi.v1.ControllerGetCapabilitiesRes"
    "ponse\"\000\022Q\n\016CreateSnapshot\022\035.csi.v1.Creat"
    "eSnapshotRequest\032\036.csi.v1.CreateSnapshot"
    "Response\"\000\022Q\n\016DeleteSnapshot\022\035.csi.v1.De"
    "leteSnapshotRequest\032\036.csi.v1.DeleteSnaps"
    "hotResponse\"\000\022N\n\rListSnapshots\022\034.csi.v1."
    "ListSnapshotsRequest\032\035.csi.v1.ListSnapsh"
    "otsResponse\"\000\022i\n\026ControllerExpandVolume\022"
    "%.csi.v1.ControllerExpandVolumeRequest\032&"
    ".csi.v1.ControllerExpandVolumeResponse\"\000"
    "\022c\n\023ControllerGetVolume\022\".csi.v1.Control"
    "lerGetVolumeRequest\032#.csi.v1.ControllerG"
    "etVolumeResponse\"\003\240B\001\022l\n\026ControllerModif"
    "yVolume\022%.csi.v1.ControllerModifyVolumeR"
    "equest\032&.csi.v1.ControllerModifyVolumeRe"
    "sponse\"\003\240B\0012\366\003\n\017GroupController\022\201\001\n\036Grou"
    "pControllerGetCapabilities\022-.csi.v1.Grou"
    "pControllerGetCapabilitiesRequest\032..csi."
    "v1.GroupControllerGetCapabilitiesRespons"
    "e\"\000\022u\n\031CreateVolumeGroupSnapshot\022(.csi.v"
    "1.CreateVolumeGroupSnapshotRequest\032).csi"
    ".v1.CreateVolumeGroupSnapshotResponse\"\003\240"
    "B\001\022u\n\031DeleteVolumeGroupSnapshot\022(.csi.v1"
    ".DeleteVolumeGroupSnapshotRequest\032).csi."
    "v1.DeleteVolumeGroupSnapshotResponse\"\003\240B"
    "\001\022l\n\026GetVolumeGroupSnapshot\022%.csi.v1.Get"
    "VolumeGroupSnapshotRequest\032&.csi.v1.GetV"
    "olumeGroupSnapshotResponse\"\003\240B\001\032\003\240B\0012\332\005\n"
    "\004Node\022T\n\017NodeStageVolume\022\036.csi.v1.NodeSt"
    "ageVolumeRequest\032\037.csi.v1.NodeStageVolum"
    "eResponse\"\000\022Z\n\021NodeUnstageVolume\022 .csi.v"
    "1.NodeUnstageVolumeRequest\032!.csi.v1.Node"
    "UnstageVolumeResponse\"\000\022Z\n\021NodePublishVo"
    "lume\022 .csi.v1.NodePublishVolumeRequest\032!"
    ".csi.v1.NodePublishVolumeResponse\"\000\022`\n\023N"
    "odeUnpublishVolume\022\".csi.v1.NodeUnpublis"
    "hVolumeRequest\032#.csi.v1.NodeUnpublishVol"
    "umeResponse\"\000\022]\n\022NodeGetVolumeStats\022!.cs"
    "i.v1.NodeGetVolumeStatsRequest\032\".csi.v1."
    "NodeGetVolumeStatsResponse\"\000\022W\n\020NodeExpa"
    "ndVolume\022\037.csi.v1.NodeExpandVolumeReques"
    "t\032 .csi.v1.NodeExpandVolumeResponse\"\000\022`\n"
    "\023NodeGetCapabilities\022\".csi.v1.NodeGetCap"
    "abilitiesRequest\032#.csi.v1.NodeGetCapabil"
    "itiesResponse\"\000\022H\n\013NodeGetInfo\022\032.csi.v1."
    "NodeGetInfoRequest\032\033.csi.v1.NodeGetInfoR"
    "esponse\"\000:1\n\nalpha_enum\022\034.google.protobu"
    "f.EnumOptions\030\244\010 \001(\010:<\n\020alpha_enum_value"
    "\022!.google.protobuf.EnumValueOptions\030\244\010 \001"
    "(\010:2\n\ncsi_secret\022\035.google.protobuf.Field"
    "Options\030\243\010 \001(\010:3\n\013alpha_field\022\035.google.p"
    "rotobuf.FieldOptions\030\244\010 \001(\010:7\n\ralpha_mes"
    "sage\022\037.google.protobuf.MessageOptions\030\244\010"
    " \001(\010:5\n\014alpha_method\022\036.google.protobuf.M"
    "ethodOptions\030\244\010 \001(\010:7\n\ralpha_service\022\037.g"
    "oogle.protobuf.ServiceOptions\030\244\010 \001(\010B\005Z\003"
    "csib\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_deps[3] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto = {
    false,
    false,
    16411,
    descriptor_table_protodef_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto,
    "lib/cxx/.protoc/csi.proto",
    &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
    descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_deps,
    3,
    124,
    schemas,
    file_default_instances,
    TableStruct_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto::offsets,
    file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto,
    file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto,
    file_level_service_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter() {
  return &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
namespace csi {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PluginCapability_Service_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
  return file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PluginCapability_Service_Type_internal_data_[] = {
    262144u, 0u, };
bool PluginCapability_Service_Type_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PluginCapability_Service_Type PluginCapability_Service::UNKNOWN;
constexpr PluginCapability_Service_Type PluginCapability_Service::CONTROLLER_SERVICE;
constexpr PluginCapability_Service_Type PluginCapability_Service::VOLUME_ACCESSIBILITY_CONSTRAINTS;
constexpr PluginCapability_Service_Type PluginCapability_Service::GROUP_CONTROLLER_SERVICE;
constexpr PluginCapability_Service_Type PluginCapability_Service::Type_MIN;
constexpr PluginCapability_Service_Type PluginCapability_Service::Type_MAX;
constexpr int PluginCapability_Service::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* PluginCapability_VolumeExpansion_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
  return file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t PluginCapability_VolumeExpansion_Type_internal_data_[] = {
    196608u, 0u, };
bool PluginCapability_VolumeExpansion_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PluginCapability_VolumeExpansion_Type PluginCapability_VolumeExpansion::UNKNOWN;
constexpr PluginCapability_VolumeExpansion_Type PluginCapability_VolumeExpansion::ONLINE;
constexpr PluginCapability_VolumeExpansion_Type PluginCapability_VolumeExpansion::OFFLINE;
constexpr PluginCapability_VolumeExpansion_Type PluginCapability_VolumeExpansion::Type_MIN;
constexpr PluginCapability_VolumeExpansion_Type PluginCapability_VolumeExpansion::Type_MAX;
constexpr int PluginCapability_VolumeExpansion::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VolumeCapability_AccessMode_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
  return file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t VolumeCapability_AccessMode_Mode_internal_data_[] = {
    524288u, 0u, };
bool VolumeCapability_AccessMode_Mode_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::UNKNOWN;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::SINGLE_NODE_WRITER;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::SINGLE_NODE_READER_ONLY;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::MULTI_NODE_READER_ONLY;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::MULTI_NODE_SINGLE_WRITER;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::MULTI_NODE_MULTI_WRITER;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::SINGLE_NODE_SINGLE_WRITER;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::SINGLE_NODE_MULTI_WRITER;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::Mode_MIN;
constexpr VolumeCapability_AccessMode_Mode VolumeCapability_AccessMode::Mode_MAX;
constexpr int VolumeCapability_AccessMode::Mode_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ControllerServiceCapability_RPC_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
  return file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ControllerServiceCapability_RPC_Type_internal_data_[] = {
    983040u, 0u, };
bool ControllerServiceCapability_RPC_Type_IsValid(int value) {
  return 0 <= value && value <= 14;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::UNKNOWN;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::CREATE_DELETE_VOLUME;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::PUBLISH_UNPUBLISH_VOLUME;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::LIST_VOLUMES;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::GET_CAPACITY;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::CREATE_DELETE_SNAPSHOT;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::LIST_SNAPSHOTS;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::CLONE_VOLUME;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::PUBLISH_READONLY;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::EXPAND_VOLUME;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::LIST_VOLUMES_PUBLISHED_NODES;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::VOLUME_CONDITION;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::GET_VOLUME;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::SINGLE_NODE_MULTI_WRITER;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::MODIFY_VOLUME;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::Type_MIN;
constexpr ControllerServiceCapability_RPC_Type ControllerServiceCapability_RPC::Type_MAX;
constexpr int ControllerServiceCapability_RPC::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VolumeUsage_Unit_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
  return file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t VolumeUsage_Unit_internal_data_[] = {
    196608u, 0u, };
bool VolumeUsage_Unit_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VolumeUsage_Unit VolumeUsage::UNKNOWN;
constexpr VolumeUsage_Unit VolumeUsage::BYTES;
constexpr VolumeUsage_Unit VolumeUsage::INODES;
constexpr VolumeUsage_Unit VolumeUsage::Unit_MIN;
constexpr VolumeUsage_Unit VolumeUsage::Unit_MAX;
constexpr int VolumeUsage::Unit_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NodeServiceCapability_RPC_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
  return file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t NodeServiceCapability_RPC_Type_internal_data_[] = {
    458752u, 0u, };
bool NodeServiceCapability_RPC_Type_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::UNKNOWN;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::STAGE_UNSTAGE_VOLUME;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::GET_VOLUME_STATS;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::EXPAND_VOLUME;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::VOLUME_CONDITION;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::SINGLE_NODE_MULTI_WRITER;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::VOLUME_MOUNT_GROUP;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::Type_MIN;
constexpr NodeServiceCapability_RPC_Type NodeServiceCapability_RPC::Type_MAX;
constexpr int NodeServiceCapability_RPC::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GroupControllerServiceCapability_RPC_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto);
  return file_level_enum_descriptors_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t GroupControllerServiceCapability_RPC_Type_internal_data_[] = {
    131072u, 0u, };
bool GroupControllerServiceCapability_RPC_Type_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GroupControllerServiceCapability_RPC_Type GroupControllerServiceCapability_RPC::UNKNOWN;
constexpr GroupControllerServiceCapability_RPC_Type GroupControllerServiceCapability_RPC::CREATE_DELETE_GET_VOLUME_GROUP_SNAPSHOT;
constexpr GroupControllerServiceCapability_RPC_Type GroupControllerServiceCapability_RPC::Type_MIN;
constexpr GroupControllerServiceCapability_RPC_Type GroupControllerServiceCapability_RPC::Type_MAX;
constexpr int GroupControllerServiceCapability_RPC::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class GetPluginInfoRequest::_Internal {
 public:
};

GetPluginInfoRequest::GetPluginInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetPluginInfoRequest)
}
GetPluginInfoRequest::GetPluginInfoRequest(
    ::google::protobuf::Arena* arena,
    const GetPluginInfoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetPluginInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetPluginInfoRequest)
}









::google::protobuf::Metadata GetPluginInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[0]);
}
// ===================================================================

GetPluginInfoResponse_ManifestEntry_DoNotUse::GetPluginInfoResponse_ManifestEntry_DoNotUse() {}
GetPluginInfoResponse_ManifestEntry_DoNotUse::GetPluginInfoResponse_ManifestEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata GetPluginInfoResponse_ManifestEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[1]);
}
// ===================================================================

class GetPluginInfoResponse::_Internal {
 public:
};

GetPluginInfoResponse::GetPluginInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetPluginInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPluginInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : manifest_{visibility, arena, from.manifest_},
        name_(arena, from.name_),
        vendor_version_(arena, from.vendor_version_),
        _cached_size_{0} {}

GetPluginInfoResponse::GetPluginInfoResponse(
    ::google::protobuf::Arena* arena,
    const GetPluginInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  GetPluginInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetPluginInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPluginInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : manifest_{visibility, arena},
        name_(arena),
        vendor_version_(arena),
        _cached_size_{0} {}

inline void GetPluginInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPluginInfoResponse::~GetPluginInfoResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.GetPluginInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPluginInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.vendor_version_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPluginInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GetPluginInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.manifest_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.vendor_version_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPluginInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 63, 2> GetPluginInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetPluginInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string vendor_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetPluginInfoResponse, _impl_.vendor_version_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPluginInfoResponse, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GetPluginInfoResponse, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string vendor_version = 2;
    {PROTOBUF_FIELD_OFFSET(GetPluginInfoResponse, _impl_.vendor_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> manifest = 3;
    {PROTOBUF_FIELD_OFFSET(GetPluginInfoResponse, _impl_.manifest_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetPluginInfoResponse()._impl_.manifest_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\4\16\10\0\0\0\0"
    "csi.v1.GetPluginInfoResponse"
    "name"
    "vendor_version"
    "manifest"
  }},
};

::uint8_t* GetPluginInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GetPluginInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetPluginInfoResponse.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string vendor_version = 2;
  if (!this->_internal_vendor_version().empty()) {
    const std::string& _s = this->_internal_vendor_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetPluginInfoResponse.vendor_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // map<string, string> manifest = 3;
  if (!_internal_manifest().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_manifest();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetPluginInfoResponse.manifest");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetPluginInfoResponse.manifest");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetPluginInfoResponse.manifest");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetPluginInfoResponse.manifest");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GetPluginInfoResponse)
  return target;
}

::size_t GetPluginInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GetPluginInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> manifest = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_manifest_size());
  for (const auto& entry : _internal_manifest()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string vendor_version = 2;
  if (!this->_internal_vendor_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_vendor_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPluginInfoResponse::_class_data_ = {
    GetPluginInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPluginInfoResponse::GetClassData() const {
  return &_class_data_;
}

void GetPluginInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPluginInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetPluginInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GetPluginInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.manifest_.MergeFrom(from._impl_.manifest_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_vendor_version().empty()) {
    _this->_internal_set_vendor_version(from._internal_vendor_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPluginInfoResponse::CopyFrom(const GetPluginInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GetPluginInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPluginInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPluginInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPluginInfoResponse::InternalSwap(GetPluginInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.manifest_.InternalSwap(&other->_impl_.manifest_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vendor_version_, &other->_impl_.vendor_version_, arena);
}

::google::protobuf::Metadata GetPluginInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[2]);
}
// ===================================================================

class GetPluginCapabilitiesRequest::_Internal {
 public:
};

GetPluginCapabilitiesRequest::GetPluginCapabilitiesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetPluginCapabilitiesRequest)
}
GetPluginCapabilitiesRequest::GetPluginCapabilitiesRequest(
    ::google::protobuf::Arena* arena,
    const GetPluginCapabilitiesRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetPluginCapabilitiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetPluginCapabilitiesRequest)
}









::google::protobuf::Metadata GetPluginCapabilitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[3]);
}
// ===================================================================

class GetPluginCapabilitiesResponse::_Internal {
 public:
};

GetPluginCapabilitiesResponse::GetPluginCapabilitiesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetPluginCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPluginCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : capabilities_{visibility, arena, from.capabilities_},
        _cached_size_{0} {}

GetPluginCapabilitiesResponse::GetPluginCapabilitiesResponse(
    ::google::protobuf::Arena* arena,
    const GetPluginCapabilitiesResponse& from)
    : ::google::protobuf::Message(arena) {
  GetPluginCapabilitiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetPluginCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPluginCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capabilities_{visibility, arena},
        _cached_size_{0} {}

inline void GetPluginCapabilitiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPluginCapabilitiesResponse::~GetPluginCapabilitiesResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.GetPluginCapabilitiesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPluginCapabilitiesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPluginCapabilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GetPluginCapabilitiesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPluginCapabilitiesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetPluginCapabilitiesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetPluginCapabilitiesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .csi.v1.PluginCapability capabilities = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPluginCapabilitiesResponse, _impl_.capabilities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.PluginCapability capabilities = 1;
    {PROTOBUF_FIELD_OFFSET(GetPluginCapabilitiesResponse, _impl_.capabilities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::PluginCapability>()},
  }}, {{
  }},
};

::uint8_t* GetPluginCapabilitiesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GetPluginCapabilitiesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.PluginCapability capabilities = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GetPluginCapabilitiesResponse)
  return target;
}

::size_t GetPluginCapabilitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GetPluginCapabilitiesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.PluginCapability capabilities = 1;
  total_size += 1UL * this->_internal_capabilities_size();
  for (const auto& msg : this->_internal_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPluginCapabilitiesResponse::_class_data_ = {
    GetPluginCapabilitiesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPluginCapabilitiesResponse::GetClassData() const {
  return &_class_data_;
}

void GetPluginCapabilitiesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPluginCapabilitiesResponse*>(&to_msg);
  auto& from = static_cast<const GetPluginCapabilitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GetPluginCapabilitiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capabilities()->MergeFrom(
      from._internal_capabilities());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPluginCapabilitiesResponse::CopyFrom(const GetPluginCapabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GetPluginCapabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPluginCapabilitiesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPluginCapabilitiesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPluginCapabilitiesResponse::InternalSwap(GetPluginCapabilitiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
}

::google::protobuf::Metadata GetPluginCapabilitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[4]);
}
// ===================================================================

class PluginCapability_Service::_Internal {
 public:
};

PluginCapability_Service::PluginCapability_Service(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.PluginCapability.Service)
}
PluginCapability_Service::PluginCapability_Service(
    ::google::protobuf::Arena* arena, const PluginCapability_Service& from)
    : PluginCapability_Service(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PluginCapability_Service::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PluginCapability_Service::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
PluginCapability_Service::~PluginCapability_Service() {
  // @@protoc_insertion_point(destructor:csi.v1.PluginCapability.Service)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PluginCapability_Service::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PluginCapability_Service::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.PluginCapability.Service)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PluginCapability_Service::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PluginCapability_Service::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PluginCapability_Service_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.PluginCapability.Service.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PluginCapability_Service, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PluginCapability_Service, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.PluginCapability.Service.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(PluginCapability_Service, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PluginCapability_Service::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.PluginCapability.Service)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.PluginCapability.Service.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.PluginCapability.Service)
  return target;
}

::size_t PluginCapability_Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.PluginCapability.Service)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.PluginCapability.Service.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PluginCapability_Service::_class_data_ = {
    PluginCapability_Service::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PluginCapability_Service::GetClassData() const {
  return &_class_data_;
}

void PluginCapability_Service::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PluginCapability_Service*>(&to_msg);
  auto& from = static_cast<const PluginCapability_Service&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.PluginCapability.Service)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PluginCapability_Service::CopyFrom(const PluginCapability_Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.PluginCapability.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PluginCapability_Service::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PluginCapability_Service::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PluginCapability_Service::InternalSwap(PluginCapability_Service* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata PluginCapability_Service::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[5]);
}
// ===================================================================

class PluginCapability_VolumeExpansion::_Internal {
 public:
};

PluginCapability_VolumeExpansion::PluginCapability_VolumeExpansion(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.PluginCapability.VolumeExpansion)
}
PluginCapability_VolumeExpansion::PluginCapability_VolumeExpansion(
    ::google::protobuf::Arena* arena, const PluginCapability_VolumeExpansion& from)
    : PluginCapability_VolumeExpansion(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PluginCapability_VolumeExpansion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PluginCapability_VolumeExpansion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
PluginCapability_VolumeExpansion::~PluginCapability_VolumeExpansion() {
  // @@protoc_insertion_point(destructor:csi.v1.PluginCapability.VolumeExpansion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PluginCapability_VolumeExpansion::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PluginCapability_VolumeExpansion::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.PluginCapability.VolumeExpansion)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PluginCapability_VolumeExpansion::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PluginCapability_VolumeExpansion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PluginCapability_VolumeExpansion_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.PluginCapability.VolumeExpansion.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PluginCapability_VolumeExpansion, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PluginCapability_VolumeExpansion, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.PluginCapability.VolumeExpansion.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(PluginCapability_VolumeExpansion, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PluginCapability_VolumeExpansion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.PluginCapability.VolumeExpansion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.PluginCapability.VolumeExpansion.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.PluginCapability.VolumeExpansion)
  return target;
}

::size_t PluginCapability_VolumeExpansion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.PluginCapability.VolumeExpansion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.PluginCapability.VolumeExpansion.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PluginCapability_VolumeExpansion::_class_data_ = {
    PluginCapability_VolumeExpansion::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PluginCapability_VolumeExpansion::GetClassData() const {
  return &_class_data_;
}

void PluginCapability_VolumeExpansion::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PluginCapability_VolumeExpansion*>(&to_msg);
  auto& from = static_cast<const PluginCapability_VolumeExpansion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.PluginCapability.VolumeExpansion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PluginCapability_VolumeExpansion::CopyFrom(const PluginCapability_VolumeExpansion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.PluginCapability.VolumeExpansion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PluginCapability_VolumeExpansion::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PluginCapability_VolumeExpansion::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PluginCapability_VolumeExpansion::InternalSwap(PluginCapability_VolumeExpansion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata PluginCapability_VolumeExpansion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[6]);
}
// ===================================================================

class PluginCapability::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::csi::v1::PluginCapability, _impl_._oneof_case_);
  static const ::csi::v1::PluginCapability_Service& service(const PluginCapability* msg);
  static const ::csi::v1::PluginCapability_VolumeExpansion& volume_expansion(const PluginCapability* msg);
};

const ::csi::v1::PluginCapability_Service& PluginCapability::_Internal::service(const PluginCapability* msg) {
  return *msg->_impl_.type_.service_;
}
const ::csi::v1::PluginCapability_VolumeExpansion& PluginCapability::_Internal::volume_expansion(const PluginCapability* msg) {
  return *msg->_impl_.type_.volume_expansion_;
}
void PluginCapability::set_allocated_service(::csi::v1::PluginCapability_Service* service) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (service) {
    ::google::protobuf::Arena* submessage_arena = service->GetArena();
    if (message_arena != submessage_arena) {
      service = ::google::protobuf::internal::GetOwnedMessage(message_arena, service, submessage_arena);
    }
    set_has_service();
    _impl_.type_.service_ = service;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.PluginCapability.service)
}
void PluginCapability::set_allocated_volume_expansion(::csi::v1::PluginCapability_VolumeExpansion* volume_expansion) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (volume_expansion) {
    ::google::protobuf::Arena* submessage_arena = volume_expansion->GetArena();
    if (message_arena != submessage_arena) {
      volume_expansion = ::google::protobuf::internal::GetOwnedMessage(message_arena, volume_expansion, submessage_arena);
    }
    set_has_volume_expansion();
    _impl_.type_.volume_expansion_ = volume_expansion;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.PluginCapability.volume_expansion)
}
PluginCapability::PluginCapability(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.PluginCapability)
}
inline PROTOBUF_NDEBUG_INLINE PluginCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PluginCapability::PluginCapability(
    ::google::protobuf::Arena* arena,
    const PluginCapability& from)
    : ::google::protobuf::Message(arena) {
  PluginCapability* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kService:
        _impl_.type_.service_ = CreateMaybeMessage<::csi::v1::PluginCapability_Service>(arena, *from._impl_.type_.service_);
        break;
      case kVolumeExpansion:
        _impl_.type_.volume_expansion_ = CreateMaybeMessage<::csi::v1::PluginCapability_VolumeExpansion>(arena, *from._impl_.type_.volume_expansion_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:csi.v1.PluginCapability)
}
inline PROTOBUF_NDEBUG_INLINE PluginCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PluginCapability::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PluginCapability::~PluginCapability() {
  // @@protoc_insertion_point(destructor:csi.v1.PluginCapability)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PluginCapability::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void PluginCapability::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:csi.v1.PluginCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kService: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.service_;
      }
      break;
    }
    case kVolumeExpansion: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.volume_expansion_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void PluginCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.PluginCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PluginCapability::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> PluginCapability::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PluginCapability_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.PluginCapability.Service service = 1;
    {PROTOBUF_FIELD_OFFSET(PluginCapability, _impl_.type_.service_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .csi.v1.PluginCapability.VolumeExpansion volume_expansion = 2;
    {PROTOBUF_FIELD_OFFSET(PluginCapability, _impl_.type_.volume_expansion_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::PluginCapability_Service>()},
    {::_pbi::TcParser::GetTable<::csi::v1::PluginCapability_VolumeExpansion>()},
  }}, {{
  }},
};

::uint8_t* PluginCapability::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.PluginCapability)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (type_case()) {
    case kService: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::service(this),
          _Internal::service(this).GetCachedSize(), target, stream);
      break;
    }
    case kVolumeExpansion: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::volume_expansion(this),
          _Internal::volume_expansion(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.PluginCapability)
  return target;
}

::size_t PluginCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.PluginCapability)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .csi.v1.PluginCapability.Service service = 1;
    case kService: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.service_);
      break;
    }
    // .csi.v1.PluginCapability.VolumeExpansion volume_expansion = 2;
    case kVolumeExpansion: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.volume_expansion_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PluginCapability::_class_data_ = {
    PluginCapability::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PluginCapability::GetClassData() const {
  return &_class_data_;
}

void PluginCapability::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PluginCapability*>(&to_msg);
  auto& from = static_cast<const PluginCapability&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.PluginCapability)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kService: {
      _this->_internal_mutable_service()->::csi::v1::PluginCapability_Service::MergeFrom(
          from._internal_service());
      break;
    }
    case kVolumeExpansion: {
      _this->_internal_mutable_volume_expansion()->::csi::v1::PluginCapability_VolumeExpansion::MergeFrom(
          from._internal_volume_expansion());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PluginCapability::CopyFrom(const PluginCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.PluginCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PluginCapability::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PluginCapability::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PluginCapability::InternalSwap(PluginCapability* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PluginCapability::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[7]);
}
// ===================================================================

class ProbeRequest::_Internal {
 public:
};

ProbeRequest::ProbeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.ProbeRequest)
}
ProbeRequest::ProbeRequest(
    ::google::protobuf::Arena* arena,
    const ProbeRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ProbeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ProbeRequest)
}









::google::protobuf::Metadata ProbeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[8]);
}
// ===================================================================

class ProbeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ProbeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProbeResponse, _impl_._has_bits_);
  static const ::google::protobuf::BoolValue& ready(const ProbeResponse* msg);
  static void set_has_ready(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::BoolValue& ProbeResponse::_Internal::ready(const ProbeResponse* msg) {
  return *msg->_impl_.ready_;
}
void ProbeResponse::clear_ready() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.ready_ != nullptr) _impl_.ready_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ProbeResponse::ProbeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ProbeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ProbeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ProbeResponse::ProbeResponse(
    ::google::protobuf::Arena* arena,
    const ProbeResponse& from)
    : ::google::protobuf::Message(arena) {
  ProbeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ready_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.ready_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ProbeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ProbeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProbeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ready_ = {};
}
ProbeResponse::~ProbeResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ProbeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProbeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ready_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProbeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ProbeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ready_ != nullptr);
    _impl_.ready_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProbeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ProbeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProbeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProbeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.BoolValue ready = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProbeResponse, _impl_.ready_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.BoolValue ready = 1;
    {PROTOBUF_FIELD_OFFSET(ProbeResponse, _impl_.ready_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
  }}, {{
  }},
};

::uint8_t* ProbeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ProbeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.BoolValue ready = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ready(this),
        _Internal::ready(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ProbeResponse)
  return target;
}

::size_t ProbeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ProbeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue ready = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ready_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProbeResponse::_class_data_ = {
    ProbeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProbeResponse::GetClassData() const {
  return &_class_data_;
}

void ProbeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProbeResponse*>(&to_msg);
  auto& from = static_cast<const ProbeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ProbeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ready()->::google::protobuf::BoolValue::MergeFrom(
        from._internal_ready());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProbeResponse::CopyFrom(const ProbeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ProbeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProbeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProbeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProbeResponse::InternalSwap(ProbeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ready_, other->_impl_.ready_);
}

::google::protobuf::Metadata ProbeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[9]);
}
// ===================================================================

CreateVolumeRequest_ParametersEntry_DoNotUse::CreateVolumeRequest_ParametersEntry_DoNotUse() {}
CreateVolumeRequest_ParametersEntry_DoNotUse::CreateVolumeRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata CreateVolumeRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[10]);
}
// ===================================================================

CreateVolumeRequest_SecretsEntry_DoNotUse::CreateVolumeRequest_SecretsEntry_DoNotUse() {}
CreateVolumeRequest_SecretsEntry_DoNotUse::CreateVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata CreateVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[11]);
}
// ===================================================================

CreateVolumeRequest_MutableParametersEntry_DoNotUse::CreateVolumeRequest_MutableParametersEntry_DoNotUse() {}
CreateVolumeRequest_MutableParametersEntry_DoNotUse::CreateVolumeRequest_MutableParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata CreateVolumeRequest_MutableParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[12]);
}
// ===================================================================

class CreateVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_._has_bits_);
  static const ::csi::v1::CapacityRange& capacity_range(const CreateVolumeRequest* msg);
  static void set_has_capacity_range(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::csi::v1::VolumeContentSource& volume_content_source(const CreateVolumeRequest* msg);
  static void set_has_volume_content_source(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::csi::v1::TopologyRequirement& accessibility_requirements(const CreateVolumeRequest* msg);
  static void set_has_accessibility_requirements(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::csi::v1::CapacityRange& CreateVolumeRequest::_Internal::capacity_range(const CreateVolumeRequest* msg) {
  return *msg->_impl_.capacity_range_;
}
const ::csi::v1::VolumeContentSource& CreateVolumeRequest::_Internal::volume_content_source(const CreateVolumeRequest* msg) {
  return *msg->_impl_.volume_content_source_;
}
const ::csi::v1::TopologyRequirement& CreateVolumeRequest::_Internal::accessibility_requirements(const CreateVolumeRequest* msg) {
  return *msg->_impl_.accessibility_requirements_;
}
CreateVolumeRequest::CreateVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.CreateVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        volume_capabilities_{visibility, arena, from.volume_capabilities_},
        parameters_{visibility, arena, from.parameters_},
        secrets_{visibility, arena, from.secrets_},
        mutable_parameters_{visibility, arena, from.mutable_parameters_},
        name_(arena, from.name_) {}

CreateVolumeRequest::CreateVolumeRequest(
    ::google::protobuf::Arena* arena,
    const CreateVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.capacity_range_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::CapacityRange>(arena, *from._impl_.capacity_range_)
                : nullptr;
  _impl_.volume_content_source_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::csi::v1::VolumeContentSource>(arena, *from._impl_.volume_content_source_)
                : nullptr;
  _impl_.accessibility_requirements_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::csi::v1::TopologyRequirement>(arena, *from._impl_.accessibility_requirements_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.CreateVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        volume_capabilities_{visibility, arena},
        parameters_{visibility, arena},
        secrets_{visibility, arena},
        mutable_parameters_{visibility, arena},
        name_(arena) {}

inline void CreateVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capacity_range_),
           0,
           offsetof(Impl_, accessibility_requirements_) -
               offsetof(Impl_, capacity_range_) +
               sizeof(Impl_::accessibility_requirements_));
}
CreateVolumeRequest::~CreateVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.CreateVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.capacity_range_;
  delete _impl_.volume_content_source_;
  delete _impl_.accessibility_requirements_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.CreateVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_capabilities_.Clear();
  _impl_.parameters_.Clear();
  _impl_.secrets_.Clear();
  _impl_.mutable_parameters_.Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.capacity_range_ != nullptr);
      _impl_.capacity_range_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.volume_content_source_ != nullptr);
      _impl_.volume_content_source_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.accessibility_requirements_ != nullptr);
      _impl_.accessibility_requirements_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 7, 82, 2> CreateVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.name_)}},
    // .csi.v1.CapacityRange capacity_range = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.capacity_range_)}},
    // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.volume_capabilities_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .csi.v1.VolumeContentSource volume_content_source = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 4, PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.volume_content_source_)}},
    // .csi.v1.TopologyRequirement accessibility_requirements = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 5, PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.accessibility_requirements_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .csi.v1.CapacityRange capacity_range = 2;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.capacity_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.volume_capabilities_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> parameters = 4;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.parameters_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.secrets_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .csi.v1.VolumeContentSource volume_content_source = 6;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.volume_content_source_), _Internal::kHasBitsOffset + 1, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .csi.v1.TopologyRequirement accessibility_requirements = 7;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.accessibility_requirements_), _Internal::kHasBitsOffset + 2, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> mutable_parameters = 8 [(.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.mutable_parameters_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::CapacityRange>()},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateVolumeRequest()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeContentSource>()},
    {::_pbi::TcParser::GetTable<::csi::v1::TopologyRequirement>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateVolumeRequest()._impl_.mutable_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\32\4\0\0\12\7\0\0\22\0\0\0\0\0\0\0"
    "csi.v1.CreateVolumeRequest"
    "name"
    "parameters"
    "secrets"
    "mutable_parameters"
  }},
};

::uint8_t* CreateVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.CreateVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.CapacityRange capacity_range = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::capacity_range(this),
        _Internal::capacity_range(this).GetCachedSize(), target, stream);
  }

  // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_volume_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_volume_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, string> parameters = 4;
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.parameters");
      }
    }
  }

  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.secrets");
      }
    }
  }

  // .csi.v1.VolumeContentSource volume_content_source = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::volume_content_source(this),
        _Internal::volume_content_source(this).GetCachedSize(), target, stream);
  }

  // .csi.v1.TopologyRequirement accessibility_requirements = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::accessibility_requirements(this),
        _Internal::accessibility_requirements(this).GetCachedSize(), target, stream);
  }

  // map<string, string> mutable_parameters = 8 [(.csi.v1.alpha_field) = true];
  if (!_internal_mutable_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_mutable_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.mutable_parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeRequest.mutable_parameters");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.CreateVolumeRequest)
  return target;
}

::size_t CreateVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.CreateVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
  total_size += 1UL * this->_internal_volume_capabilities_size();
  for (const auto& msg : this->_internal_volume_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, string> parameters = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> mutable_parameters = 8 [(.csi.v1.alpha_field) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_mutable_parameters_size());
  for (const auto& entry : _internal_mutable_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .csi.v1.CapacityRange capacity_range = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.capacity_range_);
    }

    // .csi.v1.VolumeContentSource volume_content_source = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_content_source_);
    }

    // .csi.v1.TopologyRequirement accessibility_requirements = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.accessibility_requirements_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateVolumeRequest::_class_data_ = {
    CreateVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void CreateVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateVolumeRequest*>(&to_msg);
  auto& from = static_cast<const CreateVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.CreateVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_volume_capabilities()->MergeFrom(
      from._internal_volume_capabilities());
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.mutable_parameters_.MergeFrom(from._impl_.mutable_parameters_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_capacity_range()->::csi::v1::CapacityRange::MergeFrom(
          from._internal_capacity_range());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_volume_content_source()->::csi::v1::VolumeContentSource::MergeFrom(
          from._internal_volume_content_source());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_accessibility_requirements()->::csi::v1::TopologyRequirement::MergeFrom(
          from._internal_accessibility_requirements());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVolumeRequest::CopyFrom(const CreateVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.CreateVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateVolumeRequest::InternalSwap(CreateVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.volume_capabilities_.InternalSwap(&other->_impl_.volume_capabilities_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.mutable_parameters_.InternalSwap(&other->_impl_.mutable_parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.accessibility_requirements_)
      + sizeof(CreateVolumeRequest::_impl_.accessibility_requirements_)
      - PROTOBUF_FIELD_OFFSET(CreateVolumeRequest, _impl_.capacity_range_)>(
          reinterpret_cast<char*>(&_impl_.capacity_range_),
          reinterpret_cast<char*>(&other->_impl_.capacity_range_));
}

::google::protobuf::Metadata CreateVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[13]);
}
// ===================================================================

class VolumeContentSource_SnapshotSource::_Internal {
 public:
};

VolumeContentSource_SnapshotSource::VolumeContentSource_SnapshotSource(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeContentSource.SnapshotSource)
}
inline PROTOBUF_NDEBUG_INLINE VolumeContentSource_SnapshotSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : snapshot_id_(arena, from.snapshot_id_),
        _cached_size_{0} {}

VolumeContentSource_SnapshotSource::VolumeContentSource_SnapshotSource(
    ::google::protobuf::Arena* arena,
    const VolumeContentSource_SnapshotSource& from)
    : ::google::protobuf::Message(arena) {
  VolumeContentSource_SnapshotSource* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeContentSource.SnapshotSource)
}
inline PROTOBUF_NDEBUG_INLINE VolumeContentSource_SnapshotSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : snapshot_id_(arena),
        _cached_size_{0} {}

inline void VolumeContentSource_SnapshotSource::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VolumeContentSource_SnapshotSource::~VolumeContentSource_SnapshotSource() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeContentSource.SnapshotSource)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeContentSource_SnapshotSource::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.snapshot_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeContentSource_SnapshotSource::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeContentSource.SnapshotSource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeContentSource_SnapshotSource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 61, 2> VolumeContentSource_SnapshotSource::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VolumeContentSource_SnapshotSource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string snapshot_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeContentSource_SnapshotSource, _impl_.snapshot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string snapshot_id = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeContentSource_SnapshotSource, _impl_.snapshot_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\13\0\0\0\0\0\0"
    "csi.v1.VolumeContentSource.SnapshotSource"
    "snapshot_id"
  }},
};

::uint8_t* VolumeContentSource_SnapshotSource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeContentSource.SnapshotSource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string snapshot_id = 1;
  if (!this->_internal_snapshot_id().empty()) {
    const std::string& _s = this->_internal_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.VolumeContentSource.SnapshotSource.snapshot_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeContentSource.SnapshotSource)
  return target;
}

::size_t VolumeContentSource_SnapshotSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeContentSource.SnapshotSource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string snapshot_id = 1;
  if (!this->_internal_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_snapshot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeContentSource_SnapshotSource::_class_data_ = {
    VolumeContentSource_SnapshotSource::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeContentSource_SnapshotSource::GetClassData() const {
  return &_class_data_;
}

void VolumeContentSource_SnapshotSource::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeContentSource_SnapshotSource*>(&to_msg);
  auto& from = static_cast<const VolumeContentSource_SnapshotSource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeContentSource.SnapshotSource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_snapshot_id().empty()) {
    _this->_internal_set_snapshot_id(from._internal_snapshot_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeContentSource_SnapshotSource::CopyFrom(const VolumeContentSource_SnapshotSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeContentSource.SnapshotSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeContentSource_SnapshotSource::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeContentSource_SnapshotSource::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeContentSource_SnapshotSource::InternalSwap(VolumeContentSource_SnapshotSource* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snapshot_id_, &other->_impl_.snapshot_id_, arena);
}

::google::protobuf::Metadata VolumeContentSource_SnapshotSource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[14]);
}
// ===================================================================

class VolumeContentSource_VolumeSource::_Internal {
 public:
};

VolumeContentSource_VolumeSource::VolumeContentSource_VolumeSource(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeContentSource.VolumeSource)
}
inline PROTOBUF_NDEBUG_INLINE VolumeContentSource_VolumeSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : volume_id_(arena, from.volume_id_),
        _cached_size_{0} {}

VolumeContentSource_VolumeSource::VolumeContentSource_VolumeSource(
    ::google::protobuf::Arena* arena,
    const VolumeContentSource_VolumeSource& from)
    : ::google::protobuf::Message(arena) {
  VolumeContentSource_VolumeSource* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeContentSource.VolumeSource)
}
inline PROTOBUF_NDEBUG_INLINE VolumeContentSource_VolumeSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : volume_id_(arena),
        _cached_size_{0} {}

inline void VolumeContentSource_VolumeSource::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VolumeContentSource_VolumeSource::~VolumeContentSource_VolumeSource() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeContentSource.VolumeSource)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeContentSource_VolumeSource::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeContentSource_VolumeSource::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeContentSource.VolumeSource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeContentSource_VolumeSource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> VolumeContentSource_VolumeSource::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VolumeContentSource_VolumeSource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeContentSource_VolumeSource, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeContentSource_VolumeSource, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\11\0\0\0\0\0\0"
    "csi.v1.VolumeContentSource.VolumeSource"
    "volume_id"
  }},
};

::uint8_t* VolumeContentSource_VolumeSource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeContentSource.VolumeSource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.VolumeContentSource.VolumeSource.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeContentSource.VolumeSource)
  return target;
}

::size_t VolumeContentSource_VolumeSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeContentSource.VolumeSource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeContentSource_VolumeSource::_class_data_ = {
    VolumeContentSource_VolumeSource::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeContentSource_VolumeSource::GetClassData() const {
  return &_class_data_;
}

void VolumeContentSource_VolumeSource::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeContentSource_VolumeSource*>(&to_msg);
  auto& from = static_cast<const VolumeContentSource_VolumeSource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeContentSource.VolumeSource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeContentSource_VolumeSource::CopyFrom(const VolumeContentSource_VolumeSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeContentSource.VolumeSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeContentSource_VolumeSource::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeContentSource_VolumeSource::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeContentSource_VolumeSource::InternalSwap(VolumeContentSource_VolumeSource* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
}

::google::protobuf::Metadata VolumeContentSource_VolumeSource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[15]);
}
// ===================================================================

class VolumeContentSource::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeContentSource, _impl_._oneof_case_);
  static const ::csi::v1::VolumeContentSource_SnapshotSource& snapshot(const VolumeContentSource* msg);
  static const ::csi::v1::VolumeContentSource_VolumeSource& volume(const VolumeContentSource* msg);
};

const ::csi::v1::VolumeContentSource_SnapshotSource& VolumeContentSource::_Internal::snapshot(const VolumeContentSource* msg) {
  return *msg->_impl_.type_.snapshot_;
}
const ::csi::v1::VolumeContentSource_VolumeSource& VolumeContentSource::_Internal::volume(const VolumeContentSource* msg) {
  return *msg->_impl_.type_.volume_;
}
void VolumeContentSource::set_allocated_snapshot(::csi::v1::VolumeContentSource_SnapshotSource* snapshot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (snapshot) {
    ::google::protobuf::Arena* submessage_arena = snapshot->GetArena();
    if (message_arena != submessage_arena) {
      snapshot = ::google::protobuf::internal::GetOwnedMessage(message_arena, snapshot, submessage_arena);
    }
    set_has_snapshot();
    _impl_.type_.snapshot_ = snapshot;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.VolumeContentSource.snapshot)
}
void VolumeContentSource::set_allocated_volume(::csi::v1::VolumeContentSource_VolumeSource* volume) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (volume) {
    ::google::protobuf::Arena* submessage_arena = volume->GetArena();
    if (message_arena != submessage_arena) {
      volume = ::google::protobuf::internal::GetOwnedMessage(message_arena, volume, submessage_arena);
    }
    set_has_volume();
    _impl_.type_.volume_ = volume;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.VolumeContentSource.volume)
}
VolumeContentSource::VolumeContentSource(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeContentSource)
}
inline PROTOBUF_NDEBUG_INLINE VolumeContentSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

VolumeContentSource::VolumeContentSource(
    ::google::protobuf::Arena* arena,
    const VolumeContentSource& from)
    : ::google::protobuf::Message(arena) {
  VolumeContentSource* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kSnapshot:
        _impl_.type_.snapshot_ = CreateMaybeMessage<::csi::v1::VolumeContentSource_SnapshotSource>(arena, *from._impl_.type_.snapshot_);
        break;
      case kVolume:
        _impl_.type_.volume_ = CreateMaybeMessage<::csi::v1::VolumeContentSource_VolumeSource>(arena, *from._impl_.type_.volume_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeContentSource)
}
inline PROTOBUF_NDEBUG_INLINE VolumeContentSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void VolumeContentSource::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VolumeContentSource::~VolumeContentSource() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeContentSource)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeContentSource::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void VolumeContentSource::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:csi.v1.VolumeContentSource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kSnapshot: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.snapshot_;
      }
      break;
    }
    case kVolume: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.volume_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void VolumeContentSource::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeContentSource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeContentSource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> VolumeContentSource::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VolumeContentSource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.VolumeContentSource.SnapshotSource snapshot = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeContentSource, _impl_.type_.snapshot_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .csi.v1.VolumeContentSource.VolumeSource volume = 2;
    {PROTOBUF_FIELD_OFFSET(VolumeContentSource, _impl_.type_.volume_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeContentSource_SnapshotSource>()},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeContentSource_VolumeSource>()},
  }}, {{
  }},
};

::uint8_t* VolumeContentSource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeContentSource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (type_case()) {
    case kSnapshot: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::snapshot(this),
          _Internal::snapshot(this).GetCachedSize(), target, stream);
      break;
    }
    case kVolume: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::volume(this),
          _Internal::volume(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeContentSource)
  return target;
}

::size_t VolumeContentSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeContentSource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .csi.v1.VolumeContentSource.SnapshotSource snapshot = 1;
    case kSnapshot: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.snapshot_);
      break;
    }
    // .csi.v1.VolumeContentSource.VolumeSource volume = 2;
    case kVolume: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.volume_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeContentSource::_class_data_ = {
    VolumeContentSource::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeContentSource::GetClassData() const {
  return &_class_data_;
}

void VolumeContentSource::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeContentSource*>(&to_msg);
  auto& from = static_cast<const VolumeContentSource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeContentSource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kSnapshot: {
      _this->_internal_mutable_snapshot()->::csi::v1::VolumeContentSource_SnapshotSource::MergeFrom(
          from._internal_snapshot());
      break;
    }
    case kVolume: {
      _this->_internal_mutable_volume()->::csi::v1::VolumeContentSource_VolumeSource::MergeFrom(
          from._internal_volume());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeContentSource::CopyFrom(const VolumeContentSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeContentSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeContentSource::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeContentSource::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeContentSource::InternalSwap(VolumeContentSource* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata VolumeContentSource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[16]);
}
// ===================================================================

class CreateVolumeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateVolumeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateVolumeResponse, _impl_._has_bits_);
  static const ::csi::v1::Volume& volume(const CreateVolumeResponse* msg);
  static void set_has_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::Volume& CreateVolumeResponse::_Internal::volume(const CreateVolumeResponse* msg) {
  return *msg->_impl_.volume_;
}
CreateVolumeResponse::CreateVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.CreateVolumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateVolumeResponse::CreateVolumeResponse(
    ::google::protobuf::Arena* arena,
    const CreateVolumeResponse& from)
    : ::google::protobuf::Message(arena) {
  CreateVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::Volume>(arena, *from._impl_.volume_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.CreateVolumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateVolumeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volume_ = {};
}
CreateVolumeResponse::~CreateVolumeResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.CreateVolumeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateVolumeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.volume_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.CreateVolumeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.volume_ != nullptr);
    _impl_.volume_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateVolumeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateVolumeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateVolumeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateVolumeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.Volume volume = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateVolumeResponse, _impl_.volume_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.Volume volume = 1;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeResponse, _impl_.volume_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Volume>()},
  }}, {{
  }},
};

::uint8_t* CreateVolumeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.CreateVolumeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.Volume volume = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::volume(this),
        _Internal::volume(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.CreateVolumeResponse)
  return target;
}

::size_t CreateVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.CreateVolumeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.Volume volume = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateVolumeResponse::_class_data_ = {
    CreateVolumeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateVolumeResponse::GetClassData() const {
  return &_class_data_;
}

void CreateVolumeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateVolumeResponse*>(&to_msg);
  auto& from = static_cast<const CreateVolumeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.CreateVolumeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_volume()->::csi::v1::Volume::MergeFrom(
        from._internal_volume());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVolumeResponse::CopyFrom(const CreateVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.CreateVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateVolumeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateVolumeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateVolumeResponse::InternalSwap(CreateVolumeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.volume_, other->_impl_.volume_);
}

::google::protobuf::Metadata CreateVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[17]);
}
// ===================================================================

class VolumeCapability_BlockVolume::_Internal {
 public:
};

VolumeCapability_BlockVolume::VolumeCapability_BlockVolume(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeCapability.BlockVolume)
}
VolumeCapability_BlockVolume::VolumeCapability_BlockVolume(
    ::google::protobuf::Arena* arena,
    const VolumeCapability_BlockVolume& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  VolumeCapability_BlockVolume* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeCapability.BlockVolume)
}









::google::protobuf::Metadata VolumeCapability_BlockVolume::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[18]);
}
// ===================================================================

class VolumeCapability_MountVolume::_Internal {
 public:
};

VolumeCapability_MountVolume::VolumeCapability_MountVolume(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeCapability.MountVolume)
}
inline PROTOBUF_NDEBUG_INLINE VolumeCapability_MountVolume::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : mount_flags_{visibility, arena, from.mount_flags_},
        fs_type_(arena, from.fs_type_),
        volume_mount_group_(arena, from.volume_mount_group_),
        _cached_size_{0} {}

VolumeCapability_MountVolume::VolumeCapability_MountVolume(
    ::google::protobuf::Arena* arena,
    const VolumeCapability_MountVolume& from)
    : ::google::protobuf::Message(arena) {
  VolumeCapability_MountVolume* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeCapability.MountVolume)
}
inline PROTOBUF_NDEBUG_INLINE VolumeCapability_MountVolume::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mount_flags_{visibility, arena},
        fs_type_(arena),
        volume_mount_group_(arena),
        _cached_size_{0} {}

inline void VolumeCapability_MountVolume::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VolumeCapability_MountVolume::~VolumeCapability_MountVolume() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeCapability.MountVolume)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeCapability_MountVolume::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.fs_type_.Destroy();
  _impl_.volume_mount_group_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeCapability_MountVolume::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeCapability.MountVolume)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mount_flags_.Clear();
  _impl_.fs_type_.ClearToEmpty();
  _impl_.volume_mount_group_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeCapability_MountVolume::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 80, 2> VolumeCapability_MountVolume::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VolumeCapability_MountVolume_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string fs_type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeCapability_MountVolume, _impl_.fs_type_)}},
    // repeated string mount_flags = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeCapability_MountVolume, _impl_.mount_flags_)}},
    // string volume_mount_group = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeCapability_MountVolume, _impl_.volume_mount_group_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string fs_type = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeCapability_MountVolume, _impl_.fs_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string mount_flags = 2;
    {PROTOBUF_FIELD_OFFSET(VolumeCapability_MountVolume, _impl_.mount_flags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string volume_mount_group = 3;
    {PROTOBUF_FIELD_OFFSET(VolumeCapability_MountVolume, _impl_.volume_mount_group_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\7\13\22\0\0\0\0"
    "csi.v1.VolumeCapability.MountVolume"
    "fs_type"
    "mount_flags"
    "volume_mount_group"
  }},
};

::uint8_t* VolumeCapability_MountVolume::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeCapability.MountVolume)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string fs_type = 1;
  if (!this->_internal_fs_type().empty()) {
    const std::string& _s = this->_internal_fs_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.VolumeCapability.MountVolume.fs_type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string mount_flags = 2;
  for (int i = 0, n = this->_internal_mount_flags_size(); i < n; ++i) {
    const auto& s = this->_internal_mount_flags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.VolumeCapability.MountVolume.mount_flags");
    target = stream->WriteString(2, s, target);
  }

  // string volume_mount_group = 3;
  if (!this->_internal_volume_mount_group().empty()) {
    const std::string& _s = this->_internal_volume_mount_group();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.VolumeCapability.MountVolume.volume_mount_group");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeCapability.MountVolume)
  return target;
}

::size_t VolumeCapability_MountVolume::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeCapability.MountVolume)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string mount_flags = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_mount_flags().size());
  for (int i = 0, n = _internal_mount_flags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_mount_flags().Get(i));
  }
  // string fs_type = 1;
  if (!this->_internal_fs_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_fs_type());
  }

  // string volume_mount_group = 3;
  if (!this->_internal_volume_mount_group().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_mount_group());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeCapability_MountVolume::_class_data_ = {
    VolumeCapability_MountVolume::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeCapability_MountVolume::GetClassData() const {
  return &_class_data_;
}

void VolumeCapability_MountVolume::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeCapability_MountVolume*>(&to_msg);
  auto& from = static_cast<const VolumeCapability_MountVolume&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeCapability.MountVolume)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mount_flags()->MergeFrom(from._internal_mount_flags());
  if (!from._internal_fs_type().empty()) {
    _this->_internal_set_fs_type(from._internal_fs_type());
  }
  if (!from._internal_volume_mount_group().empty()) {
    _this->_internal_set_volume_mount_group(from._internal_volume_mount_group());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeCapability_MountVolume::CopyFrom(const VolumeCapability_MountVolume& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeCapability.MountVolume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeCapability_MountVolume::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeCapability_MountVolume::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeCapability_MountVolume::InternalSwap(VolumeCapability_MountVolume* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mount_flags_.InternalSwap(&other->_impl_.mount_flags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fs_type_, &other->_impl_.fs_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_mount_group_, &other->_impl_.volume_mount_group_, arena);
}

::google::protobuf::Metadata VolumeCapability_MountVolume::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[19]);
}
// ===================================================================

class VolumeCapability_AccessMode::_Internal {
 public:
};

VolumeCapability_AccessMode::VolumeCapability_AccessMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeCapability.AccessMode)
}
VolumeCapability_AccessMode::VolumeCapability_AccessMode(
    ::google::protobuf::Arena* arena, const VolumeCapability_AccessMode& from)
    : VolumeCapability_AccessMode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VolumeCapability_AccessMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VolumeCapability_AccessMode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mode_ = {};
}
VolumeCapability_AccessMode::~VolumeCapability_AccessMode() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeCapability.AccessMode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeCapability_AccessMode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeCapability_AccessMode::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeCapability.AccessMode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeCapability_AccessMode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> VolumeCapability_AccessMode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VolumeCapability_AccessMode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeCapability.AccessMode.Mode mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VolumeCapability_AccessMode, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeCapability_AccessMode, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.VolumeCapability.AccessMode.Mode mode = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeCapability_AccessMode, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VolumeCapability_AccessMode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeCapability.AccessMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.VolumeCapability.AccessMode.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeCapability.AccessMode)
  return target;
}

::size_t VolumeCapability_AccessMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeCapability.AccessMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.VolumeCapability.AccessMode.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeCapability_AccessMode::_class_data_ = {
    VolumeCapability_AccessMode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeCapability_AccessMode::GetClassData() const {
  return &_class_data_;
}

void VolumeCapability_AccessMode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeCapability_AccessMode*>(&to_msg);
  auto& from = static_cast<const VolumeCapability_AccessMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeCapability.AccessMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeCapability_AccessMode::CopyFrom(const VolumeCapability_AccessMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeCapability.AccessMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeCapability_AccessMode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeCapability_AccessMode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeCapability_AccessMode::InternalSwap(VolumeCapability_AccessMode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata VolumeCapability_AccessMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[20]);
}
// ===================================================================

class VolumeCapability::_Internal {
 public:
  using HasBits = decltype(std::declval<VolumeCapability>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VolumeCapability, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::csi::v1::VolumeCapability, _impl_._oneof_case_);
  static const ::csi::v1::VolumeCapability_BlockVolume& block(const VolumeCapability* msg);
  static const ::csi::v1::VolumeCapability_MountVolume& mount(const VolumeCapability* msg);
  static const ::csi::v1::VolumeCapability_AccessMode& access_mode(const VolumeCapability* msg);
  static void set_has_access_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeCapability_BlockVolume& VolumeCapability::_Internal::block(const VolumeCapability* msg) {
  return *msg->_impl_.access_type_.block_;
}
const ::csi::v1::VolumeCapability_MountVolume& VolumeCapability::_Internal::mount(const VolumeCapability* msg) {
  return *msg->_impl_.access_type_.mount_;
}
const ::csi::v1::VolumeCapability_AccessMode& VolumeCapability::_Internal::access_mode(const VolumeCapability* msg) {
  return *msg->_impl_.access_mode_;
}
void VolumeCapability::set_allocated_block(::csi::v1::VolumeCapability_BlockVolume* block) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_access_type();
  if (block) {
    ::google::protobuf::Arena* submessage_arena = block->GetArena();
    if (message_arena != submessage_arena) {
      block = ::google::protobuf::internal::GetOwnedMessage(message_arena, block, submessage_arena);
    }
    set_has_block();
    _impl_.access_type_.block_ = block;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.VolumeCapability.block)
}
void VolumeCapability::set_allocated_mount(::csi::v1::VolumeCapability_MountVolume* mount) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_access_type();
  if (mount) {
    ::google::protobuf::Arena* submessage_arena = mount->GetArena();
    if (message_arena != submessage_arena) {
      mount = ::google::protobuf::internal::GetOwnedMessage(message_arena, mount, submessage_arena);
    }
    set_has_mount();
    _impl_.access_type_.mount_ = mount;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.VolumeCapability.mount)
}
VolumeCapability::VolumeCapability(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeCapability)
}
inline PROTOBUF_NDEBUG_INLINE VolumeCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        access_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

VolumeCapability::VolumeCapability(
    ::google::protobuf::Arena* arena,
    const VolumeCapability& from)
    : ::google::protobuf::Message(arena) {
  VolumeCapability* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.access_mode_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeCapability_AccessMode>(arena, *from._impl_.access_mode_)
                : nullptr;
  switch (access_type_case()) {
    case ACCESS_TYPE_NOT_SET:
      break;
      case kBlock:
        _impl_.access_type_.block_ = CreateMaybeMessage<::csi::v1::VolumeCapability_BlockVolume>(arena, *from._impl_.access_type_.block_);
        break;
      case kMount:
        _impl_.access_type_.mount_ = CreateMaybeMessage<::csi::v1::VolumeCapability_MountVolume>(arena, *from._impl_.access_type_.mount_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeCapability)
}
inline PROTOBUF_NDEBUG_INLINE VolumeCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        access_type_{},
        _oneof_case_{} {}

inline void VolumeCapability::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.access_mode_ = {};
}
VolumeCapability::~VolumeCapability() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeCapability)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeCapability::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.access_mode_;
  if (has_access_type()) {
    clear_access_type();
  }
  _impl_.~Impl_();
}

void VolumeCapability::clear_access_type() {
// @@protoc_insertion_point(one_of_clear_start:csi.v1.VolumeCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (access_type_case()) {
    case kBlock: {
      if (GetArena() == nullptr) {
        delete _impl_.access_type_.block_;
      }
      break;
    }
    case kMount: {
      if (GetArena() == nullptr) {
        delete _impl_.access_type_.mount_;
      }
      break;
    }
    case ACCESS_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ACCESS_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void VolumeCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.access_mode_ != nullptr);
    _impl_.access_mode_->Clear();
  }
  clear_access_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeCapability::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> VolumeCapability::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VolumeCapability, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VolumeCapability_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeCapability.AccessMode access_mode = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(VolumeCapability, _impl_.access_mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.VolumeCapability.BlockVolume block = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeCapability, _impl_.access_type_.block_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .csi.v1.VolumeCapability.MountVolume mount = 2;
    {PROTOBUF_FIELD_OFFSET(VolumeCapability, _impl_.access_type_.mount_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .csi.v1.VolumeCapability.AccessMode access_mode = 3;
    {PROTOBUF_FIELD_OFFSET(VolumeCapability, _impl_.access_mode_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::csi::v1::_VolumeCapability_BlockVolume_default_instance_},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability_MountVolume>()},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability_AccessMode>()},
  }}, {{
  }},
};

::uint8_t* VolumeCapability::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeCapability)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (access_type_case()) {
    case kBlock: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::block(this),
          _Internal::block(this).GetCachedSize(), target, stream);
      break;
    }
    case kMount: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::mount(this),
          _Internal::mount(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeCapability.AccessMode access_mode = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::access_mode(this),
        _Internal::access_mode(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeCapability)
  return target;
}

::size_t VolumeCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeCapability)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.VolumeCapability.AccessMode access_mode = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.access_mode_);
  }

  switch (access_type_case()) {
    // .csi.v1.VolumeCapability.BlockVolume block = 1;
    case kBlock: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.access_type_.block_);
      break;
    }
    // .csi.v1.VolumeCapability.MountVolume mount = 2;
    case kMount: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.access_type_.mount_);
      break;
    }
    case ACCESS_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeCapability::_class_data_ = {
    VolumeCapability::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeCapability::GetClassData() const {
  return &_class_data_;
}

void VolumeCapability::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeCapability*>(&to_msg);
  auto& from = static_cast<const VolumeCapability&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeCapability)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_access_mode()->::csi::v1::VolumeCapability_AccessMode::MergeFrom(
        from._internal_access_mode());
  }
  switch (from.access_type_case()) {
    case kBlock: {
      _this->_internal_mutable_block()->::csi::v1::VolumeCapability_BlockVolume::MergeFrom(
          from._internal_block());
      break;
    }
    case kMount: {
      _this->_internal_mutable_mount()->::csi::v1::VolumeCapability_MountVolume::MergeFrom(
          from._internal_mount());
      break;
    }
    case ACCESS_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeCapability::CopyFrom(const VolumeCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeCapability::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeCapability::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeCapability::InternalSwap(VolumeCapability* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.access_mode_, other->_impl_.access_mode_);
  swap(_impl_.access_type_, other->_impl_.access_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata VolumeCapability::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[21]);
}
// ===================================================================

class CapacityRange::_Internal {
 public:
};

CapacityRange::CapacityRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.CapacityRange)
}
CapacityRange::CapacityRange(
    ::google::protobuf::Arena* arena, const CapacityRange& from)
    : CapacityRange(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CapacityRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CapacityRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, required_bytes_),
           0,
           offsetof(Impl_, limit_bytes_) -
               offsetof(Impl_, required_bytes_) +
               sizeof(Impl_::limit_bytes_));
}
CapacityRange::~CapacityRange() {
  // @@protoc_insertion_point(destructor:csi.v1.CapacityRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapacityRange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CapacityRange::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.CapacityRange)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.required_bytes_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.limit_bytes_) -
      reinterpret_cast<char*>(&_impl_.required_bytes_)) + sizeof(_impl_.limit_bytes_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CapacityRange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CapacityRange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CapacityRange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 limit_bytes = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CapacityRange, _impl_.limit_bytes_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CapacityRange, _impl_.limit_bytes_)}},
    // int64 required_bytes = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CapacityRange, _impl_.required_bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CapacityRange, _impl_.required_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 required_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(CapacityRange, _impl_.required_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 limit_bytes = 2;
    {PROTOBUF_FIELD_OFFSET(CapacityRange, _impl_.limit_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CapacityRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.CapacityRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 required_bytes = 1;
  if (this->_internal_required_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_required_bytes(), target);
  }

  // int64 limit_bytes = 2;
  if (this->_internal_limit_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_limit_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.CapacityRange)
  return target;
}

::size_t CapacityRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.CapacityRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 required_bytes = 1;
  if (this->_internal_required_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_required_bytes());
  }

  // int64 limit_bytes = 2;
  if (this->_internal_limit_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_limit_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CapacityRange::_class_data_ = {
    CapacityRange::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CapacityRange::GetClassData() const {
  return &_class_data_;
}

void CapacityRange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CapacityRange*>(&to_msg);
  auto& from = static_cast<const CapacityRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.CapacityRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_required_bytes() != 0) {
    _this->_internal_set_required_bytes(from._internal_required_bytes());
  }
  if (from._internal_limit_bytes() != 0) {
    _this->_internal_set_limit_bytes(from._internal_limit_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapacityRange::CopyFrom(const CapacityRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.CapacityRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CapacityRange::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CapacityRange::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CapacityRange::InternalSwap(CapacityRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapacityRange, _impl_.limit_bytes_)
      + sizeof(CapacityRange::_impl_.limit_bytes_)
      - PROTOBUF_FIELD_OFFSET(CapacityRange, _impl_.required_bytes_)>(
          reinterpret_cast<char*>(&_impl_.required_bytes_),
          reinterpret_cast<char*>(&other->_impl_.required_bytes_));
}

::google::protobuf::Metadata CapacityRange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[22]);
}
// ===================================================================

Volume_VolumeContextEntry_DoNotUse::Volume_VolumeContextEntry_DoNotUse() {}
Volume_VolumeContextEntry_DoNotUse::Volume_VolumeContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata Volume_VolumeContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[23]);
}
// ===================================================================

class Volume::_Internal {
 public:
  using HasBits = decltype(std::declval<Volume>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Volume, _impl_._has_bits_);
  static const ::csi::v1::VolumeContentSource& content_source(const Volume* msg);
  static void set_has_content_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeContentSource& Volume::_Internal::content_source(const Volume* msg) {
  return *msg->_impl_.content_source_;
}
Volume::Volume(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.Volume)
}
inline PROTOBUF_NDEBUG_INLINE Volume::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        volume_context_{visibility, arena, from.volume_context_},
        accessible_topology_{visibility, arena, from.accessible_topology_},
        volume_id_(arena, from.volume_id_) {}

Volume::Volume(
    ::google::protobuf::Arena* arena,
    const Volume& from)
    : ::google::protobuf::Message(arena) {
  Volume* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.content_source_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeContentSource>(arena, *from._impl_.content_source_)
                : nullptr;
  _impl_.capacity_bytes_ = from._impl_.capacity_bytes_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.Volume)
}
inline PROTOBUF_NDEBUG_INLINE Volume::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        volume_context_{visibility, arena},
        accessible_topology_{visibility, arena},
        volume_id_(arena) {}

inline void Volume::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, content_source_),
           0,
           offsetof(Impl_, capacity_bytes_) -
               offsetof(Impl_, content_source_) +
               sizeof(Impl_::capacity_bytes_));
}
Volume::~Volume() {
  // @@protoc_insertion_point(destructor:csi.v1.Volume)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Volume::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  delete _impl_.content_source_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Volume::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.Volume)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_context_.Clear();
  _impl_.accessible_topology_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.content_source_ != nullptr);
    _impl_.content_source_->Clear();
  }
  _impl_.capacity_bytes_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Volume::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 45, 2> Volume::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Volume, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Volume_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 capacity_bytes = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Volume, _impl_.capacity_bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Volume, _impl_.capacity_bytes_)}},
    // string volume_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Volume, _impl_.volume_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .csi.v1.VolumeContentSource content_source = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(Volume, _impl_.content_source_)}},
    // repeated .csi.v1.Topology accessible_topology = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(Volume, _impl_.accessible_topology_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 capacity_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(Volume, _impl_.capacity_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string volume_id = 2;
    {PROTOBUF_FIELD_OFFSET(Volume, _impl_.volume_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> volume_context = 3;
    {PROTOBUF_FIELD_OFFSET(Volume, _impl_.volume_context_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .csi.v1.VolumeContentSource content_source = 4;
    {PROTOBUF_FIELD_OFFSET(Volume, _impl_.content_source_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .csi.v1.Topology accessible_topology = 5;
    {PROTOBUF_FIELD_OFFSET(Volume, _impl_.accessible_topology_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Volume()._impl_.volume_context_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeContentSource>()},
    {::_pbi::TcParser::GetTable<::csi::v1::Topology>()},
  }}, {{
    "\15\0\11\16\0\0\0\0"
    "csi.v1.Volume"
    "volume_id"
    "volume_context"
  }},
};

::uint8_t* Volume::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.Volume)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 capacity_bytes = 1;
  if (this->_internal_capacity_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_capacity_bytes(), target);
  }

  // string volume_id = 2;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Volume.volume_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // map<string, string> volume_context = 3;
  if (!_internal_volume_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_volume_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Volume.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Volume.volume_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Volume.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Volume.volume_context");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeContentSource content_source = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::content_source(this),
        _Internal::content_source(this).GetCachedSize(), target, stream);
  }

  // repeated .csi.v1.Topology accessible_topology = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_accessible_topology_size()); i < n; i++) {
    const auto& repfield = this->_internal_accessible_topology().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.Volume)
  return target;
}

::size_t Volume::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.Volume)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> volume_context = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_volume_context_size());
  for (const auto& entry : _internal_volume_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated .csi.v1.Topology accessible_topology = 5;
  total_size += 1UL * this->_internal_accessible_topology_size();
  for (const auto& msg : this->_internal_accessible_topology()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string volume_id = 2;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // .csi.v1.VolumeContentSource content_source = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.content_source_);
  }

  // int64 capacity_bytes = 1;
  if (this->_internal_capacity_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_capacity_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Volume::_class_data_ = {
    Volume::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Volume::GetClassData() const {
  return &_class_data_;
}

void Volume::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Volume*>(&to_msg);
  auto& from = static_cast<const Volume&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.Volume)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.volume_context_.MergeFrom(from._impl_.volume_context_);
  _this->_internal_mutable_accessible_topology()->MergeFrom(
      from._internal_accessible_topology());
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_content_source()->::csi::v1::VolumeContentSource::MergeFrom(
        from._internal_content_source());
  }
  if (from._internal_capacity_bytes() != 0) {
    _this->_internal_set_capacity_bytes(from._internal_capacity_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Volume::CopyFrom(const Volume& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Volume::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Volume::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Volume::InternalSwap(Volume* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.volume_context_.InternalSwap(&other->_impl_.volume_context_);
  _impl_.accessible_topology_.InternalSwap(&other->_impl_.accessible_topology_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Volume, _impl_.capacity_bytes_)
      + sizeof(Volume::_impl_.capacity_bytes_)
      - PROTOBUF_FIELD_OFFSET(Volume, _impl_.content_source_)>(
          reinterpret_cast<char*>(&_impl_.content_source_),
          reinterpret_cast<char*>(&other->_impl_.content_source_));
}

::google::protobuf::Metadata Volume::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[24]);
}
// ===================================================================

class TopologyRequirement::_Internal {
 public:
};

TopologyRequirement::TopologyRequirement(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.TopologyRequirement)
}
inline PROTOBUF_NDEBUG_INLINE TopologyRequirement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : requisite_{visibility, arena, from.requisite_},
        preferred_{visibility, arena, from.preferred_},
        _cached_size_{0} {}

TopologyRequirement::TopologyRequirement(
    ::google::protobuf::Arena* arena,
    const TopologyRequirement& from)
    : ::google::protobuf::Message(arena) {
  TopologyRequirement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.TopologyRequirement)
}
inline PROTOBUF_NDEBUG_INLINE TopologyRequirement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : requisite_{visibility, arena},
        preferred_{visibility, arena},
        _cached_size_{0} {}

inline void TopologyRequirement::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TopologyRequirement::~TopologyRequirement() {
  // @@protoc_insertion_point(destructor:csi.v1.TopologyRequirement)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopologyRequirement::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TopologyRequirement::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.TopologyRequirement)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requisite_.Clear();
  _impl_.preferred_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TopologyRequirement::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> TopologyRequirement::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TopologyRequirement_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .csi.v1.Topology preferred = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TopologyRequirement, _impl_.preferred_)}},
    // repeated .csi.v1.Topology requisite = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TopologyRequirement, _impl_.requisite_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.Topology requisite = 1;
    {PROTOBUF_FIELD_OFFSET(TopologyRequirement, _impl_.requisite_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .csi.v1.Topology preferred = 2;
    {PROTOBUF_FIELD_OFFSET(TopologyRequirement, _impl_.preferred_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Topology>()},
    {::_pbi::TcParser::GetTable<::csi::v1::Topology>()},
  }}, {{
  }},
};

::uint8_t* TopologyRequirement::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.TopologyRequirement)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.Topology requisite = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_requisite_size()); i < n; i++) {
    const auto& repfield = this->_internal_requisite().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .csi.v1.Topology preferred = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_preferred_size()); i < n; i++) {
    const auto& repfield = this->_internal_preferred().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.TopologyRequirement)
  return target;
}

::size_t TopologyRequirement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.TopologyRequirement)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.Topology requisite = 1;
  total_size += 1UL * this->_internal_requisite_size();
  for (const auto& msg : this->_internal_requisite()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .csi.v1.Topology preferred = 2;
  total_size += 1UL * this->_internal_preferred_size();
  for (const auto& msg : this->_internal_preferred()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TopologyRequirement::_class_data_ = {
    TopologyRequirement::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TopologyRequirement::GetClassData() const {
  return &_class_data_;
}

void TopologyRequirement::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TopologyRequirement*>(&to_msg);
  auto& from = static_cast<const TopologyRequirement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.TopologyRequirement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_requisite()->MergeFrom(
      from._internal_requisite());
  _this->_internal_mutable_preferred()->MergeFrom(
      from._internal_preferred());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopologyRequirement::CopyFrom(const TopologyRequirement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.TopologyRequirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TopologyRequirement::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TopologyRequirement::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TopologyRequirement::InternalSwap(TopologyRequirement* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.requisite_.InternalSwap(&other->_impl_.requisite_);
  _impl_.preferred_.InternalSwap(&other->_impl_.preferred_);
}

::google::protobuf::Metadata TopologyRequirement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[25]);
}
// ===================================================================

Topology_SegmentsEntry_DoNotUse::Topology_SegmentsEntry_DoNotUse() {}
Topology_SegmentsEntry_DoNotUse::Topology_SegmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata Topology_SegmentsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[26]);
}
// ===================================================================

class Topology::_Internal {
 public:
};

Topology::Topology(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.Topology)
}
inline PROTOBUF_NDEBUG_INLINE Topology::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : segments_{visibility, arena, from.segments_},
        _cached_size_{0} {}

Topology::Topology(
    ::google::protobuf::Arena* arena,
    const Topology& from)
    : ::google::protobuf::Message(arena) {
  Topology* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.Topology)
}
inline PROTOBUF_NDEBUG_INLINE Topology::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : segments_{visibility, arena},
        _cached_size_{0} {}

inline void Topology::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Topology::~Topology() {
  // @@protoc_insertion_point(destructor:csi.v1.Topology)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Topology::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Topology::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.Topology)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segments_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Topology::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 32, 2> Topology::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Topology_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> segments = 1;
    {PROTOBUF_FIELD_OFFSET(Topology, _impl_.segments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Topology()._impl_.segments_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\17\10\0\0\0\0\0\0"
    "csi.v1.Topology"
    "segments"
  }},
};

::uint8_t* Topology::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.Topology)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> segments = 1;
  if (!_internal_segments().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_segments();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Topology.segments");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Topology.segments");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Topology.segments");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Topology.segments");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.Topology)
  return target;
}

::size_t Topology::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.Topology)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> segments = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_segments_size());
  for (const auto& entry : _internal_segments()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Topology::_class_data_ = {
    Topology::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Topology::GetClassData() const {
  return &_class_data_;
}

void Topology::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Topology*>(&to_msg);
  auto& from = static_cast<const Topology&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.Topology)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.segments_.MergeFrom(from._impl_.segments_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Topology::CopyFrom(const Topology& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.Topology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Topology::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Topology::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Topology::InternalSwap(Topology* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.segments_.InternalSwap(&other->_impl_.segments_);
}

::google::protobuf::Metadata Topology::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[27]);
}
// ===================================================================

DeleteVolumeRequest_SecretsEntry_DoNotUse::DeleteVolumeRequest_SecretsEntry_DoNotUse() {}
DeleteVolumeRequest_SecretsEntry_DoNotUse::DeleteVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata DeleteVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[28]);
}
// ===================================================================

class DeleteVolumeRequest::_Internal {
 public:
};

DeleteVolumeRequest::DeleteVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.DeleteVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : secrets_{visibility, arena, from.secrets_},
        volume_id_(arena, from.volume_id_),
        _cached_size_{0} {}

DeleteVolumeRequest::DeleteVolumeRequest(
    ::google::protobuf::Arena* arena,
    const DeleteVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  DeleteVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.DeleteVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secrets_{visibility, arena},
        volume_id_(arena),
        _cached_size_{0} {}

inline void DeleteVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteVolumeRequest::~DeleteVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.DeleteVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.DeleteVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 51, 2> DeleteVolumeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeleteVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteVolumeRequest, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteVolumeRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(DeleteVolumeRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DeleteVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\32\11\7\0\0\0\0\0"
    "csi.v1.DeleteVolumeRequest"
    "volume_id"
    "secrets"
  }},
};

::uint8_t* DeleteVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.DeleteVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeRequest.secrets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.DeleteVolumeRequest)
  return target;
}

::size_t DeleteVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.DeleteVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteVolumeRequest::_class_data_ = {
    DeleteVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void DeleteVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteVolumeRequest*>(&to_msg);
  auto& from = static_cast<const DeleteVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.DeleteVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVolumeRequest::CopyFrom(const DeleteVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.DeleteVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteVolumeRequest::InternalSwap(DeleteVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
}

::google::protobuf::Metadata DeleteVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[29]);
}
// ===================================================================

class DeleteVolumeResponse::_Internal {
 public:
};

DeleteVolumeResponse::DeleteVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.DeleteVolumeResponse)
}
DeleteVolumeResponse::DeleteVolumeResponse(
    ::google::protobuf::Arena* arena,
    const DeleteVolumeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  DeleteVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.DeleteVolumeResponse)
}









::google::protobuf::Metadata DeleteVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[30]);
}
// ===================================================================

ControllerPublishVolumeRequest_SecretsEntry_DoNotUse::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse() {}
ControllerPublishVolumeRequest_SecretsEntry_DoNotUse::ControllerPublishVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ControllerPublishVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[31]);
}
// ===================================================================

ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse() {}
ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse::ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ControllerPublishVolumeRequest_VolumeContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[32]);
}
// ===================================================================

class ControllerPublishVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ControllerPublishVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_._has_bits_);
  static const ::csi::v1::VolumeCapability& volume_capability(const ControllerPublishVolumeRequest* msg);
  static void set_has_volume_capability(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeCapability& ControllerPublishVolumeRequest::_Internal::volume_capability(const ControllerPublishVolumeRequest* msg) {
  return *msg->_impl_.volume_capability_;
}
ControllerPublishVolumeRequest::ControllerPublishVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerPublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerPublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        secrets_{visibility, arena, from.secrets_},
        volume_context_{visibility, arena, from.volume_context_},
        volume_id_(arena, from.volume_id_),
        node_id_(arena, from.node_id_) {}

ControllerPublishVolumeRequest::ControllerPublishVolumeRequest(
    ::google::protobuf::Arena* arena,
    const ControllerPublishVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  ControllerPublishVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_capability_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeCapability>(arena, *from._impl_.volume_capability_)
                : nullptr;
  _impl_.readonly_ = from._impl_.readonly_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerPublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerPublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        secrets_{visibility, arena},
        volume_context_{visibility, arena},
        volume_id_(arena),
        node_id_(arena) {}

inline void ControllerPublishVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_capability_),
           0,
           offsetof(Impl_, readonly_) -
               offsetof(Impl_, volume_capability_) +
               sizeof(Impl_::readonly_));
}
ControllerPublishVolumeRequest::~ControllerPublishVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerPublishVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerPublishVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.node_id_.Destroy();
  delete _impl_.volume_capability_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerPublishVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerPublishVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.volume_context_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _impl_.node_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.volume_capability_ != nullptr);
    _impl_.volume_capability_->Clear();
  }
  _impl_.readonly_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerPublishVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 3, 83, 2> ControllerPublishVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerPublishVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool readonly = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ControllerPublishVolumeRequest, _impl_.readonly_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.readonly_)}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.volume_id_)}},
    // string node_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.node_id_)}},
    // .csi.v1.VolumeCapability volume_capability = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.volume_capability_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.volume_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string node_id = 2;
    {PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .csi.v1.VolumeCapability volume_capability = 3;
    {PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.volume_capability_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool readonly = 4;
    {PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.readonly_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.secrets_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> volume_context = 6;
    {PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.volume_context_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControllerPublishVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControllerPublishVolumeRequest()._impl_.volume_context_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\45\11\7\0\0\7\16\0"
    "csi.v1.ControllerPublishVolumeRequest"
    "volume_id"
    "node_id"
    "secrets"
    "volume_context"
  }},
};

::uint8_t* ControllerPublishVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerPublishVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string node_id = 2;
  if (!this->_internal_node_id().empty()) {
    const std::string& _s = this->_internal_node_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.node_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeCapability volume_capability = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::volume_capability(this),
        _Internal::volume_capability(this).GetCachedSize(), target, stream);
  }

  // bool readonly = 4;
  if (this->_internal_readonly() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_readonly(), target);
  }

  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.secrets");
      }
    }
  }

  // map<string, string> volume_context = 6;
  if (!_internal_volume_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_volume_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.volume_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeRequest.volume_context");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerPublishVolumeRequest)
  return target;
}

::size_t ControllerPublishVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerPublishVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> volume_context = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_volume_context_size());
  for (const auto& entry : _internal_volume_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string node_id = 2;
  if (!this->_internal_node_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_node_id());
  }

  // .csi.v1.VolumeCapability volume_capability = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_capability_);
  }

  // bool readonly = 4;
  if (this->_internal_readonly() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerPublishVolumeRequest::_class_data_ = {
    ControllerPublishVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerPublishVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void ControllerPublishVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerPublishVolumeRequest*>(&to_msg);
  auto& from = static_cast<const ControllerPublishVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerPublishVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.volume_context_.MergeFrom(from._impl_.volume_context_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_volume_capability()->::csi::v1::VolumeCapability::MergeFrom(
        from._internal_volume_capability());
  }
  if (from._internal_readonly() != 0) {
    _this->_internal_set_readonly(from._internal_readonly());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerPublishVolumeRequest::CopyFrom(const ControllerPublishVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerPublishVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerPublishVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerPublishVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerPublishVolumeRequest::InternalSwap(ControllerPublishVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.volume_context_.InternalSwap(&other->_impl_.volume_context_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.readonly_)
      + sizeof(ControllerPublishVolumeRequest::_impl_.readonly_)
      - PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeRequest, _impl_.volume_capability_)>(
          reinterpret_cast<char*>(&_impl_.volume_capability_),
          reinterpret_cast<char*>(&other->_impl_.volume_capability_));
}

::google::protobuf::Metadata ControllerPublishVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[33]);
}
// ===================================================================

ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse() {}
ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse::ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ControllerPublishVolumeResponse_PublishContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[34]);
}
// ===================================================================

class ControllerPublishVolumeResponse::_Internal {
 public:
};

ControllerPublishVolumeResponse::ControllerPublishVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerPublishVolumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControllerPublishVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : publish_context_{visibility, arena, from.publish_context_},
        _cached_size_{0} {}

ControllerPublishVolumeResponse::ControllerPublishVolumeResponse(
    ::google::protobuf::Arena* arena,
    const ControllerPublishVolumeResponse& from)
    : ::google::protobuf::Message(arena) {
  ControllerPublishVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerPublishVolumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControllerPublishVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : publish_context_{visibility, arena},
        _cached_size_{0} {}

inline void ControllerPublishVolumeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControllerPublishVolumeResponse::~ControllerPublishVolumeResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerPublishVolumeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerPublishVolumeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerPublishVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerPublishVolumeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publish_context_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerPublishVolumeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 62, 2> ControllerPublishVolumeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerPublishVolumeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> publish_context = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerPublishVolumeResponse, _impl_.publish_context_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControllerPublishVolumeResponse()._impl_.publish_context_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\17\0\0\0\0\0\0"
    "csi.v1.ControllerPublishVolumeResponse"
    "publish_context"
  }},
};

::uint8_t* ControllerPublishVolumeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerPublishVolumeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> publish_context = 1;
  if (!_internal_publish_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_publish_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeResponse.publish_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeResponse.publish_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeResponse.publish_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerPublishVolumeResponse.publish_context");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerPublishVolumeResponse)
  return target;
}

::size_t ControllerPublishVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerPublishVolumeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> publish_context = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_publish_context_size());
  for (const auto& entry : _internal_publish_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerPublishVolumeResponse::_class_data_ = {
    ControllerPublishVolumeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerPublishVolumeResponse::GetClassData() const {
  return &_class_data_;
}

void ControllerPublishVolumeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerPublishVolumeResponse*>(&to_msg);
  auto& from = static_cast<const ControllerPublishVolumeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerPublishVolumeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.publish_context_.MergeFrom(from._impl_.publish_context_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerPublishVolumeResponse::CopyFrom(const ControllerPublishVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerPublishVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerPublishVolumeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerPublishVolumeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerPublishVolumeResponse::InternalSwap(ControllerPublishVolumeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.publish_context_.InternalSwap(&other->_impl_.publish_context_);
}

::google::protobuf::Metadata ControllerPublishVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[35]);
}
// ===================================================================

ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse() {}
ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse::ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ControllerUnpublishVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[36]);
}
// ===================================================================

class ControllerUnpublishVolumeRequest::_Internal {
 public:
};

ControllerUnpublishVolumeRequest::ControllerUnpublishVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerUnpublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerUnpublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : secrets_{visibility, arena, from.secrets_},
        volume_id_(arena, from.volume_id_),
        node_id_(arena, from.node_id_),
        _cached_size_{0} {}

ControllerUnpublishVolumeRequest::ControllerUnpublishVolumeRequest(
    ::google::protobuf::Arena* arena,
    const ControllerUnpublishVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  ControllerUnpublishVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerUnpublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerUnpublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secrets_{visibility, arena},
        volume_id_(arena),
        node_id_(arena),
        _cached_size_{0} {}

inline void ControllerUnpublishVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControllerUnpublishVolumeRequest::~ControllerUnpublishVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerUnpublishVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerUnpublishVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.node_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerUnpublishVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerUnpublishVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _impl_.node_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerUnpublishVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 71, 2> ControllerUnpublishVolumeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerUnpublishVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string node_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerUnpublishVolumeRequest, _impl_.node_id_)}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerUnpublishVolumeRequest, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerUnpublishVolumeRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string node_id = 2;
    {PROTOBUF_FIELD_OFFSET(ControllerUnpublishVolumeRequest, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(ControllerUnpublishVolumeRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControllerUnpublishVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\11\7\7\0\0\0\0"
    "csi.v1.ControllerUnpublishVolumeRequest"
    "volume_id"
    "node_id"
    "secrets"
  }},
};

::uint8_t* ControllerUnpublishVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerUnpublishVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerUnpublishVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string node_id = 2;
  if (!this->_internal_node_id().empty()) {
    const std::string& _s = this->_internal_node_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerUnpublishVolumeRequest.node_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerUnpublishVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerUnpublishVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerUnpublishVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerUnpublishVolumeRequest.secrets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerUnpublishVolumeRequest)
  return target;
}

::size_t ControllerUnpublishVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerUnpublishVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string node_id = 2;
  if (!this->_internal_node_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerUnpublishVolumeRequest::_class_data_ = {
    ControllerUnpublishVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerUnpublishVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void ControllerUnpublishVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerUnpublishVolumeRequest*>(&to_msg);
  auto& from = static_cast<const ControllerUnpublishVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerUnpublishVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerUnpublishVolumeRequest::CopyFrom(const ControllerUnpublishVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerUnpublishVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerUnpublishVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerUnpublishVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerUnpublishVolumeRequest::InternalSwap(ControllerUnpublishVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
}

::google::protobuf::Metadata ControllerUnpublishVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[37]);
}
// ===================================================================

class ControllerUnpublishVolumeResponse::_Internal {
 public:
};

ControllerUnpublishVolumeResponse::ControllerUnpublishVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerUnpublishVolumeResponse)
}
ControllerUnpublishVolumeResponse::ControllerUnpublishVolumeResponse(
    ::google::protobuf::Arena* arena,
    const ControllerUnpublishVolumeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ControllerUnpublishVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerUnpublishVolumeResponse)
}









::google::protobuf::Metadata ControllerUnpublishVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[38]);
}
// ===================================================================

ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse() {}
ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ValidateVolumeCapabilitiesRequest_VolumeContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[39]);
}
// ===================================================================

ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse() {}
ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ValidateVolumeCapabilitiesRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[40]);
}
// ===================================================================

ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse() {}
ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ValidateVolumeCapabilitiesRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[41]);
}
// ===================================================================

ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse() {}
ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse::ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ValidateVolumeCapabilitiesRequest_MutableParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[42]);
}
// ===================================================================

class ValidateVolumeCapabilitiesRequest::_Internal {
 public:
};

ValidateVolumeCapabilitiesRequest::ValidateVolumeCapabilitiesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ValidateVolumeCapabilitiesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ValidateVolumeCapabilitiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : volume_context_{visibility, arena, from.volume_context_},
        volume_capabilities_{visibility, arena, from.volume_capabilities_},
        parameters_{visibility, arena, from.parameters_},
        secrets_{visibility, arena, from.secrets_},
        mutable_parameters_{visibility, arena, from.mutable_parameters_},
        volume_id_(arena, from.volume_id_),
        _cached_size_{0} {}

ValidateVolumeCapabilitiesRequest::ValidateVolumeCapabilitiesRequest(
    ::google::protobuf::Arena* arena,
    const ValidateVolumeCapabilitiesRequest& from)
    : ::google::protobuf::Message(arena) {
  ValidateVolumeCapabilitiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ValidateVolumeCapabilitiesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ValidateVolumeCapabilitiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : volume_context_{visibility, arena},
        volume_capabilities_{visibility, arena},
        parameters_{visibility, arena},
        secrets_{visibility, arena},
        mutable_parameters_{visibility, arena},
        volume_id_(arena),
        _cached_size_{0} {}

inline void ValidateVolumeCapabilitiesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidateVolumeCapabilitiesRequest::~ValidateVolumeCapabilitiesRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ValidateVolumeCapabilitiesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ValidateVolumeCapabilitiesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ValidateVolumeCapabilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ValidateVolumeCapabilitiesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_context_.Clear();
  _impl_.volume_capabilities_.Clear();
  _impl_.parameters_.Clear();
  _impl_.secrets_.Clear();
  _impl_.mutable_parameters_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ValidateVolumeCapabilitiesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 5, 107, 2> ValidateVolumeCapabilitiesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ValidateVolumeCapabilitiesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.volume_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.volume_capabilities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> volume_context = 2;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.volume_context_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.volume_capabilities_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> parameters = 4;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.parameters_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.secrets_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> mutable_parameters = 6 [(.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesRequest, _impl_.mutable_parameters_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateVolumeCapabilitiesRequest()._impl_.volume_context_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateVolumeCapabilitiesRequest()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateVolumeCapabilitiesRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateVolumeCapabilitiesRequest()._impl_.mutable_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\50\11\16\0\12\7\22\0"
    "csi.v1.ValidateVolumeCapabilitiesRequest"
    "volume_id"
    "volume_context"
    "parameters"
    "secrets"
    "mutable_parameters"
  }},
};

::uint8_t* ValidateVolumeCapabilitiesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ValidateVolumeCapabilitiesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> volume_context = 2;
  if (!_internal_volume_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_volume_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.volume_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.volume_context");
      }
    }
  }

  // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_volume_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_volume_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, string> parameters = 4;
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.parameters");
      }
    }
  }

  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.secrets");
      }
    }
  }

  // map<string, string> mutable_parameters = 6 [(.csi.v1.alpha_field) = true];
  if (!_internal_mutable_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_mutable_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.mutable_parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesRequest.mutable_parameters");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ValidateVolumeCapabilitiesRequest)
  return target;
}

::size_t ValidateVolumeCapabilitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ValidateVolumeCapabilitiesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> volume_context = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_volume_context_size());
  for (const auto& entry : _internal_volume_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated .csi.v1.VolumeCapability volume_capabilities = 3;
  total_size += 1UL * this->_internal_volume_capabilities_size();
  for (const auto& msg : this->_internal_volume_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, string> parameters = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> mutable_parameters = 6 [(.csi.v1.alpha_field) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_mutable_parameters_size());
  for (const auto& entry : _internal_mutable_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ValidateVolumeCapabilitiesRequest::_class_data_ = {
    ValidateVolumeCapabilitiesRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ValidateVolumeCapabilitiesRequest::GetClassData() const {
  return &_class_data_;
}

void ValidateVolumeCapabilitiesRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ValidateVolumeCapabilitiesRequest*>(&to_msg);
  auto& from = static_cast<const ValidateVolumeCapabilitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ValidateVolumeCapabilitiesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.volume_context_.MergeFrom(from._impl_.volume_context_);
  _this->_internal_mutable_volume_capabilities()->MergeFrom(
      from._internal_volume_capabilities());
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.mutable_parameters_.MergeFrom(from._impl_.mutable_parameters_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateVolumeCapabilitiesRequest::CopyFrom(const ValidateVolumeCapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ValidateVolumeCapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ValidateVolumeCapabilitiesRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ValidateVolumeCapabilitiesRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ValidateVolumeCapabilitiesRequest::InternalSwap(ValidateVolumeCapabilitiesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.volume_context_.InternalSwap(&other->_impl_.volume_context_);
  _impl_.volume_capabilities_.InternalSwap(&other->_impl_.volume_capabilities_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.mutable_parameters_.InternalSwap(&other->_impl_.mutable_parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
}

::google::protobuf::Metadata ValidateVolumeCapabilitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[43]);
}
// ===================================================================

ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse() {}
ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ValidateVolumeCapabilitiesResponse_Confirmed_VolumeContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[44]);
}
// ===================================================================

ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse() {}
ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ValidateVolumeCapabilitiesResponse_Confirmed_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[45]);
}
// ===================================================================

ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse() {}
ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse::ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ValidateVolumeCapabilitiesResponse_Confirmed_MutableParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[46]);
}
// ===================================================================

class ValidateVolumeCapabilitiesResponse_Confirmed::_Internal {
 public:
};

ValidateVolumeCapabilitiesResponse_Confirmed::ValidateVolumeCapabilitiesResponse_Confirmed(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
}
inline PROTOBUF_NDEBUG_INLINE ValidateVolumeCapabilitiesResponse_Confirmed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : volume_context_{visibility, arena, from.volume_context_},
        volume_capabilities_{visibility, arena, from.volume_capabilities_},
        parameters_{visibility, arena, from.parameters_},
        mutable_parameters_{visibility, arena, from.mutable_parameters_},
        _cached_size_{0} {}

ValidateVolumeCapabilitiesResponse_Confirmed::ValidateVolumeCapabilitiesResponse_Confirmed(
    ::google::protobuf::Arena* arena,
    const ValidateVolumeCapabilitiesResponse_Confirmed& from)
    : ::google::protobuf::Message(arena) {
  ValidateVolumeCapabilitiesResponse_Confirmed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
}
inline PROTOBUF_NDEBUG_INLINE ValidateVolumeCapabilitiesResponse_Confirmed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : volume_context_{visibility, arena},
        volume_capabilities_{visibility, arena},
        parameters_{visibility, arena},
        mutable_parameters_{visibility, arena},
        _cached_size_{0} {}

inline void ValidateVolumeCapabilitiesResponse_Confirmed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidateVolumeCapabilitiesResponse_Confirmed::~ValidateVolumeCapabilitiesResponse_Confirmed() {
  // @@protoc_insertion_point(destructor:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ValidateVolumeCapabilitiesResponse_Confirmed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ValidateVolumeCapabilitiesResponse_Confirmed::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_context_.Clear();
  _impl_.volume_capabilities_.Clear();
  _impl_.parameters_.Clear();
  _impl_.mutable_parameters_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ValidateVolumeCapabilitiesResponse_Confirmed::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 102, 2> ValidateVolumeCapabilitiesResponse_Confirmed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ValidateVolumeCapabilitiesResponse_Confirmed_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .csi.v1.VolumeCapability volume_capabilities = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.volume_capabilities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> volume_context = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.volume_context_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .csi.v1.VolumeCapability volume_capabilities = 2;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.volume_capabilities_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> parameters = 3;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.parameters_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> mutable_parameters = 4 [(.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse_Confirmed, _impl_.mutable_parameters_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateVolumeCapabilitiesResponse_Confirmed()._impl_.volume_context_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateVolumeCapabilitiesResponse_Confirmed()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateVolumeCapabilitiesResponse_Confirmed()._impl_.mutable_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\63\16\0\12\22\0\0\0"
    "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed"
    "volume_context"
    "parameters"
    "mutable_parameters"
  }},
};

::uint8_t* ValidateVolumeCapabilitiesResponse_Confirmed::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> volume_context = 1;
  if (!_internal_volume_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_volume_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.volume_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.volume_context");
      }
    }
  }

  // repeated .csi.v1.VolumeCapability volume_capabilities = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_volume_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_volume_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, string> parameters = 3;
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.parameters");
      }
    }
  }

  // map<string, string> mutable_parameters = 4 [(.csi.v1.alpha_field) = true];
  if (!_internal_mutable_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_mutable_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.mutable_parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed.mutable_parameters");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
  return target;
}

::size_t ValidateVolumeCapabilitiesResponse_Confirmed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> volume_context = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_volume_context_size());
  for (const auto& entry : _internal_volume_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated .csi.v1.VolumeCapability volume_capabilities = 2;
  total_size += 1UL * this->_internal_volume_capabilities_size();
  for (const auto& msg : this->_internal_volume_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, string> parameters = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> mutable_parameters = 4 [(.csi.v1.alpha_field) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_mutable_parameters_size());
  for (const auto& entry : _internal_mutable_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ValidateVolumeCapabilitiesResponse_Confirmed::_class_data_ = {
    ValidateVolumeCapabilitiesResponse_Confirmed::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ValidateVolumeCapabilitiesResponse_Confirmed::GetClassData() const {
  return &_class_data_;
}

void ValidateVolumeCapabilitiesResponse_Confirmed::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ValidateVolumeCapabilitiesResponse_Confirmed*>(&to_msg);
  auto& from = static_cast<const ValidateVolumeCapabilitiesResponse_Confirmed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.volume_context_.MergeFrom(from._impl_.volume_context_);
  _this->_internal_mutable_volume_capabilities()->MergeFrom(
      from._internal_volume_capabilities());
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_impl_.mutable_parameters_.MergeFrom(from._impl_.mutable_parameters_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateVolumeCapabilitiesResponse_Confirmed::CopyFrom(const ValidateVolumeCapabilitiesResponse_Confirmed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ValidateVolumeCapabilitiesResponse_Confirmed::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ValidateVolumeCapabilitiesResponse_Confirmed::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ValidateVolumeCapabilitiesResponse_Confirmed::InternalSwap(ValidateVolumeCapabilitiesResponse_Confirmed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.volume_context_.InternalSwap(&other->_impl_.volume_context_);
  _impl_.volume_capabilities_.InternalSwap(&other->_impl_.volume_capabilities_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.mutable_parameters_.InternalSwap(&other->_impl_.mutable_parameters_);
}

::google::protobuf::Metadata ValidateVolumeCapabilitiesResponse_Confirmed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[47]);
}
// ===================================================================

class ValidateVolumeCapabilitiesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ValidateVolumeCapabilitiesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse, _impl_._has_bits_);
  static const ::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed& confirmed(const ValidateVolumeCapabilitiesResponse* msg);
  static void set_has_confirmed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed& ValidateVolumeCapabilitiesResponse::_Internal::confirmed(const ValidateVolumeCapabilitiesResponse* msg) {
  return *msg->_impl_.confirmed_;
}
ValidateVolumeCapabilitiesResponse::ValidateVolumeCapabilitiesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ValidateVolumeCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ValidateVolumeCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

ValidateVolumeCapabilitiesResponse::ValidateVolumeCapabilitiesResponse(
    ::google::protobuf::Arena* arena,
    const ValidateVolumeCapabilitiesResponse& from)
    : ::google::protobuf::Message(arena) {
  ValidateVolumeCapabilitiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confirmed_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed>(arena, *from._impl_.confirmed_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ValidateVolumeCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ValidateVolumeCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena) {}

inline void ValidateVolumeCapabilitiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.confirmed_ = {};
}
ValidateVolumeCapabilitiesResponse::~ValidateVolumeCapabilitiesResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ValidateVolumeCapabilitiesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ValidateVolumeCapabilitiesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  delete _impl_.confirmed_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ValidateVolumeCapabilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ValidateVolumeCapabilitiesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confirmed_ != nullptr);
    _impl_.confirmed_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ValidateVolumeCapabilitiesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> ValidateVolumeCapabilitiesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ValidateVolumeCapabilitiesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse, _impl_.message_)}},
    // .csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed confirmed = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse, _impl_.confirmed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed confirmed = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse, _impl_.confirmed_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(ValidateVolumeCapabilitiesResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed>()},
  }}, {{
    "\51\0\7\0\0\0\0\0"
    "csi.v1.ValidateVolumeCapabilitiesResponse"
    "message"
  }},
};

::uint8_t* ValidateVolumeCapabilitiesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ValidateVolumeCapabilitiesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed confirmed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::confirmed(this),
        _Internal::confirmed(this).GetCachedSize(), target, stream);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ValidateVolumeCapabilitiesResponse.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ValidateVolumeCapabilitiesResponse)
  return target;
}

::size_t ValidateVolumeCapabilitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ValidateVolumeCapabilitiesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // .csi.v1.ValidateVolumeCapabilitiesResponse.Confirmed confirmed = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confirmed_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ValidateVolumeCapabilitiesResponse::_class_data_ = {
    ValidateVolumeCapabilitiesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ValidateVolumeCapabilitiesResponse::GetClassData() const {
  return &_class_data_;
}

void ValidateVolumeCapabilitiesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ValidateVolumeCapabilitiesResponse*>(&to_msg);
  auto& from = static_cast<const ValidateVolumeCapabilitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ValidateVolumeCapabilitiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confirmed()->::csi::v1::ValidateVolumeCapabilitiesResponse_Confirmed::MergeFrom(
        from._internal_confirmed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateVolumeCapabilitiesResponse::CopyFrom(const ValidateVolumeCapabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ValidateVolumeCapabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ValidateVolumeCapabilitiesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ValidateVolumeCapabilitiesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ValidateVolumeCapabilitiesResponse::InternalSwap(ValidateVolumeCapabilitiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.confirmed_, other->_impl_.confirmed_);
}

::google::protobuf::Metadata ValidateVolumeCapabilitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[48]);
}
// ===================================================================

class ListVolumesRequest::_Internal {
 public:
};

ListVolumesRequest::ListVolumesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ListVolumesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : starting_token_(arena, from.starting_token_),
        _cached_size_{0} {}

ListVolumesRequest::ListVolumesRequest(
    ::google::protobuf::Arena* arena,
    const ListVolumesRequest& from)
    : ::google::protobuf::Message(arena) {
  ListVolumesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.max_entries_ = from._impl_.max_entries_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ListVolumesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : starting_token_(arena),
        _cached_size_{0} {}

inline void ListVolumesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_entries_ = {};
}
ListVolumesRequest::~ListVolumesRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ListVolumesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListVolumesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.starting_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListVolumesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ListVolumesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starting_token_.ClearToEmpty();
  _impl_.max_entries_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListVolumesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> ListVolumesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListVolumesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string starting_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListVolumesRequest, _impl_.starting_token_)}},
    // int32 max_entries = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListVolumesRequest, _impl_.max_entries_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ListVolumesRequest, _impl_.max_entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 max_entries = 1;
    {PROTOBUF_FIELD_OFFSET(ListVolumesRequest, _impl_.max_entries_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string starting_token = 2;
    {PROTOBUF_FIELD_OFFSET(ListVolumesRequest, _impl_.starting_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\16\0\0\0\0\0"
    "csi.v1.ListVolumesRequest"
    "starting_token"
  }},
};

::uint8_t* ListVolumesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ListVolumesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 max_entries = 1;
  if (this->_internal_max_entries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_max_entries(), target);
  }

  // string starting_token = 2;
  if (!this->_internal_starting_token().empty()) {
    const std::string& _s = this->_internal_starting_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListVolumesRequest.starting_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ListVolumesRequest)
  return target;
}

::size_t ListVolumesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ListVolumesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starting_token = 2;
  if (!this->_internal_starting_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_starting_token());
  }

  // int32 max_entries = 1;
  if (this->_internal_max_entries() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_entries());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListVolumesRequest::_class_data_ = {
    ListVolumesRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListVolumesRequest::GetClassData() const {
  return &_class_data_;
}

void ListVolumesRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListVolumesRequest*>(&to_msg);
  auto& from = static_cast<const ListVolumesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ListVolumesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starting_token().empty()) {
    _this->_internal_set_starting_token(from._internal_starting_token());
  }
  if (from._internal_max_entries() != 0) {
    _this->_internal_set_max_entries(from._internal_max_entries());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListVolumesRequest::CopyFrom(const ListVolumesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ListVolumesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListVolumesRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListVolumesRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListVolumesRequest::InternalSwap(ListVolumesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.starting_token_, &other->_impl_.starting_token_, arena);
        swap(_impl_.max_entries_, other->_impl_.max_entries_);
}

::google::protobuf::Metadata ListVolumesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[49]);
}
// ===================================================================

class ListVolumesResponse_VolumeStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ListVolumesResponse_VolumeStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ListVolumesResponse_VolumeStatus, _impl_._has_bits_);
  static const ::csi::v1::VolumeCondition& volume_condition(const ListVolumesResponse_VolumeStatus* msg);
  static void set_has_volume_condition(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeCondition& ListVolumesResponse_VolumeStatus::_Internal::volume_condition(const ListVolumesResponse_VolumeStatus* msg) {
  return *msg->_impl_.volume_condition_;
}
ListVolumesResponse_VolumeStatus::ListVolumesResponse_VolumeStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ListVolumesResponse.VolumeStatus)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesResponse_VolumeStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        published_node_ids_{visibility, arena, from.published_node_ids_} {}

ListVolumesResponse_VolumeStatus::ListVolumesResponse_VolumeStatus(
    ::google::protobuf::Arena* arena,
    const ListVolumesResponse_VolumeStatus& from)
    : ::google::protobuf::Message(arena) {
  ListVolumesResponse_VolumeStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_condition_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeCondition>(arena, *from._impl_.volume_condition_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ListVolumesResponse.VolumeStatus)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesResponse_VolumeStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        published_node_ids_{visibility, arena} {}

inline void ListVolumesResponse_VolumeStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volume_condition_ = {};
}
ListVolumesResponse_VolumeStatus::~ListVolumesResponse_VolumeStatus() {
  // @@protoc_insertion_point(destructor:csi.v1.ListVolumesResponse.VolumeStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListVolumesResponse_VolumeStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.volume_condition_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListVolumesResponse_VolumeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ListVolumesResponse.VolumeStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.published_node_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.volume_condition_ != nullptr);
    _impl_.volume_condition_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListVolumesResponse_VolumeStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 66, 2> ListVolumesResponse_VolumeStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListVolumesResponse_VolumeStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListVolumesResponse_VolumeStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListVolumesResponse_VolumeStatus, _impl_.volume_condition_)}},
    // repeated string published_node_ids = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListVolumesResponse_VolumeStatus, _impl_.published_node_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string published_node_ids = 1;
    {PROTOBUF_FIELD_OFFSET(ListVolumesResponse_VolumeStatus, _impl_.published_node_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(ListVolumesResponse_VolumeStatus, _impl_.volume_condition_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCondition>()},
  }}, {{
    "\47\22\0\0\0\0\0\0"
    "csi.v1.ListVolumesResponse.VolumeStatus"
    "published_node_ids"
  }},
};

::uint8_t* ListVolumesResponse_VolumeStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ListVolumesResponse.VolumeStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string published_node_ids = 1;
  for (int i = 0, n = this->_internal_published_node_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_published_node_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListVolumesResponse.VolumeStatus.published_node_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::volume_condition(this),
        _Internal::volume_condition(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ListVolumesResponse.VolumeStatus)
  return target;
}

::size_t ListVolumesResponse_VolumeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ListVolumesResponse.VolumeStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string published_node_ids = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_published_node_ids().size());
  for (int i = 0, n = _internal_published_node_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_published_node_ids().Get(i));
  }
  // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_condition_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListVolumesResponse_VolumeStatus::_class_data_ = {
    ListVolumesResponse_VolumeStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListVolumesResponse_VolumeStatus::GetClassData() const {
  return &_class_data_;
}

void ListVolumesResponse_VolumeStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListVolumesResponse_VolumeStatus*>(&to_msg);
  auto& from = static_cast<const ListVolumesResponse_VolumeStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ListVolumesResponse.VolumeStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_published_node_ids()->MergeFrom(from._internal_published_node_ids());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_volume_condition()->::csi::v1::VolumeCondition::MergeFrom(
        from._internal_volume_condition());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListVolumesResponse_VolumeStatus::CopyFrom(const ListVolumesResponse_VolumeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ListVolumesResponse.VolumeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListVolumesResponse_VolumeStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListVolumesResponse_VolumeStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListVolumesResponse_VolumeStatus::InternalSwap(ListVolumesResponse_VolumeStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.published_node_ids_.InternalSwap(&other->_impl_.published_node_ids_);
  swap(_impl_.volume_condition_, other->_impl_.volume_condition_);
}

::google::protobuf::Metadata ListVolumesResponse_VolumeStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[50]);
}
// ===================================================================

class ListVolumesResponse_Entry::_Internal {
 public:
  using HasBits = decltype(std::declval<ListVolumesResponse_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_._has_bits_);
  static const ::csi::v1::Volume& volume(const ListVolumesResponse_Entry* msg);
  static void set_has_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::csi::v1::ListVolumesResponse_VolumeStatus& status(const ListVolumesResponse_Entry* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::csi::v1::Volume& ListVolumesResponse_Entry::_Internal::volume(const ListVolumesResponse_Entry* msg) {
  return *msg->_impl_.volume_;
}
const ::csi::v1::ListVolumesResponse_VolumeStatus& ListVolumesResponse_Entry::_Internal::status(const ListVolumesResponse_Entry* msg) {
  return *msg->_impl_.status_;
}
ListVolumesResponse_Entry::ListVolumesResponse_Entry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ListVolumesResponse.Entry)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesResponse_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ListVolumesResponse_Entry::ListVolumesResponse_Entry(
    ::google::protobuf::Arena* arena,
    const ListVolumesResponse_Entry& from)
    : ::google::protobuf::Message(arena) {
  ListVolumesResponse_Entry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::Volume>(arena, *from._impl_.volume_)
                : nullptr;
  _impl_.status_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::csi::v1::ListVolumesResponse_VolumeStatus>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ListVolumesResponse.Entry)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesResponse_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ListVolumesResponse_Entry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, volume_) +
               sizeof(Impl_::status_));
}
ListVolumesResponse_Entry::~ListVolumesResponse_Entry() {
  // @@protoc_insertion_point(destructor:csi.v1.ListVolumesResponse.Entry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListVolumesResponse_Entry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.volume_;
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListVolumesResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ListVolumesResponse.Entry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.volume_ != nullptr);
      _impl_.volume_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListVolumesResponse_Entry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ListVolumesResponse_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListVolumesResponse_Entry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.ListVolumesResponse.VolumeStatus status = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_.status_)}},
    // .csi.v1.Volume volume = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_.volume_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.Volume volume = 1;
    {PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_.volume_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .csi.v1.ListVolumesResponse.VolumeStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Volume>()},
    {::_pbi::TcParser::GetTable<::csi::v1::ListVolumesResponse_VolumeStatus>()},
  }}, {{
  }},
};

::uint8_t* ListVolumesResponse_Entry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ListVolumesResponse.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.Volume volume = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::volume(this),
        _Internal::volume(this).GetCachedSize(), target, stream);
  }

  // .csi.v1.ListVolumesResponse.VolumeStatus status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ListVolumesResponse.Entry)
  return target;
}

::size_t ListVolumesResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ListVolumesResponse.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .csi.v1.Volume volume = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_);
    }

    // .csi.v1.ListVolumesResponse.VolumeStatus status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListVolumesResponse_Entry::_class_data_ = {
    ListVolumesResponse_Entry::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListVolumesResponse_Entry::GetClassData() const {
  return &_class_data_;
}

void ListVolumesResponse_Entry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListVolumesResponse_Entry*>(&to_msg);
  auto& from = static_cast<const ListVolumesResponse_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ListVolumesResponse.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_volume()->::csi::v1::Volume::MergeFrom(
          from._internal_volume());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_status()->::csi::v1::ListVolumesResponse_VolumeStatus::MergeFrom(
          from._internal_status());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListVolumesResponse_Entry::CopyFrom(const ListVolumesResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ListVolumesResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListVolumesResponse_Entry::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListVolumesResponse_Entry::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListVolumesResponse_Entry::InternalSwap(ListVolumesResponse_Entry* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_.status_)
      + sizeof(ListVolumesResponse_Entry::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(ListVolumesResponse_Entry, _impl_.volume_)>(
          reinterpret_cast<char*>(&_impl_.volume_),
          reinterpret_cast<char*>(&other->_impl_.volume_));
}

::google::protobuf::Metadata ListVolumesResponse_Entry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[51]);
}
// ===================================================================

class ListVolumesResponse::_Internal {
 public:
};

ListVolumesResponse::ListVolumesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ListVolumesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entries_{visibility, arena, from.entries_},
        next_token_(arena, from.next_token_),
        _cached_size_{0} {}

ListVolumesResponse::ListVolumesResponse(
    ::google::protobuf::Arena* arena,
    const ListVolumesResponse& from)
    : ::google::protobuf::Message(arena) {
  ListVolumesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ListVolumesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListVolumesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        next_token_(arena),
        _cached_size_{0} {}

inline void ListVolumesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListVolumesResponse::~ListVolumesResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ListVolumesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListVolumesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListVolumesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ListVolumesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.next_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListVolumesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 45, 2> ListVolumesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListVolumesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string next_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListVolumesResponse, _impl_.next_token_)}},
    // repeated .csi.v1.ListVolumesResponse.Entry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListVolumesResponse, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.ListVolumesResponse.Entry entries = 1;
    {PROTOBUF_FIELD_OFFSET(ListVolumesResponse, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_token = 2;
    {PROTOBUF_FIELD_OFFSET(ListVolumesResponse, _impl_.next_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::ListVolumesResponse_Entry>()},
  }}, {{
    "\32\0\12\0\0\0\0\0"
    "csi.v1.ListVolumesResponse"
    "next_token"
  }},
};

::uint8_t* ListVolumesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ListVolumesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.ListVolumesResponse.Entry entries = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_token = 2;
  if (!this->_internal_next_token().empty()) {
    const std::string& _s = this->_internal_next_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListVolumesResponse.next_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ListVolumesResponse)
  return target;
}

::size_t ListVolumesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ListVolumesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.ListVolumesResponse.Entry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string next_token = 2;
  if (!this->_internal_next_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListVolumesResponse::_class_data_ = {
    ListVolumesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListVolumesResponse::GetClassData() const {
  return &_class_data_;
}

void ListVolumesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListVolumesResponse*>(&to_msg);
  auto& from = static_cast<const ListVolumesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ListVolumesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (!from._internal_next_token().empty()) {
    _this->_internal_set_next_token(from._internal_next_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListVolumesResponse::CopyFrom(const ListVolumesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ListVolumesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListVolumesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListVolumesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListVolumesResponse::InternalSwap(ListVolumesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_token_, &other->_impl_.next_token_, arena);
}

::google::protobuf::Metadata ListVolumesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[52]);
}
// ===================================================================

class ControllerGetVolumeRequest::_Internal {
 public:
};

ControllerGetVolumeRequest::ControllerGetVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerGetVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : volume_id_(arena, from.volume_id_),
        _cached_size_{0} {}

ControllerGetVolumeRequest::ControllerGetVolumeRequest(
    ::google::protobuf::Arena* arena,
    const ControllerGetVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  ControllerGetVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerGetVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : volume_id_(arena),
        _cached_size_{0} {}

inline void ControllerGetVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControllerGetVolumeRequest::~ControllerGetVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerGetVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerGetVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerGetVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerGetVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerGetVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> ControllerGetVolumeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ControllerGetVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerGetVolumeRequest, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerGetVolumeRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\11\0\0\0\0\0\0"
    "csi.v1.ControllerGetVolumeRequest"
    "volume_id"
  }},
};

::uint8_t* ControllerGetVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerGetVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerGetVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerGetVolumeRequest)
  return target;
}

::size_t ControllerGetVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerGetVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerGetVolumeRequest::_class_data_ = {
    ControllerGetVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerGetVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void ControllerGetVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerGetVolumeRequest*>(&to_msg);
  auto& from = static_cast<const ControllerGetVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerGetVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerGetVolumeRequest::CopyFrom(const ControllerGetVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerGetVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerGetVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerGetVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerGetVolumeRequest::InternalSwap(ControllerGetVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
}

::google::protobuf::Metadata ControllerGetVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[53]);
}
// ===================================================================

class ControllerGetVolumeResponse_VolumeStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ControllerGetVolumeResponse_VolumeStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse_VolumeStatus, _impl_._has_bits_);
  static const ::csi::v1::VolumeCondition& volume_condition(const ControllerGetVolumeResponse_VolumeStatus* msg);
  static void set_has_volume_condition(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeCondition& ControllerGetVolumeResponse_VolumeStatus::_Internal::volume_condition(const ControllerGetVolumeResponse_VolumeStatus* msg) {
  return *msg->_impl_.volume_condition_;
}
ControllerGetVolumeResponse_VolumeStatus::ControllerGetVolumeResponse_VolumeStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetVolumeResponse_VolumeStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        published_node_ids_{visibility, arena, from.published_node_ids_} {}

ControllerGetVolumeResponse_VolumeStatus::ControllerGetVolumeResponse_VolumeStatus(
    ::google::protobuf::Arena* arena,
    const ControllerGetVolumeResponse_VolumeStatus& from)
    : ::google::protobuf::Message(arena) {
  ControllerGetVolumeResponse_VolumeStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_condition_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeCondition>(arena, *from._impl_.volume_condition_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetVolumeResponse_VolumeStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        published_node_ids_{visibility, arena} {}

inline void ControllerGetVolumeResponse_VolumeStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volume_condition_ = {};
}
ControllerGetVolumeResponse_VolumeStatus::~ControllerGetVolumeResponse_VolumeStatus() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerGetVolumeResponse_VolumeStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.volume_condition_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerGetVolumeResponse_VolumeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.published_node_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.volume_condition_ != nullptr);
    _impl_.volume_condition_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerGetVolumeResponse_VolumeStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 74, 2> ControllerGetVolumeResponse_VolumeStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse_VolumeStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerGetVolumeResponse_VolumeStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeCondition volume_condition = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse_VolumeStatus, _impl_.volume_condition_)}},
    // repeated string published_node_ids = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse_VolumeStatus, _impl_.published_node_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string published_node_ids = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse_VolumeStatus, _impl_.published_node_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .csi.v1.VolumeCondition volume_condition = 2;
    {PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse_VolumeStatus, _impl_.volume_condition_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCondition>()},
  }}, {{
    "\57\22\0\0\0\0\0\0"
    "csi.v1.ControllerGetVolumeResponse.VolumeStatus"
    "published_node_ids"
  }},
};

::uint8_t* ControllerGetVolumeResponse_VolumeStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string published_node_ids = 1;
  for (int i = 0, n = this->_internal_published_node_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_published_node_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerGetVolumeResponse.VolumeStatus.published_node_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeCondition volume_condition = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::volume_condition(this),
        _Internal::volume_condition(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
  return target;
}

::size_t ControllerGetVolumeResponse_VolumeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string published_node_ids = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_published_node_ids().size());
  for (int i = 0, n = _internal_published_node_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_published_node_ids().Get(i));
  }
  // .csi.v1.VolumeCondition volume_condition = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_condition_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerGetVolumeResponse_VolumeStatus::_class_data_ = {
    ControllerGetVolumeResponse_VolumeStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerGetVolumeResponse_VolumeStatus::GetClassData() const {
  return &_class_data_;
}

void ControllerGetVolumeResponse_VolumeStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerGetVolumeResponse_VolumeStatus*>(&to_msg);
  auto& from = static_cast<const ControllerGetVolumeResponse_VolumeStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_published_node_ids()->MergeFrom(from._internal_published_node_ids());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_volume_condition()->::csi::v1::VolumeCondition::MergeFrom(
        from._internal_volume_condition());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerGetVolumeResponse_VolumeStatus::CopyFrom(const ControllerGetVolumeResponse_VolumeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerGetVolumeResponse.VolumeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerGetVolumeResponse_VolumeStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerGetVolumeResponse_VolumeStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerGetVolumeResponse_VolumeStatus::InternalSwap(ControllerGetVolumeResponse_VolumeStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.published_node_ids_.InternalSwap(&other->_impl_.published_node_ids_);
  swap(_impl_.volume_condition_, other->_impl_.volume_condition_);
}

::google::protobuf::Metadata ControllerGetVolumeResponse_VolumeStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[54]);
}
// ===================================================================

class ControllerGetVolumeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ControllerGetVolumeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_._has_bits_);
  static const ::csi::v1::Volume& volume(const ControllerGetVolumeResponse* msg);
  static void set_has_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::csi::v1::ControllerGetVolumeResponse_VolumeStatus& status(const ControllerGetVolumeResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::csi::v1::Volume& ControllerGetVolumeResponse::_Internal::volume(const ControllerGetVolumeResponse* msg) {
  return *msg->_impl_.volume_;
}
const ::csi::v1::ControllerGetVolumeResponse_VolumeStatus& ControllerGetVolumeResponse::_Internal::status(const ControllerGetVolumeResponse* msg) {
  return *msg->_impl_.status_;
}
ControllerGetVolumeResponse::ControllerGetVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerGetVolumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ControllerGetVolumeResponse::ControllerGetVolumeResponse(
    ::google::protobuf::Arena* arena,
    const ControllerGetVolumeResponse& from)
    : ::google::protobuf::Message(arena) {
  ControllerGetVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::Volume>(arena, *from._impl_.volume_)
                : nullptr;
  _impl_.status_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::csi::v1::ControllerGetVolumeResponse_VolumeStatus>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerGetVolumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ControllerGetVolumeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, volume_) +
               sizeof(Impl_::status_));
}
ControllerGetVolumeResponse::~ControllerGetVolumeResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerGetVolumeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerGetVolumeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.volume_;
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerGetVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerGetVolumeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.volume_ != nullptr);
      _impl_.volume_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerGetVolumeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ControllerGetVolumeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerGetVolumeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.ControllerGetVolumeResponse.VolumeStatus status = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_.status_)}},
    // .csi.v1.Volume volume = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_.volume_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.Volume volume = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_.volume_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .csi.v1.ControllerGetVolumeResponse.VolumeStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Volume>()},
    {::_pbi::TcParser::GetTable<::csi::v1::ControllerGetVolumeResponse_VolumeStatus>()},
  }}, {{
  }},
};

::uint8_t* ControllerGetVolumeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerGetVolumeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.Volume volume = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::volume(this),
        _Internal::volume(this).GetCachedSize(), target, stream);
  }

  // .csi.v1.ControllerGetVolumeResponse.VolumeStatus status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerGetVolumeResponse)
  return target;
}

::size_t ControllerGetVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerGetVolumeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .csi.v1.Volume volume = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_);
    }

    // .csi.v1.ControllerGetVolumeResponse.VolumeStatus status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerGetVolumeResponse::_class_data_ = {
    ControllerGetVolumeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerGetVolumeResponse::GetClassData() const {
  return &_class_data_;
}

void ControllerGetVolumeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerGetVolumeResponse*>(&to_msg);
  auto& from = static_cast<const ControllerGetVolumeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerGetVolumeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_volume()->::csi::v1::Volume::MergeFrom(
          from._internal_volume());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_status()->::csi::v1::ControllerGetVolumeResponse_VolumeStatus::MergeFrom(
          from._internal_status());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerGetVolumeResponse::CopyFrom(const ControllerGetVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerGetVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerGetVolumeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerGetVolumeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerGetVolumeResponse::InternalSwap(ControllerGetVolumeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_.status_)
      + sizeof(ControllerGetVolumeResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(ControllerGetVolumeResponse, _impl_.volume_)>(
          reinterpret_cast<char*>(&_impl_.volume_),
          reinterpret_cast<char*>(&other->_impl_.volume_));
}

::google::protobuf::Metadata ControllerGetVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[55]);
}
// ===================================================================

ControllerModifyVolumeRequest_SecretsEntry_DoNotUse::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse() {}
ControllerModifyVolumeRequest_SecretsEntry_DoNotUse::ControllerModifyVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ControllerModifyVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[56]);
}
// ===================================================================

ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse() {}
ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse::ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ControllerModifyVolumeRequest_MutableParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[57]);
}
// ===================================================================

class ControllerModifyVolumeRequest::_Internal {
 public:
};

ControllerModifyVolumeRequest::ControllerModifyVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerModifyVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerModifyVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : secrets_{visibility, arena, from.secrets_},
        mutable_parameters_{visibility, arena, from.mutable_parameters_},
        volume_id_(arena, from.volume_id_),
        _cached_size_{0} {}

ControllerModifyVolumeRequest::ControllerModifyVolumeRequest(
    ::google::protobuf::Arena* arena,
    const ControllerModifyVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  ControllerModifyVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerModifyVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerModifyVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secrets_{visibility, arena},
        mutable_parameters_{visibility, arena},
        volume_id_(arena),
        _cached_size_{0} {}

inline void ControllerModifyVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControllerModifyVolumeRequest::~ControllerModifyVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerModifyVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerModifyVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerModifyVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerModifyVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.mutable_parameters_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerModifyVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 79, 2> ControllerModifyVolumeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerModifyVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerModifyVolumeRequest, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerModifyVolumeRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(ControllerModifyVolumeRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> mutable_parameters = 3;
    {PROTOBUF_FIELD_OFFSET(ControllerModifyVolumeRequest, _impl_.mutable_parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControllerModifyVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControllerModifyVolumeRequest()._impl_.mutable_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\44\11\7\22\0\0\0\0"
    "csi.v1.ControllerModifyVolumeRequest"
    "volume_id"
    "secrets"
    "mutable_parameters"
  }},
};

::uint8_t* ControllerModifyVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerModifyVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.secrets");
      }
    }
  }

  // map<string, string> mutable_parameters = 3;
  if (!_internal_mutable_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_mutable_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.mutable_parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.mutable_parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerModifyVolumeRequest.mutable_parameters");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerModifyVolumeRequest)
  return target;
}

::size_t ControllerModifyVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerModifyVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> mutable_parameters = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_mutable_parameters_size());
  for (const auto& entry : _internal_mutable_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerModifyVolumeRequest::_class_data_ = {
    ControllerModifyVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerModifyVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void ControllerModifyVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerModifyVolumeRequest*>(&to_msg);
  auto& from = static_cast<const ControllerModifyVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerModifyVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.mutable_parameters_.MergeFrom(from._impl_.mutable_parameters_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerModifyVolumeRequest::CopyFrom(const ControllerModifyVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerModifyVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerModifyVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerModifyVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerModifyVolumeRequest::InternalSwap(ControllerModifyVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.mutable_parameters_.InternalSwap(&other->_impl_.mutable_parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
}

::google::protobuf::Metadata ControllerModifyVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[58]);
}
// ===================================================================

class ControllerModifyVolumeResponse::_Internal {
 public:
};

ControllerModifyVolumeResponse::ControllerModifyVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerModifyVolumeResponse)
}
ControllerModifyVolumeResponse::ControllerModifyVolumeResponse(
    ::google::protobuf::Arena* arena,
    const ControllerModifyVolumeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ControllerModifyVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerModifyVolumeResponse)
}









::google::protobuf::Metadata ControllerModifyVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[59]);
}
// ===================================================================

GetCapacityRequest_ParametersEntry_DoNotUse::GetCapacityRequest_ParametersEntry_DoNotUse() {}
GetCapacityRequest_ParametersEntry_DoNotUse::GetCapacityRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata GetCapacityRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[60]);
}
// ===================================================================

class GetCapacityRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetCapacityRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetCapacityRequest, _impl_._has_bits_);
  static const ::csi::v1::Topology& accessible_topology(const GetCapacityRequest* msg);
  static void set_has_accessible_topology(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::Topology& GetCapacityRequest::_Internal::accessible_topology(const GetCapacityRequest* msg) {
  return *msg->_impl_.accessible_topology_;
}
GetCapacityRequest::GetCapacityRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetCapacityRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetCapacityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        volume_capabilities_{visibility, arena, from.volume_capabilities_},
        parameters_{visibility, arena, from.parameters_} {}

GetCapacityRequest::GetCapacityRequest(
    ::google::protobuf::Arena* arena,
    const GetCapacityRequest& from)
    : ::google::protobuf::Message(arena) {
  GetCapacityRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.accessible_topology_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::Topology>(arena, *from._impl_.accessible_topology_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetCapacityRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetCapacityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        volume_capabilities_{visibility, arena},
        parameters_{visibility, arena} {}

inline void GetCapacityRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accessible_topology_ = {};
}
GetCapacityRequest::~GetCapacityRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.GetCapacityRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetCapacityRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.accessible_topology_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetCapacityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GetCapacityRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_capabilities_.Clear();
  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.accessible_topology_ != nullptr);
    _impl_.accessible_topology_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetCapacityRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 44, 2> GetCapacityRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCapacityRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetCapacityRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .csi.v1.VolumeCapability volume_capabilities = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetCapacityRequest, _impl_.volume_capabilities_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .csi.v1.Topology accessible_topology = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(GetCapacityRequest, _impl_.accessible_topology_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.VolumeCapability volume_capabilities = 1;
    {PROTOBUF_FIELD_OFFSET(GetCapacityRequest, _impl_.volume_capabilities_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> parameters = 2;
    {PROTOBUF_FIELD_OFFSET(GetCapacityRequest, _impl_.parameters_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .csi.v1.Topology accessible_topology = 3;
    {PROTOBUF_FIELD_OFFSET(GetCapacityRequest, _impl_.accessible_topology_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetCapacityRequest()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::Topology>()},
  }}, {{
    "\31\0\12\0\0\0\0\0"
    "csi.v1.GetCapacityRequest"
    "parameters"
  }},
};

::uint8_t* GetCapacityRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GetCapacityRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.VolumeCapability volume_capabilities = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_volume_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_volume_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, string> parameters = 2;
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetCapacityRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetCapacityRequest.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetCapacityRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetCapacityRequest.parameters");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.Topology accessible_topology = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::accessible_topology(this),
        _Internal::accessible_topology(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GetCapacityRequest)
  return target;
}

::size_t GetCapacityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GetCapacityRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.VolumeCapability volume_capabilities = 1;
  total_size += 1UL * this->_internal_volume_capabilities_size();
  for (const auto& msg : this->_internal_volume_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, string> parameters = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // .csi.v1.Topology accessible_topology = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.accessible_topology_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetCapacityRequest::_class_data_ = {
    GetCapacityRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetCapacityRequest::GetClassData() const {
  return &_class_data_;
}

void GetCapacityRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetCapacityRequest*>(&to_msg);
  auto& from = static_cast<const GetCapacityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GetCapacityRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_volume_capabilities()->MergeFrom(
      from._internal_volume_capabilities());
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_accessible_topology()->::csi::v1::Topology::MergeFrom(
        from._internal_accessible_topology());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCapacityRequest::CopyFrom(const GetCapacityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GetCapacityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetCapacityRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetCapacityRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetCapacityRequest::InternalSwap(GetCapacityRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.volume_capabilities_.InternalSwap(&other->_impl_.volume_capabilities_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  swap(_impl_.accessible_topology_, other->_impl_.accessible_topology_);
}

::google::protobuf::Metadata GetCapacityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[61]);
}
// ===================================================================

class GetCapacityResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetCapacityResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_._has_bits_);
  static const ::google::protobuf::Int64Value& maximum_volume_size(const GetCapacityResponse* msg);
  static void set_has_maximum_volume_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Int64Value& minimum_volume_size(const GetCapacityResponse* msg);
  static void set_has_minimum_volume_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Int64Value& GetCapacityResponse::_Internal::maximum_volume_size(const GetCapacityResponse* msg) {
  return *msg->_impl_.maximum_volume_size_;
}
const ::google::protobuf::Int64Value& GetCapacityResponse::_Internal::minimum_volume_size(const GetCapacityResponse* msg) {
  return *msg->_impl_.minimum_volume_size_;
}
void GetCapacityResponse::clear_maximum_volume_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.maximum_volume_size_ != nullptr) _impl_.maximum_volume_size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetCapacityResponse::clear_minimum_volume_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.minimum_volume_size_ != nullptr) _impl_.minimum_volume_size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetCapacityResponse::GetCapacityResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetCapacityResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCapacityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetCapacityResponse::GetCapacityResponse(
    ::google::protobuf::Arena* arena,
    const GetCapacityResponse& from)
    : ::google::protobuf::Message(arena) {
  GetCapacityResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.maximum_volume_size_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.maximum_volume_size_)
                : nullptr;
  _impl_.minimum_volume_size_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.minimum_volume_size_)
                : nullptr;
  _impl_.available_capacity_ = from._impl_.available_capacity_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetCapacityResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCapacityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetCapacityResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, maximum_volume_size_),
           0,
           offsetof(Impl_, available_capacity_) -
               offsetof(Impl_, maximum_volume_size_) +
               sizeof(Impl_::available_capacity_));
}
GetCapacityResponse::~GetCapacityResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.GetCapacityResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetCapacityResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.maximum_volume_size_;
  delete _impl_.minimum_volume_size_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetCapacityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GetCapacityResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.maximum_volume_size_ != nullptr);
      _impl_.maximum_volume_size_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.minimum_volume_size_ != nullptr);
      _impl_.minimum_volume_size_->Clear();
    }
  }
  _impl_.available_capacity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetCapacityResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> GetCapacityResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetCapacityResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 available_capacity = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetCapacityResponse, _impl_.available_capacity_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.available_capacity_)}},
    // .google.protobuf.Int64Value maximum_volume_size = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.maximum_volume_size_)}},
    // .google.protobuf.Int64Value minimum_volume_size = 3 [(.csi.v1.alpha_field) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.minimum_volume_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 available_capacity = 1;
    {PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.available_capacity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Int64Value maximum_volume_size = 2;
    {PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.maximum_volume_size_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value minimum_volume_size = 3 [(.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.minimum_volume_size_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }}, {{
  }},
};

::uint8_t* GetCapacityResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GetCapacityResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 available_capacity = 1;
  if (this->_internal_available_capacity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_available_capacity(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Int64Value maximum_volume_size = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::maximum_volume_size(this),
        _Internal::maximum_volume_size(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value minimum_volume_size = 3 [(.csi.v1.alpha_field) = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::minimum_volume_size(this),
        _Internal::minimum_volume_size(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GetCapacityResponse)
  return target;
}

::size_t GetCapacityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GetCapacityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Int64Value maximum_volume_size = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.maximum_volume_size_);
    }

    // .google.protobuf.Int64Value minimum_volume_size = 3 [(.csi.v1.alpha_field) = true];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.minimum_volume_size_);
    }

  }
  // int64 available_capacity = 1;
  if (this->_internal_available_capacity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_available_capacity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetCapacityResponse::_class_data_ = {
    GetCapacityResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetCapacityResponse::GetClassData() const {
  return &_class_data_;
}

void GetCapacityResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetCapacityResponse*>(&to_msg);
  auto& from = static_cast<const GetCapacityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GetCapacityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_maximum_volume_size()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_maximum_volume_size());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_minimum_volume_size()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_minimum_volume_size());
    }
  }
  if (from._internal_available_capacity() != 0) {
    _this->_internal_set_available_capacity(from._internal_available_capacity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCapacityResponse::CopyFrom(const GetCapacityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GetCapacityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetCapacityResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetCapacityResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetCapacityResponse::InternalSwap(GetCapacityResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.available_capacity_)
      + sizeof(GetCapacityResponse::_impl_.available_capacity_)
      - PROTOBUF_FIELD_OFFSET(GetCapacityResponse, _impl_.maximum_volume_size_)>(
          reinterpret_cast<char*>(&_impl_.maximum_volume_size_),
          reinterpret_cast<char*>(&other->_impl_.maximum_volume_size_));
}

::google::protobuf::Metadata GetCapacityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[62]);
}
// ===================================================================

class ControllerGetCapabilitiesRequest::_Internal {
 public:
};

ControllerGetCapabilitiesRequest::ControllerGetCapabilitiesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerGetCapabilitiesRequest)
}
ControllerGetCapabilitiesRequest::ControllerGetCapabilitiesRequest(
    ::google::protobuf::Arena* arena,
    const ControllerGetCapabilitiesRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ControllerGetCapabilitiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerGetCapabilitiesRequest)
}









::google::protobuf::Metadata ControllerGetCapabilitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[63]);
}
// ===================================================================

class ControllerGetCapabilitiesResponse::_Internal {
 public:
};

ControllerGetCapabilitiesResponse::ControllerGetCapabilitiesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerGetCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : capabilities_{visibility, arena, from.capabilities_},
        _cached_size_{0} {}

ControllerGetCapabilitiesResponse::ControllerGetCapabilitiesResponse(
    ::google::protobuf::Arena* arena,
    const ControllerGetCapabilitiesResponse& from)
    : ::google::protobuf::Message(arena) {
  ControllerGetCapabilitiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerGetCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControllerGetCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capabilities_{visibility, arena},
        _cached_size_{0} {}

inline void ControllerGetCapabilitiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControllerGetCapabilitiesResponse::~ControllerGetCapabilitiesResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerGetCapabilitiesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerGetCapabilitiesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerGetCapabilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerGetCapabilitiesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerGetCapabilitiesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ControllerGetCapabilitiesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerGetCapabilitiesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .csi.v1.ControllerServiceCapability capabilities = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerGetCapabilitiesResponse, _impl_.capabilities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.ControllerServiceCapability capabilities = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerGetCapabilitiesResponse, _impl_.capabilities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::ControllerServiceCapability>()},
  }}, {{
  }},
};

::uint8_t* ControllerGetCapabilitiesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerGetCapabilitiesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.ControllerServiceCapability capabilities = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerGetCapabilitiesResponse)
  return target;
}

::size_t ControllerGetCapabilitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerGetCapabilitiesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.ControllerServiceCapability capabilities = 1;
  total_size += 1UL * this->_internal_capabilities_size();
  for (const auto& msg : this->_internal_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerGetCapabilitiesResponse::_class_data_ = {
    ControllerGetCapabilitiesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerGetCapabilitiesResponse::GetClassData() const {
  return &_class_data_;
}

void ControllerGetCapabilitiesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerGetCapabilitiesResponse*>(&to_msg);
  auto& from = static_cast<const ControllerGetCapabilitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerGetCapabilitiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capabilities()->MergeFrom(
      from._internal_capabilities());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerGetCapabilitiesResponse::CopyFrom(const ControllerGetCapabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerGetCapabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerGetCapabilitiesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerGetCapabilitiesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerGetCapabilitiesResponse::InternalSwap(ControllerGetCapabilitiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
}

::google::protobuf::Metadata ControllerGetCapabilitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[64]);
}
// ===================================================================

class ControllerServiceCapability_RPC::_Internal {
 public:
};

ControllerServiceCapability_RPC::ControllerServiceCapability_RPC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerServiceCapability.RPC)
}
ControllerServiceCapability_RPC::ControllerServiceCapability_RPC(
    ::google::protobuf::Arena* arena, const ControllerServiceCapability_RPC& from)
    : ControllerServiceCapability_RPC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ControllerServiceCapability_RPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ControllerServiceCapability_RPC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
ControllerServiceCapability_RPC::~ControllerServiceCapability_RPC() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerServiceCapability.RPC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerServiceCapability_RPC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerServiceCapability_RPC::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerServiceCapability.RPC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerServiceCapability_RPC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ControllerServiceCapability_RPC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ControllerServiceCapability_RPC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.ControllerServiceCapability.RPC.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControllerServiceCapability_RPC, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerServiceCapability_RPC, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.ControllerServiceCapability.RPC.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerServiceCapability_RPC, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ControllerServiceCapability_RPC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerServiceCapability.RPC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.ControllerServiceCapability.RPC.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerServiceCapability.RPC)
  return target;
}

::size_t ControllerServiceCapability_RPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerServiceCapability.RPC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.ControllerServiceCapability.RPC.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerServiceCapability_RPC::_class_data_ = {
    ControllerServiceCapability_RPC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerServiceCapability_RPC::GetClassData() const {
  return &_class_data_;
}

void ControllerServiceCapability_RPC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerServiceCapability_RPC*>(&to_msg);
  auto& from = static_cast<const ControllerServiceCapability_RPC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerServiceCapability.RPC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerServiceCapability_RPC::CopyFrom(const ControllerServiceCapability_RPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerServiceCapability.RPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerServiceCapability_RPC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerServiceCapability_RPC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerServiceCapability_RPC::InternalSwap(ControllerServiceCapability_RPC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata ControllerServiceCapability_RPC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[65]);
}
// ===================================================================

class ControllerServiceCapability::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::csi::v1::ControllerServiceCapability, _impl_._oneof_case_);
  static const ::csi::v1::ControllerServiceCapability_RPC& rpc(const ControllerServiceCapability* msg);
};

const ::csi::v1::ControllerServiceCapability_RPC& ControllerServiceCapability::_Internal::rpc(const ControllerServiceCapability* msg) {
  return *msg->_impl_.type_.rpc_;
}
void ControllerServiceCapability::set_allocated_rpc(::csi::v1::ControllerServiceCapability_RPC* rpc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (rpc) {
    ::google::protobuf::Arena* submessage_arena = rpc->GetArena();
    if (message_arena != submessage_arena) {
      rpc = ::google::protobuf::internal::GetOwnedMessage(message_arena, rpc, submessage_arena);
    }
    set_has_rpc();
    _impl_.type_.rpc_ = rpc;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.ControllerServiceCapability.rpc)
}
ControllerServiceCapability::ControllerServiceCapability(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerServiceCapability)
}
inline PROTOBUF_NDEBUG_INLINE ControllerServiceCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ControllerServiceCapability::ControllerServiceCapability(
    ::google::protobuf::Arena* arena,
    const ControllerServiceCapability& from)
    : ::google::protobuf::Message(arena) {
  ControllerServiceCapability* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kRpc:
        _impl_.type_.rpc_ = CreateMaybeMessage<::csi::v1::ControllerServiceCapability_RPC>(arena, *from._impl_.type_.rpc_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerServiceCapability)
}
inline PROTOBUF_NDEBUG_INLINE ControllerServiceCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ControllerServiceCapability::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControllerServiceCapability::~ControllerServiceCapability() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerServiceCapability)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerServiceCapability::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void ControllerServiceCapability::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:csi.v1.ControllerServiceCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kRpc: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.rpc_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void ControllerServiceCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerServiceCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerServiceCapability::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ControllerServiceCapability::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerServiceCapability_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.ControllerServiceCapability.RPC rpc = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerServiceCapability, _impl_.type_.rpc_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::ControllerServiceCapability_RPC>()},
  }}, {{
  }},
};

::uint8_t* ControllerServiceCapability::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerServiceCapability)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.ControllerServiceCapability.RPC rpc = 1;
  if (type_case() == kRpc) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc(this),
        _Internal::rpc(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerServiceCapability)
  return target;
}

::size_t ControllerServiceCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerServiceCapability)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .csi.v1.ControllerServiceCapability.RPC rpc = 1;
    case kRpc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.rpc_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerServiceCapability::_class_data_ = {
    ControllerServiceCapability::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerServiceCapability::GetClassData() const {
  return &_class_data_;
}

void ControllerServiceCapability::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerServiceCapability*>(&to_msg);
  auto& from = static_cast<const ControllerServiceCapability&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerServiceCapability)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kRpc: {
      _this->_internal_mutable_rpc()->::csi::v1::ControllerServiceCapability_RPC::MergeFrom(
          from._internal_rpc());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerServiceCapability::CopyFrom(const ControllerServiceCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerServiceCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerServiceCapability::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerServiceCapability::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerServiceCapability::InternalSwap(ControllerServiceCapability* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ControllerServiceCapability::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[66]);
}
// ===================================================================

CreateSnapshotRequest_SecretsEntry_DoNotUse::CreateSnapshotRequest_SecretsEntry_DoNotUse() {}
CreateSnapshotRequest_SecretsEntry_DoNotUse::CreateSnapshotRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata CreateSnapshotRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[67]);
}
// ===================================================================

CreateSnapshotRequest_ParametersEntry_DoNotUse::CreateSnapshotRequest_ParametersEntry_DoNotUse() {}
CreateSnapshotRequest_ParametersEntry_DoNotUse::CreateSnapshotRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata CreateSnapshotRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[68]);
}
// ===================================================================

class CreateSnapshotRequest::_Internal {
 public:
};

CreateSnapshotRequest::CreateSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.CreateSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : secrets_{visibility, arena, from.secrets_},
        parameters_{visibility, arena, from.parameters_},
        source_volume_id_(arena, from.source_volume_id_),
        name_(arena, from.name_),
        _cached_size_{0} {}

CreateSnapshotRequest::CreateSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const CreateSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.CreateSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secrets_{visibility, arena},
        parameters_{visibility, arena},
        source_volume_id_(arena),
        name_(arena),
        _cached_size_{0} {}

inline void CreateSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateSnapshotRequest::~CreateSnapshotRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.CreateSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.source_volume_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.CreateSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.parameters_.Clear();
  _impl_.source_volume_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 2, 74, 2> CreateSnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateSnapshotRequest, _impl_.name_)}},
    // string source_volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateSnapshotRequest, _impl_.source_volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string source_volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(CreateSnapshotRequest, _impl_.source_volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(CreateSnapshotRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(CreateSnapshotRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> parameters = 4;
    {PROTOBUF_FIELD_OFFSET(CreateSnapshotRequest, _impl_.parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateSnapshotRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateSnapshotRequest()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\20\4\7\12\0\0\0"
    "csi.v1.CreateSnapshotRequest"
    "source_volume_id"
    "name"
    "secrets"
    "parameters"
  }},
};

::uint8_t* CreateSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.CreateSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string source_volume_id = 1;
  if (!this->_internal_source_volume_id().empty()) {
    const std::string& _s = this->_internal_source_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.source_volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.secrets");
      }
    }
  }

  // map<string, string> parameters = 4;
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateSnapshotRequest.parameters");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.CreateSnapshotRequest)
  return target;
}

::size_t CreateSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.CreateSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> parameters = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string source_volume_id = 1;
  if (!this->_internal_source_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_source_volume_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateSnapshotRequest::_class_data_ = {
    CreateSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void CreateSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const CreateSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.CreateSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_source_volume_id().empty()) {
    _this->_internal_set_source_volume_id(from._internal_source_volume_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSnapshotRequest::CopyFrom(const CreateSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.CreateSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateSnapshotRequest::InternalSwap(CreateSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_volume_id_, &other->_impl_.source_volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata CreateSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[69]);
}
// ===================================================================

class CreateSnapshotResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateSnapshotResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateSnapshotResponse, _impl_._has_bits_);
  static const ::csi::v1::Snapshot& snapshot(const CreateSnapshotResponse* msg);
  static void set_has_snapshot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::Snapshot& CreateSnapshotResponse::_Internal::snapshot(const CreateSnapshotResponse* msg) {
  return *msg->_impl_.snapshot_;
}
CreateSnapshotResponse::CreateSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.CreateSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateSnapshotResponse::CreateSnapshotResponse(
    ::google::protobuf::Arena* arena,
    const CreateSnapshotResponse& from)
    : ::google::protobuf::Message(arena) {
  CreateSnapshotResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.snapshot_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::Snapshot>(arena, *from._impl_.snapshot_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.CreateSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateSnapshotResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.snapshot_ = {};
}
CreateSnapshotResponse::~CreateSnapshotResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.CreateSnapshotResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateSnapshotResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.snapshot_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.CreateSnapshotResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.snapshot_ != nullptr);
    _impl_.snapshot_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateSnapshotResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateSnapshotResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateSnapshotResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateSnapshotResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.Snapshot snapshot = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateSnapshotResponse, _impl_.snapshot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.Snapshot snapshot = 1;
    {PROTOBUF_FIELD_OFFSET(CreateSnapshotResponse, _impl_.snapshot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Snapshot>()},
  }}, {{
  }},
};

::uint8_t* CreateSnapshotResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.CreateSnapshotResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.Snapshot snapshot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::snapshot(this),
        _Internal::snapshot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.CreateSnapshotResponse)
  return target;
}

::size_t CreateSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.CreateSnapshotResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.Snapshot snapshot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.snapshot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateSnapshotResponse::_class_data_ = {
    CreateSnapshotResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateSnapshotResponse::GetClassData() const {
  return &_class_data_;
}

void CreateSnapshotResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const CreateSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.CreateSnapshotResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_snapshot()->::csi::v1::Snapshot::MergeFrom(
        from._internal_snapshot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSnapshotResponse::CopyFrom(const CreateSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.CreateSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateSnapshotResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateSnapshotResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateSnapshotResponse::InternalSwap(CreateSnapshotResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.snapshot_, other->_impl_.snapshot_);
}

::google::protobuf::Metadata CreateSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[70]);
}
// ===================================================================

class Snapshot::_Internal {
 public:
  using HasBits = decltype(std::declval<Snapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& creation_time(const Snapshot* msg);
  static void set_has_creation_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& Snapshot::_Internal::creation_time(const Snapshot* msg) {
  return *msg->_impl_.creation_time_;
}
void Snapshot::clear_creation_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.creation_time_ != nullptr) _impl_.creation_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Snapshot::Snapshot(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        snapshot_id_(arena, from.snapshot_id_),
        source_volume_id_(arena, from.source_volume_id_),
        group_snapshot_id_(arena, from.group_snapshot_id_) {}

Snapshot::Snapshot(
    ::google::protobuf::Arena* arena,
    const Snapshot& from)
    : ::google::protobuf::Message(arena) {
  Snapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.creation_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.creation_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_bytes_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_bytes_),
           offsetof(Impl_, ready_to_use_) -
               offsetof(Impl_, size_bytes_) +
               sizeof(Impl_::ready_to_use_));

  // @@protoc_insertion_point(copy_constructor:csi.v1.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        snapshot_id_(arena),
        source_volume_id_(arena),
        group_snapshot_id_(arena) {}

inline void Snapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_time_),
           0,
           offsetof(Impl_, ready_to_use_) -
               offsetof(Impl_, creation_time_) +
               sizeof(Impl_::ready_to_use_));
}
Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:csi.v1.Snapshot)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Snapshot::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.snapshot_id_.Destroy();
  _impl_.source_volume_id_.Destroy();
  _impl_.group_snapshot_id_.Destroy();
  delete _impl_.creation_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.Snapshot)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshot_id_.ClearToEmpty();
  _impl_.source_volume_id_.ClearToEmpty();
  _impl_.group_snapshot_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.creation_time_ != nullptr);
    _impl_.creation_time_->Clear();
  }
  ::memset(&_impl_.size_bytes_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ready_to_use_) -
      reinterpret_cast<char*>(&_impl_.size_bytes_)) + sizeof(_impl_.ready_to_use_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Snapshot::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 68, 2> Snapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Snapshot_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 size_bytes = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Snapshot, _impl_.size_bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.size_bytes_)}},
    // string snapshot_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.snapshot_id_)}},
    // string source_volume_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.source_volume_id_)}},
    // .google.protobuf.Timestamp creation_time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.creation_time_)}},
    // bool ready_to_use = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Snapshot, _impl_.ready_to_use_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.ready_to_use_)}},
    // string group_snapshot_id = 6 [(.csi.v1.alpha_field) = true];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.group_snapshot_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 size_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.size_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string snapshot_id = 2;
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.snapshot_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_volume_id = 3;
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.source_volume_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp creation_time = 4;
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.creation_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool ready_to_use = 5;
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.ready_to_use_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string group_snapshot_id = 6 [(.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.group_snapshot_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\17\0\13\20\0\0\21\0"
    "csi.v1.Snapshot"
    "snapshot_id"
    "source_volume_id"
    "group_snapshot_id"
  }},
};

::uint8_t* Snapshot::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.Snapshot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 size_bytes = 1;
  if (this->_internal_size_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_size_bytes(), target);
  }

  // string snapshot_id = 2;
  if (!this->_internal_snapshot_id().empty()) {
    const std::string& _s = this->_internal_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Snapshot.snapshot_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string source_volume_id = 3;
  if (!this->_internal_source_volume_id().empty()) {
    const std::string& _s = this->_internal_source_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Snapshot.source_volume_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp creation_time = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::creation_time(this),
        _Internal::creation_time(this).GetCachedSize(), target, stream);
  }

  // bool ready_to_use = 5;
  if (this->_internal_ready_to_use() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_ready_to_use(), target);
  }

  // string group_snapshot_id = 6 [(.csi.v1.alpha_field) = true];
  if (!this->_internal_group_snapshot_id().empty()) {
    const std::string& _s = this->_internal_group_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.Snapshot.group_snapshot_id");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.Snapshot)
  return target;
}

::size_t Snapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.Snapshot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string snapshot_id = 2;
  if (!this->_internal_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_snapshot_id());
  }

  // string source_volume_id = 3;
  if (!this->_internal_source_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_source_volume_id());
  }

  // string group_snapshot_id = 6 [(.csi.v1.alpha_field) = true];
  if (!this->_internal_group_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_group_snapshot_id());
  }

  // .google.protobuf.Timestamp creation_time = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.creation_time_);
  }

  // int64 size_bytes = 1;
  if (this->_internal_size_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_size_bytes());
  }

  // bool ready_to_use = 5;
  if (this->_internal_ready_to_use() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Snapshot::_class_data_ = {
    Snapshot::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Snapshot::GetClassData() const {
  return &_class_data_;
}

void Snapshot::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Snapshot*>(&to_msg);
  auto& from = static_cast<const Snapshot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.Snapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_snapshot_id().empty()) {
    _this->_internal_set_snapshot_id(from._internal_snapshot_id());
  }
  if (!from._internal_source_volume_id().empty()) {
    _this->_internal_set_source_volume_id(from._internal_source_volume_id());
  }
  if (!from._internal_group_snapshot_id().empty()) {
    _this->_internal_set_group_snapshot_id(from._internal_group_snapshot_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_creation_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_creation_time());
  }
  if (from._internal_size_bytes() != 0) {
    _this->_internal_set_size_bytes(from._internal_size_bytes());
  }
  if (from._internal_ready_to_use() != 0) {
    _this->_internal_set_ready_to_use(from._internal_ready_to_use());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Snapshot::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Snapshot::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Snapshot::InternalSwap(Snapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snapshot_id_, &other->_impl_.snapshot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_volume_id_, &other->_impl_.source_volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_snapshot_id_, &other->_impl_.group_snapshot_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.ready_to_use_)
      + sizeof(Snapshot::_impl_.ready_to_use_)
      - PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.creation_time_)>(
          reinterpret_cast<char*>(&_impl_.creation_time_),
          reinterpret_cast<char*>(&other->_impl_.creation_time_));
}

::google::protobuf::Metadata Snapshot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[71]);
}
// ===================================================================

DeleteSnapshotRequest_SecretsEntry_DoNotUse::DeleteSnapshotRequest_SecretsEntry_DoNotUse() {}
DeleteSnapshotRequest_SecretsEntry_DoNotUse::DeleteSnapshotRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata DeleteSnapshotRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[72]);
}
// ===================================================================

class DeleteSnapshotRequest::_Internal {
 public:
};

DeleteSnapshotRequest::DeleteSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.DeleteSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : secrets_{visibility, arena, from.secrets_},
        snapshot_id_(arena, from.snapshot_id_),
        _cached_size_{0} {}

DeleteSnapshotRequest::DeleteSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const DeleteSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  DeleteSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.DeleteSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secrets_{visibility, arena},
        snapshot_id_(arena),
        _cached_size_{0} {}

inline void DeleteSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteSnapshotRequest::~DeleteSnapshotRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.DeleteSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.snapshot_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.DeleteSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.snapshot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 55, 2> DeleteSnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeleteSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string snapshot_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteSnapshotRequest, _impl_.snapshot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string snapshot_id = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteSnapshotRequest, _impl_.snapshot_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(DeleteSnapshotRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DeleteSnapshotRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\13\7\0\0\0\0\0"
    "csi.v1.DeleteSnapshotRequest"
    "snapshot_id"
    "secrets"
  }},
};

::uint8_t* DeleteSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.DeleteSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string snapshot_id = 1;
  if (!this->_internal_snapshot_id().empty()) {
    const std::string& _s = this->_internal_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteSnapshotRequest.snapshot_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteSnapshotRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteSnapshotRequest.secrets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.DeleteSnapshotRequest)
  return target;
}

::size_t DeleteSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.DeleteSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 2 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string snapshot_id = 1;
  if (!this->_internal_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_snapshot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteSnapshotRequest::_class_data_ = {
    DeleteSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void DeleteSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.DeleteSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_snapshot_id().empty()) {
    _this->_internal_set_snapshot_id(from._internal_snapshot_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSnapshotRequest::CopyFrom(const DeleteSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.DeleteSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteSnapshotRequest::InternalSwap(DeleteSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snapshot_id_, &other->_impl_.snapshot_id_, arena);
}

::google::protobuf::Metadata DeleteSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[73]);
}
// ===================================================================

class DeleteSnapshotResponse::_Internal {
 public:
};

DeleteSnapshotResponse::DeleteSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.DeleteSnapshotResponse)
}
DeleteSnapshotResponse::DeleteSnapshotResponse(
    ::google::protobuf::Arena* arena,
    const DeleteSnapshotResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  DeleteSnapshotResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.DeleteSnapshotResponse)
}









::google::protobuf::Metadata DeleteSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[74]);
}
// ===================================================================

ListSnapshotsRequest_SecretsEntry_DoNotUse::ListSnapshotsRequest_SecretsEntry_DoNotUse() {}
ListSnapshotsRequest_SecretsEntry_DoNotUse::ListSnapshotsRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ListSnapshotsRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[75]);
}
// ===================================================================

class ListSnapshotsRequest::_Internal {
 public:
};

ListSnapshotsRequest::ListSnapshotsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ListSnapshotsRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListSnapshotsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : secrets_{visibility, arena, from.secrets_},
        starting_token_(arena, from.starting_token_),
        source_volume_id_(arena, from.source_volume_id_),
        snapshot_id_(arena, from.snapshot_id_),
        _cached_size_{0} {}

ListSnapshotsRequest::ListSnapshotsRequest(
    ::google::protobuf::Arena* arena,
    const ListSnapshotsRequest& from)
    : ::google::protobuf::Message(arena) {
  ListSnapshotsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.max_entries_ = from._impl_.max_entries_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ListSnapshotsRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListSnapshotsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secrets_{visibility, arena},
        starting_token_(arena),
        source_volume_id_(arena),
        snapshot_id_(arena),
        _cached_size_{0} {}

inline void ListSnapshotsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_entries_ = {};
}
ListSnapshotsRequest::~ListSnapshotsRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ListSnapshotsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListSnapshotsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.starting_token_.Destroy();
  _impl_.source_volume_id_.Destroy();
  _impl_.snapshot_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListSnapshotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ListSnapshotsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.starting_token_.ClearToEmpty();
  _impl_.source_volume_id_.ClearToEmpty();
  _impl_.snapshot_id_.ClearToEmpty();
  _impl_.max_entries_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListSnapshotsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 84, 2> ListSnapshotsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListSnapshotsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string snapshot_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.snapshot_id_)}},
    // int32 max_entries = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListSnapshotsRequest, _impl_.max_entries_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.max_entries_)}},
    // string starting_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.starting_token_)}},
    // string source_volume_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.source_volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 max_entries = 1;
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.max_entries_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string starting_token = 2;
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.starting_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_volume_id = 3;
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.source_volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snapshot_id = 4;
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.snapshot_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ListSnapshotsRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\0\16\20\13\7\0\0"
    "csi.v1.ListSnapshotsRequest"
    "starting_token"
    "source_volume_id"
    "snapshot_id"
    "secrets"
  }},
};

::uint8_t* ListSnapshotsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ListSnapshotsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 max_entries = 1;
  if (this->_internal_max_entries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_max_entries(), target);
  }

  // string starting_token = 2;
  if (!this->_internal_starting_token().empty()) {
    const std::string& _s = this->_internal_starting_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsRequest.starting_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string source_volume_id = 3;
  if (!this->_internal_source_volume_id().empty()) {
    const std::string& _s = this->_internal_source_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsRequest.source_volume_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string snapshot_id = 4;
  if (!this->_internal_snapshot_id().empty()) {
    const std::string& _s = this->_internal_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsRequest.snapshot_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsRequest.secrets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ListSnapshotsRequest)
  return target;
}

::size_t ListSnapshotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ListSnapshotsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string starting_token = 2;
  if (!this->_internal_starting_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_starting_token());
  }

  // string source_volume_id = 3;
  if (!this->_internal_source_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_source_volume_id());
  }

  // string snapshot_id = 4;
  if (!this->_internal_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_snapshot_id());
  }

  // int32 max_entries = 1;
  if (this->_internal_max_entries() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_entries());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListSnapshotsRequest::_class_data_ = {
    ListSnapshotsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListSnapshotsRequest::GetClassData() const {
  return &_class_data_;
}

void ListSnapshotsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListSnapshotsRequest*>(&to_msg);
  auto& from = static_cast<const ListSnapshotsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ListSnapshotsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_starting_token().empty()) {
    _this->_internal_set_starting_token(from._internal_starting_token());
  }
  if (!from._internal_source_volume_id().empty()) {
    _this->_internal_set_source_volume_id(from._internal_source_volume_id());
  }
  if (!from._internal_snapshot_id().empty()) {
    _this->_internal_set_snapshot_id(from._internal_snapshot_id());
  }
  if (from._internal_max_entries() != 0) {
    _this->_internal_set_max_entries(from._internal_max_entries());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSnapshotsRequest::CopyFrom(const ListSnapshotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ListSnapshotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListSnapshotsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListSnapshotsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListSnapshotsRequest::InternalSwap(ListSnapshotsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.starting_token_, &other->_impl_.starting_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_volume_id_, &other->_impl_.source_volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snapshot_id_, &other->_impl_.snapshot_id_, arena);
        swap(_impl_.max_entries_, other->_impl_.max_entries_);
}

::google::protobuf::Metadata ListSnapshotsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[76]);
}
// ===================================================================

class ListSnapshotsResponse_Entry::_Internal {
 public:
  using HasBits = decltype(std::declval<ListSnapshotsResponse_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse_Entry, _impl_._has_bits_);
  static const ::csi::v1::Snapshot& snapshot(const ListSnapshotsResponse_Entry* msg);
  static void set_has_snapshot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::Snapshot& ListSnapshotsResponse_Entry::_Internal::snapshot(const ListSnapshotsResponse_Entry* msg) {
  return *msg->_impl_.snapshot_;
}
ListSnapshotsResponse_Entry::ListSnapshotsResponse_Entry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ListSnapshotsResponse.Entry)
}
inline PROTOBUF_NDEBUG_INLINE ListSnapshotsResponse_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ListSnapshotsResponse_Entry::ListSnapshotsResponse_Entry(
    ::google::protobuf::Arena* arena,
    const ListSnapshotsResponse_Entry& from)
    : ::google::protobuf::Message(arena) {
  ListSnapshotsResponse_Entry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.snapshot_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::Snapshot>(arena, *from._impl_.snapshot_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ListSnapshotsResponse.Entry)
}
inline PROTOBUF_NDEBUG_INLINE ListSnapshotsResponse_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ListSnapshotsResponse_Entry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.snapshot_ = {};
}
ListSnapshotsResponse_Entry::~ListSnapshotsResponse_Entry() {
  // @@protoc_insertion_point(destructor:csi.v1.ListSnapshotsResponse.Entry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListSnapshotsResponse_Entry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.snapshot_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListSnapshotsResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ListSnapshotsResponse.Entry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.snapshot_ != nullptr);
    _impl_.snapshot_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListSnapshotsResponse_Entry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ListSnapshotsResponse_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse_Entry, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListSnapshotsResponse_Entry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.Snapshot snapshot = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse_Entry, _impl_.snapshot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.Snapshot snapshot = 1;
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse_Entry, _impl_.snapshot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Snapshot>()},
  }}, {{
  }},
};

::uint8_t* ListSnapshotsResponse_Entry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ListSnapshotsResponse.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.Snapshot snapshot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::snapshot(this),
        _Internal::snapshot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ListSnapshotsResponse.Entry)
  return target;
}

::size_t ListSnapshotsResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ListSnapshotsResponse.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.Snapshot snapshot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.snapshot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListSnapshotsResponse_Entry::_class_data_ = {
    ListSnapshotsResponse_Entry::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListSnapshotsResponse_Entry::GetClassData() const {
  return &_class_data_;
}

void ListSnapshotsResponse_Entry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListSnapshotsResponse_Entry*>(&to_msg);
  auto& from = static_cast<const ListSnapshotsResponse_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ListSnapshotsResponse.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_snapshot()->::csi::v1::Snapshot::MergeFrom(
        from._internal_snapshot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSnapshotsResponse_Entry::CopyFrom(const ListSnapshotsResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ListSnapshotsResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListSnapshotsResponse_Entry::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListSnapshotsResponse_Entry::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListSnapshotsResponse_Entry::InternalSwap(ListSnapshotsResponse_Entry* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.snapshot_, other->_impl_.snapshot_);
}

::google::protobuf::Metadata ListSnapshotsResponse_Entry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[77]);
}
// ===================================================================

class ListSnapshotsResponse::_Internal {
 public:
};

ListSnapshotsResponse::ListSnapshotsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ListSnapshotsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListSnapshotsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entries_{visibility, arena, from.entries_},
        next_token_(arena, from.next_token_),
        _cached_size_{0} {}

ListSnapshotsResponse::ListSnapshotsResponse(
    ::google::protobuf::Arena* arena,
    const ListSnapshotsResponse& from)
    : ::google::protobuf::Message(arena) {
  ListSnapshotsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.ListSnapshotsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListSnapshotsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        next_token_(arena),
        _cached_size_{0} {}

inline void ListSnapshotsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListSnapshotsResponse::~ListSnapshotsResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ListSnapshotsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListSnapshotsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListSnapshotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ListSnapshotsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.next_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListSnapshotsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 47, 2> ListSnapshotsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListSnapshotsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string next_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse, _impl_.next_token_)}},
    // repeated .csi.v1.ListSnapshotsResponse.Entry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.ListSnapshotsResponse.Entry entries = 1;
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_token = 2;
    {PROTOBUF_FIELD_OFFSET(ListSnapshotsResponse, _impl_.next_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::ListSnapshotsResponse_Entry>()},
  }}, {{
    "\34\0\12\0\0\0\0\0"
    "csi.v1.ListSnapshotsResponse"
    "next_token"
  }},
};

::uint8_t* ListSnapshotsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ListSnapshotsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.ListSnapshotsResponse.Entry entries = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_token = 2;
  if (!this->_internal_next_token().empty()) {
    const std::string& _s = this->_internal_next_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ListSnapshotsResponse.next_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ListSnapshotsResponse)
  return target;
}

::size_t ListSnapshotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ListSnapshotsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.ListSnapshotsResponse.Entry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string next_token = 2;
  if (!this->_internal_next_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListSnapshotsResponse::_class_data_ = {
    ListSnapshotsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListSnapshotsResponse::GetClassData() const {
  return &_class_data_;
}

void ListSnapshotsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListSnapshotsResponse*>(&to_msg);
  auto& from = static_cast<const ListSnapshotsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ListSnapshotsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (!from._internal_next_token().empty()) {
    _this->_internal_set_next_token(from._internal_next_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSnapshotsResponse::CopyFrom(const ListSnapshotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ListSnapshotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListSnapshotsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListSnapshotsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListSnapshotsResponse::InternalSwap(ListSnapshotsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_token_, &other->_impl_.next_token_, arena);
}

::google::protobuf::Metadata ListSnapshotsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[78]);
}
// ===================================================================

ControllerExpandVolumeRequest_SecretsEntry_DoNotUse::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse() {}
ControllerExpandVolumeRequest_SecretsEntry_DoNotUse::ControllerExpandVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ControllerExpandVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[79]);
}
// ===================================================================

class ControllerExpandVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ControllerExpandVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_._has_bits_);
  static const ::csi::v1::CapacityRange& capacity_range(const ControllerExpandVolumeRequest* msg);
  static void set_has_capacity_range(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::csi::v1::VolumeCapability& volume_capability(const ControllerExpandVolumeRequest* msg);
  static void set_has_volume_capability(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::csi::v1::CapacityRange& ControllerExpandVolumeRequest::_Internal::capacity_range(const ControllerExpandVolumeRequest* msg) {
  return *msg->_impl_.capacity_range_;
}
const ::csi::v1::VolumeCapability& ControllerExpandVolumeRequest::_Internal::volume_capability(const ControllerExpandVolumeRequest* msg) {
  return *msg->_impl_.volume_capability_;
}
ControllerExpandVolumeRequest::ControllerExpandVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerExpandVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerExpandVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        secrets_{visibility, arena, from.secrets_},
        volume_id_(arena, from.volume_id_) {}

ControllerExpandVolumeRequest::ControllerExpandVolumeRequest(
    ::google::protobuf::Arena* arena,
    const ControllerExpandVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  ControllerExpandVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.capacity_range_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::CapacityRange>(arena, *from._impl_.capacity_range_)
                : nullptr;
  _impl_.volume_capability_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::csi::v1::VolumeCapability>(arena, *from._impl_.volume_capability_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.ControllerExpandVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ControllerExpandVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        secrets_{visibility, arena},
        volume_id_(arena) {}

inline void ControllerExpandVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capacity_range_),
           0,
           offsetof(Impl_, volume_capability_) -
               offsetof(Impl_, capacity_range_) +
               sizeof(Impl_::volume_capability_));
}
ControllerExpandVolumeRequest::~ControllerExpandVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerExpandVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerExpandVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  delete _impl_.capacity_range_;
  delete _impl_.volume_capability_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerExpandVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerExpandVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.capacity_range_ != nullptr);
      _impl_.capacity_range_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.volume_capability_ != nullptr);
      _impl_.volume_capability_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerExpandVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 61, 2> ControllerExpandVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ControllerExpandVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeCapability volume_capability = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 2, PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.volume_capability_)}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.volume_id_)}},
    // .csi.v1.CapacityRange capacity_range = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.capacity_range_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.volume_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .csi.v1.CapacityRange capacity_range = 2;
    {PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.capacity_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.secrets_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .csi.v1.VolumeCapability volume_capability = 4;
    {PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.volume_capability_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::CapacityRange>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ControllerExpandVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
  }}, {{
    "\44\11\0\7\0\0\0\0"
    "csi.v1.ControllerExpandVolumeRequest"
    "volume_id"
    "secrets"
  }},
};

::uint8_t* ControllerExpandVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerExpandVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerExpandVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.CapacityRange capacity_range = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::capacity_range(this),
        _Internal::capacity_range(this).GetCachedSize(), target, stream);
  }

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerExpandVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerExpandVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerExpandVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.ControllerExpandVolumeRequest.secrets");
      }
    }
  }

  // .csi.v1.VolumeCapability volume_capability = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::volume_capability(this),
        _Internal::volume_capability(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerExpandVolumeRequest)
  return target;
}

::size_t ControllerExpandVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerExpandVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .csi.v1.CapacityRange capacity_range = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.capacity_range_);
    }

    // .csi.v1.VolumeCapability volume_capability = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_capability_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerExpandVolumeRequest::_class_data_ = {
    ControllerExpandVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerExpandVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void ControllerExpandVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerExpandVolumeRequest*>(&to_msg);
  auto& from = static_cast<const ControllerExpandVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerExpandVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_capacity_range()->::csi::v1::CapacityRange::MergeFrom(
          from._internal_capacity_range());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_volume_capability()->::csi::v1::VolumeCapability::MergeFrom(
          from._internal_volume_capability());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerExpandVolumeRequest::CopyFrom(const ControllerExpandVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerExpandVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerExpandVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerExpandVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerExpandVolumeRequest::InternalSwap(ControllerExpandVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.volume_capability_)
      + sizeof(ControllerExpandVolumeRequest::_impl_.volume_capability_)
      - PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeRequest, _impl_.capacity_range_)>(
          reinterpret_cast<char*>(&_impl_.capacity_range_),
          reinterpret_cast<char*>(&other->_impl_.capacity_range_));
}

::google::protobuf::Metadata ControllerExpandVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[80]);
}
// ===================================================================

class ControllerExpandVolumeResponse::_Internal {
 public:
};

ControllerExpandVolumeResponse::ControllerExpandVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.ControllerExpandVolumeResponse)
}
ControllerExpandVolumeResponse::ControllerExpandVolumeResponse(
    ::google::protobuf::Arena* arena, const ControllerExpandVolumeResponse& from)
    : ControllerExpandVolumeResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ControllerExpandVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ControllerExpandVolumeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capacity_bytes_),
           0,
           offsetof(Impl_, node_expansion_required_) -
               offsetof(Impl_, capacity_bytes_) +
               sizeof(Impl_::node_expansion_required_));
}
ControllerExpandVolumeResponse::~ControllerExpandVolumeResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.ControllerExpandVolumeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControllerExpandVolumeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControllerExpandVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.ControllerExpandVolumeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.capacity_bytes_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_expansion_required_) -
      reinterpret_cast<char*>(&_impl_.capacity_bytes_)) + sizeof(_impl_.node_expansion_required_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControllerExpandVolumeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ControllerExpandVolumeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ControllerExpandVolumeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool node_expansion_required = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ControllerExpandVolumeResponse, _impl_.node_expansion_required_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeResponse, _impl_.node_expansion_required_)}},
    // int64 capacity_bytes = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ControllerExpandVolumeResponse, _impl_.capacity_bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeResponse, _impl_.capacity_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 capacity_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeResponse, _impl_.capacity_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool node_expansion_required = 2;
    {PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeResponse, _impl_.node_expansion_required_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ControllerExpandVolumeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.ControllerExpandVolumeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 capacity_bytes = 1;
  if (this->_internal_capacity_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_capacity_bytes(), target);
  }

  // bool node_expansion_required = 2;
  if (this->_internal_node_expansion_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_node_expansion_required(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.ControllerExpandVolumeResponse)
  return target;
}

::size_t ControllerExpandVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.ControllerExpandVolumeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 capacity_bytes = 1;
  if (this->_internal_capacity_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_capacity_bytes());
  }

  // bool node_expansion_required = 2;
  if (this->_internal_node_expansion_required() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControllerExpandVolumeResponse::_class_data_ = {
    ControllerExpandVolumeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControllerExpandVolumeResponse::GetClassData() const {
  return &_class_data_;
}

void ControllerExpandVolumeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControllerExpandVolumeResponse*>(&to_msg);
  auto& from = static_cast<const ControllerExpandVolumeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.ControllerExpandVolumeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_capacity_bytes() != 0) {
    _this->_internal_set_capacity_bytes(from._internal_capacity_bytes());
  }
  if (from._internal_node_expansion_required() != 0) {
    _this->_internal_set_node_expansion_required(from._internal_node_expansion_required());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerExpandVolumeResponse::CopyFrom(const ControllerExpandVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.ControllerExpandVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControllerExpandVolumeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControllerExpandVolumeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControllerExpandVolumeResponse::InternalSwap(ControllerExpandVolumeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeResponse, _impl_.node_expansion_required_)
      + sizeof(ControllerExpandVolumeResponse::_impl_.node_expansion_required_)
      - PROTOBUF_FIELD_OFFSET(ControllerExpandVolumeResponse, _impl_.capacity_bytes_)>(
          reinterpret_cast<char*>(&_impl_.capacity_bytes_),
          reinterpret_cast<char*>(&other->_impl_.capacity_bytes_));
}

::google::protobuf::Metadata ControllerExpandVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[81]);
}
// ===================================================================

NodeStageVolumeRequest_PublishContextEntry_DoNotUse::NodeStageVolumeRequest_PublishContextEntry_DoNotUse() {}
NodeStageVolumeRequest_PublishContextEntry_DoNotUse::NodeStageVolumeRequest_PublishContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NodeStageVolumeRequest_PublishContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[82]);
}
// ===================================================================

NodeStageVolumeRequest_SecretsEntry_DoNotUse::NodeStageVolumeRequest_SecretsEntry_DoNotUse() {}
NodeStageVolumeRequest_SecretsEntry_DoNotUse::NodeStageVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NodeStageVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[83]);
}
// ===================================================================

NodeStageVolumeRequest_VolumeContextEntry_DoNotUse::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse() {}
NodeStageVolumeRequest_VolumeContextEntry_DoNotUse::NodeStageVolumeRequest_VolumeContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NodeStageVolumeRequest_VolumeContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[84]);
}
// ===================================================================

class NodeStageVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeStageVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_._has_bits_);
  static const ::csi::v1::VolumeCapability& volume_capability(const NodeStageVolumeRequest* msg);
  static void set_has_volume_capability(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeCapability& NodeStageVolumeRequest::_Internal::volume_capability(const NodeStageVolumeRequest* msg) {
  return *msg->_impl_.volume_capability_;
}
NodeStageVolumeRequest::NodeStageVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeStageVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeStageVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        publish_context_{visibility, arena, from.publish_context_},
        secrets_{visibility, arena, from.secrets_},
        volume_context_{visibility, arena, from.volume_context_},
        volume_id_(arena, from.volume_id_),
        staging_target_path_(arena, from.staging_target_path_) {}

NodeStageVolumeRequest::NodeStageVolumeRequest(
    ::google::protobuf::Arena* arena,
    const NodeStageVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeStageVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_capability_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeCapability>(arena, *from._impl_.volume_capability_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeStageVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeStageVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        publish_context_{visibility, arena},
        secrets_{visibility, arena},
        volume_context_{visibility, arena},
        volume_id_(arena),
        staging_target_path_(arena) {}

inline void NodeStageVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volume_capability_ = {};
}
NodeStageVolumeRequest::~NodeStageVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeStageVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeStageVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.staging_target_path_.Destroy();
  delete _impl_.volume_capability_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeStageVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeStageVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publish_context_.Clear();
  _impl_.secrets_.Clear();
  _impl_.volume_context_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _impl_.staging_target_path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.volume_capability_ != nullptr);
    _impl_.volume_capability_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeStageVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 4, 102, 2> NodeStageVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeStageVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeCapability volume_capability = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.volume_capability_)}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.volume_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string staging_target_path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.staging_target_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.volume_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> publish_context = 2;
    {PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.publish_context_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string staging_target_path = 3;
    {PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.staging_target_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .csi.v1.VolumeCapability volume_capability = 4;
    {PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.volume_capability_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.secrets_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> volume_context = 6;
    {PROTOBUF_FIELD_OFFSET(NodeStageVolumeRequest, _impl_.volume_context_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodeStageVolumeRequest()._impl_.publish_context_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodeStageVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodeStageVolumeRequest()._impl_.volume_context_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\35\11\17\23\0\7\16\0"
    "csi.v1.NodeStageVolumeRequest"
    "volume_id"
    "publish_context"
    "staging_target_path"
    "secrets"
    "volume_context"
  }},
};

::uint8_t* NodeStageVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeStageVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> publish_context = 2;
  if (!_internal_publish_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_publish_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.publish_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.publish_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.publish_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.publish_context");
      }
    }
  }

  // string staging_target_path = 3;
  if (!this->_internal_staging_target_path().empty()) {
    const std::string& _s = this->_internal_staging_target_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.staging_target_path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeCapability volume_capability = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::volume_capability(this),
        _Internal::volume_capability(this).GetCachedSize(), target, stream);
  }

  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.secrets");
      }
    }
  }

  // map<string, string> volume_context = 6;
  if (!_internal_volume_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_volume_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.volume_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeStageVolumeRequest.volume_context");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeStageVolumeRequest)
  return target;
}

::size_t NodeStageVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeStageVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> publish_context = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_publish_context_size());
  for (const auto& entry : _internal_publish_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> secrets = 5 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> volume_context = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_volume_context_size());
  for (const auto& entry : _internal_volume_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string staging_target_path = 3;
  if (!this->_internal_staging_target_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_staging_target_path());
  }

  // .csi.v1.VolumeCapability volume_capability = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_capability_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeStageVolumeRequest::_class_data_ = {
    NodeStageVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeStageVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void NodeStageVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeStageVolumeRequest*>(&to_msg);
  auto& from = static_cast<const NodeStageVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeStageVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.publish_context_.MergeFrom(from._impl_.publish_context_);
  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.volume_context_.MergeFrom(from._impl_.volume_context_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_staging_target_path().empty()) {
    _this->_internal_set_staging_target_path(from._internal_staging_target_path());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_volume_capability()->::csi::v1::VolumeCapability::MergeFrom(
        from._internal_volume_capability());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeStageVolumeRequest::CopyFrom(const NodeStageVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeStageVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeStageVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeStageVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeStageVolumeRequest::InternalSwap(NodeStageVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.publish_context_.InternalSwap(&other->_impl_.publish_context_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.volume_context_.InternalSwap(&other->_impl_.volume_context_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.staging_target_path_, &other->_impl_.staging_target_path_, arena);
  swap(_impl_.volume_capability_, other->_impl_.volume_capability_);
}

::google::protobuf::Metadata NodeStageVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[85]);
}
// ===================================================================

class NodeStageVolumeResponse::_Internal {
 public:
};

NodeStageVolumeResponse::NodeStageVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeStageVolumeResponse)
}
NodeStageVolumeResponse::NodeStageVolumeResponse(
    ::google::protobuf::Arena* arena,
    const NodeStageVolumeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NodeStageVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeStageVolumeResponse)
}









::google::protobuf::Metadata NodeStageVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[86]);
}
// ===================================================================

class NodeUnstageVolumeRequest::_Internal {
 public:
};

NodeUnstageVolumeRequest::NodeUnstageVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeUnstageVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeUnstageVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : volume_id_(arena, from.volume_id_),
        staging_target_path_(arena, from.staging_target_path_),
        _cached_size_{0} {}

NodeUnstageVolumeRequest::NodeUnstageVolumeRequest(
    ::google::protobuf::Arena* arena,
    const NodeUnstageVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeUnstageVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeUnstageVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeUnstageVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : volume_id_(arena),
        staging_target_path_(arena),
        _cached_size_{0} {}

inline void NodeUnstageVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeUnstageVolumeRequest::~NodeUnstageVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeUnstageVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeUnstageVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.staging_target_path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeUnstageVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeUnstageVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_id_.ClearToEmpty();
  _impl_.staging_target_path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeUnstageVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> NodeUnstageVolumeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeUnstageVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string staging_target_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeUnstageVolumeRequest, _impl_.staging_target_path_)}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeUnstageVolumeRequest, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeUnstageVolumeRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string staging_target_path = 2;
    {PROTOBUF_FIELD_OFFSET(NodeUnstageVolumeRequest, _impl_.staging_target_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\11\23\0\0\0\0\0"
    "csi.v1.NodeUnstageVolumeRequest"
    "volume_id"
    "staging_target_path"
  }},
};

::uint8_t* NodeUnstageVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeUnstageVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeUnstageVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string staging_target_path = 2;
  if (!this->_internal_staging_target_path().empty()) {
    const std::string& _s = this->_internal_staging_target_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeUnstageVolumeRequest.staging_target_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeUnstageVolumeRequest)
  return target;
}

::size_t NodeUnstageVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeUnstageVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string staging_target_path = 2;
  if (!this->_internal_staging_target_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_staging_target_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeUnstageVolumeRequest::_class_data_ = {
    NodeUnstageVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeUnstageVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void NodeUnstageVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeUnstageVolumeRequest*>(&to_msg);
  auto& from = static_cast<const NodeUnstageVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeUnstageVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_staging_target_path().empty()) {
    _this->_internal_set_staging_target_path(from._internal_staging_target_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeUnstageVolumeRequest::CopyFrom(const NodeUnstageVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeUnstageVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeUnstageVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeUnstageVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeUnstageVolumeRequest::InternalSwap(NodeUnstageVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.staging_target_path_, &other->_impl_.staging_target_path_, arena);
}

::google::protobuf::Metadata NodeUnstageVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[87]);
}
// ===================================================================

class NodeUnstageVolumeResponse::_Internal {
 public:
};

NodeUnstageVolumeResponse::NodeUnstageVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeUnstageVolumeResponse)
}
NodeUnstageVolumeResponse::NodeUnstageVolumeResponse(
    ::google::protobuf::Arena* arena,
    const NodeUnstageVolumeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NodeUnstageVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeUnstageVolumeResponse)
}









::google::protobuf::Metadata NodeUnstageVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[88]);
}
// ===================================================================

NodePublishVolumeRequest_PublishContextEntry_DoNotUse::NodePublishVolumeRequest_PublishContextEntry_DoNotUse() {}
NodePublishVolumeRequest_PublishContextEntry_DoNotUse::NodePublishVolumeRequest_PublishContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NodePublishVolumeRequest_PublishContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[89]);
}
// ===================================================================

NodePublishVolumeRequest_SecretsEntry_DoNotUse::NodePublishVolumeRequest_SecretsEntry_DoNotUse() {}
NodePublishVolumeRequest_SecretsEntry_DoNotUse::NodePublishVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NodePublishVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[90]);
}
// ===================================================================

NodePublishVolumeRequest_VolumeContextEntry_DoNotUse::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse() {}
NodePublishVolumeRequest_VolumeContextEntry_DoNotUse::NodePublishVolumeRequest_VolumeContextEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NodePublishVolumeRequest_VolumeContextEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[91]);
}
// ===================================================================

class NodePublishVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NodePublishVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_._has_bits_);
  static const ::csi::v1::VolumeCapability& volume_capability(const NodePublishVolumeRequest* msg);
  static void set_has_volume_capability(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeCapability& NodePublishVolumeRequest::_Internal::volume_capability(const NodePublishVolumeRequest* msg) {
  return *msg->_impl_.volume_capability_;
}
NodePublishVolumeRequest::NodePublishVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodePublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodePublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        publish_context_{visibility, arena, from.publish_context_},
        secrets_{visibility, arena, from.secrets_},
        volume_context_{visibility, arena, from.volume_context_},
        volume_id_(arena, from.volume_id_),
        staging_target_path_(arena, from.staging_target_path_),
        target_path_(arena, from.target_path_) {}

NodePublishVolumeRequest::NodePublishVolumeRequest(
    ::google::protobuf::Arena* arena,
    const NodePublishVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  NodePublishVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_capability_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeCapability>(arena, *from._impl_.volume_capability_)
                : nullptr;
  _impl_.readonly_ = from._impl_.readonly_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodePublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodePublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        publish_context_{visibility, arena},
        secrets_{visibility, arena},
        volume_context_{visibility, arena},
        volume_id_(arena),
        staging_target_path_(arena),
        target_path_(arena) {}

inline void NodePublishVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_capability_),
           0,
           offsetof(Impl_, readonly_) -
               offsetof(Impl_, volume_capability_) +
               sizeof(Impl_::readonly_));
}
NodePublishVolumeRequest::~NodePublishVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.NodePublishVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodePublishVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.staging_target_path_.Destroy();
  _impl_.target_path_.Destroy();
  delete _impl_.volume_capability_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodePublishVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodePublishVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publish_context_.Clear();
  _impl_.secrets_.Clear();
  _impl_.volume_context_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _impl_.staging_target_path_.ClearToEmpty();
  _impl_.target_path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.volume_capability_ != nullptr);
    _impl_.volume_capability_->Clear();
  }
  _impl_.readonly_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodePublishVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 4, 123, 2> NodePublishVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodePublishVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.volume_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string staging_target_path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.staging_target_path_)}},
    // string target_path = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.target_path_)}},
    // .csi.v1.VolumeCapability volume_capability = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 1, PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.volume_capability_)}},
    // bool readonly = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NodePublishVolumeRequest, _impl_.readonly_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.readonly_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.volume_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> publish_context = 2;
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.publish_context_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string staging_target_path = 3;
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.staging_target_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_path = 4;
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.target_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .csi.v1.VolumeCapability volume_capability = 5;
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.volume_capability_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool readonly = 6;
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.readonly_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> secrets = 7 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.secrets_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> volume_context = 8;
    {PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.volume_context_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodePublishVolumeRequest()._impl_.publish_context_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodePublishVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodePublishVolumeRequest()._impl_.volume_context_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\11\17\23\13\0\0\7\16\0\0\0\0\0\0\0"
    "csi.v1.NodePublishVolumeRequest"
    "volume_id"
    "publish_context"
    "staging_target_path"
    "target_path"
    "secrets"
    "volume_context"
  }},
};

::uint8_t* NodePublishVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodePublishVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> publish_context = 2;
  if (!_internal_publish_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_publish_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.publish_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.publish_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.publish_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.publish_context");
      }
    }
  }

  // string staging_target_path = 3;
  if (!this->_internal_staging_target_path().empty()) {
    const std::string& _s = this->_internal_staging_target_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.staging_target_path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string target_path = 4;
  if (!this->_internal_target_path().empty()) {
    const std::string& _s = this->_internal_target_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.target_path");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeCapability volume_capability = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::volume_capability(this),
        _Internal::volume_capability(this).GetCachedSize(), target, stream);
  }

  // bool readonly = 6;
  if (this->_internal_readonly() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_readonly(), target);
  }

  // map<string, string> secrets = 7 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.secrets");
      }
    }
  }

  // map<string, string> volume_context = 8;
  if (!_internal_volume_context().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_volume_context();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.volume_context");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.volume_context");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodePublishVolumeRequest.volume_context");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodePublishVolumeRequest)
  return target;
}

::size_t NodePublishVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodePublishVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> publish_context = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_publish_context_size());
  for (const auto& entry : _internal_publish_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> secrets = 7 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> volume_context = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_volume_context_size());
  for (const auto& entry : _internal_volume_context()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string staging_target_path = 3;
  if (!this->_internal_staging_target_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_staging_target_path());
  }

  // string target_path = 4;
  if (!this->_internal_target_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_target_path());
  }

  // .csi.v1.VolumeCapability volume_capability = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_capability_);
  }

  // bool readonly = 6;
  if (this->_internal_readonly() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodePublishVolumeRequest::_class_data_ = {
    NodePublishVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodePublishVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void NodePublishVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodePublishVolumeRequest*>(&to_msg);
  auto& from = static_cast<const NodePublishVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodePublishVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.publish_context_.MergeFrom(from._impl_.publish_context_);
  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.volume_context_.MergeFrom(from._impl_.volume_context_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_staging_target_path().empty()) {
    _this->_internal_set_staging_target_path(from._internal_staging_target_path());
  }
  if (!from._internal_target_path().empty()) {
    _this->_internal_set_target_path(from._internal_target_path());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_volume_capability()->::csi::v1::VolumeCapability::MergeFrom(
        from._internal_volume_capability());
  }
  if (from._internal_readonly() != 0) {
    _this->_internal_set_readonly(from._internal_readonly());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodePublishVolumeRequest::CopyFrom(const NodePublishVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodePublishVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodePublishVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodePublishVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodePublishVolumeRequest::InternalSwap(NodePublishVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.publish_context_.InternalSwap(&other->_impl_.publish_context_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.volume_context_.InternalSwap(&other->_impl_.volume_context_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.staging_target_path_, &other->_impl_.staging_target_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_path_, &other->_impl_.target_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.readonly_)
      + sizeof(NodePublishVolumeRequest::_impl_.readonly_)
      - PROTOBUF_FIELD_OFFSET(NodePublishVolumeRequest, _impl_.volume_capability_)>(
          reinterpret_cast<char*>(&_impl_.volume_capability_),
          reinterpret_cast<char*>(&other->_impl_.volume_capability_));
}

::google::protobuf::Metadata NodePublishVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[92]);
}
// ===================================================================

class NodePublishVolumeResponse::_Internal {
 public:
};

NodePublishVolumeResponse::NodePublishVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodePublishVolumeResponse)
}
NodePublishVolumeResponse::NodePublishVolumeResponse(
    ::google::protobuf::Arena* arena,
    const NodePublishVolumeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NodePublishVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodePublishVolumeResponse)
}









::google::protobuf::Metadata NodePublishVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[93]);
}
// ===================================================================

class NodeUnpublishVolumeRequest::_Internal {
 public:
};

NodeUnpublishVolumeRequest::NodeUnpublishVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeUnpublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeUnpublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : volume_id_(arena, from.volume_id_),
        target_path_(arena, from.target_path_),
        _cached_size_{0} {}

NodeUnpublishVolumeRequest::NodeUnpublishVolumeRequest(
    ::google::protobuf::Arena* arena,
    const NodeUnpublishVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeUnpublishVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeUnpublishVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeUnpublishVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : volume_id_(arena),
        target_path_(arena),
        _cached_size_{0} {}

inline void NodeUnpublishVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeUnpublishVolumeRequest::~NodeUnpublishVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeUnpublishVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeUnpublishVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.target_path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeUnpublishVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeUnpublishVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_id_.ClearToEmpty();
  _impl_.target_path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeUnpublishVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> NodeUnpublishVolumeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeUnpublishVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string target_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeUnpublishVolumeRequest, _impl_.target_path_)}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeUnpublishVolumeRequest, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeUnpublishVolumeRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_path = 2;
    {PROTOBUF_FIELD_OFFSET(NodeUnpublishVolumeRequest, _impl_.target_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\11\13\0\0\0\0\0"
    "csi.v1.NodeUnpublishVolumeRequest"
    "volume_id"
    "target_path"
  }},
};

::uint8_t* NodeUnpublishVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeUnpublishVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeUnpublishVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string target_path = 2;
  if (!this->_internal_target_path().empty()) {
    const std::string& _s = this->_internal_target_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeUnpublishVolumeRequest.target_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeUnpublishVolumeRequest)
  return target;
}

::size_t NodeUnpublishVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeUnpublishVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string target_path = 2;
  if (!this->_internal_target_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_target_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeUnpublishVolumeRequest::_class_data_ = {
    NodeUnpublishVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeUnpublishVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void NodeUnpublishVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeUnpublishVolumeRequest*>(&to_msg);
  auto& from = static_cast<const NodeUnpublishVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeUnpublishVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_target_path().empty()) {
    _this->_internal_set_target_path(from._internal_target_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeUnpublishVolumeRequest::CopyFrom(const NodeUnpublishVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeUnpublishVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeUnpublishVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeUnpublishVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeUnpublishVolumeRequest::InternalSwap(NodeUnpublishVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_path_, &other->_impl_.target_path_, arena);
}

::google::protobuf::Metadata NodeUnpublishVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[94]);
}
// ===================================================================

class NodeUnpublishVolumeResponse::_Internal {
 public:
};

NodeUnpublishVolumeResponse::NodeUnpublishVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeUnpublishVolumeResponse)
}
NodeUnpublishVolumeResponse::NodeUnpublishVolumeResponse(
    ::google::protobuf::Arena* arena,
    const NodeUnpublishVolumeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NodeUnpublishVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeUnpublishVolumeResponse)
}









::google::protobuf::Metadata NodeUnpublishVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[95]);
}
// ===================================================================

class NodeGetVolumeStatsRequest::_Internal {
 public:
};

NodeGetVolumeStatsRequest::NodeGetVolumeStatsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeGetVolumeStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetVolumeStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : volume_id_(arena, from.volume_id_),
        volume_path_(arena, from.volume_path_),
        staging_target_path_(arena, from.staging_target_path_),
        _cached_size_{0} {}

NodeGetVolumeStatsRequest::NodeGetVolumeStatsRequest(
    ::google::protobuf::Arena* arena,
    const NodeGetVolumeStatsRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeGetVolumeStatsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeGetVolumeStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetVolumeStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : volume_id_(arena),
        volume_path_(arena),
        staging_target_path_(arena),
        _cached_size_{0} {}

inline void NodeGetVolumeStatsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeGetVolumeStatsRequest::~NodeGetVolumeStatsRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeGetVolumeStatsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeGetVolumeStatsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.volume_path_.Destroy();
  _impl_.staging_target_path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeGetVolumeStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeGetVolumeStatsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_id_.ClearToEmpty();
  _impl_.volume_path_.ClearToEmpty();
  _impl_.staging_target_path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeGetVolumeStatsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 80, 2> NodeGetVolumeStatsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeGetVolumeStatsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsRequest, _impl_.volume_id_)}},
    // string volume_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsRequest, _impl_.volume_path_)}},
    // string staging_target_path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsRequest, _impl_.staging_target_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsRequest, _impl_.volume_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string volume_path = 2;
    {PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsRequest, _impl_.volume_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string staging_target_path = 3;
    {PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsRequest, _impl_.staging_target_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\11\13\23\0\0\0\0"
    "csi.v1.NodeGetVolumeStatsRequest"
    "volume_id"
    "volume_path"
    "staging_target_path"
  }},
};

::uint8_t* NodeGetVolumeStatsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeGetVolumeStatsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeGetVolumeStatsRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string volume_path = 2;
  if (!this->_internal_volume_path().empty()) {
    const std::string& _s = this->_internal_volume_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeGetVolumeStatsRequest.volume_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string staging_target_path = 3;
  if (!this->_internal_staging_target_path().empty()) {
    const std::string& _s = this->_internal_staging_target_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeGetVolumeStatsRequest.staging_target_path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeGetVolumeStatsRequest)
  return target;
}

::size_t NodeGetVolumeStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeGetVolumeStatsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string volume_path = 2;
  if (!this->_internal_volume_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_path());
  }

  // string staging_target_path = 3;
  if (!this->_internal_staging_target_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_staging_target_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeGetVolumeStatsRequest::_class_data_ = {
    NodeGetVolumeStatsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeGetVolumeStatsRequest::GetClassData() const {
  return &_class_data_;
}

void NodeGetVolumeStatsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeGetVolumeStatsRequest*>(&to_msg);
  auto& from = static_cast<const NodeGetVolumeStatsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeGetVolumeStatsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_volume_path().empty()) {
    _this->_internal_set_volume_path(from._internal_volume_path());
  }
  if (!from._internal_staging_target_path().empty()) {
    _this->_internal_set_staging_target_path(from._internal_staging_target_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeGetVolumeStatsRequest::CopyFrom(const NodeGetVolumeStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeGetVolumeStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeGetVolumeStatsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeGetVolumeStatsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeGetVolumeStatsRequest::InternalSwap(NodeGetVolumeStatsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_path_, &other->_impl_.volume_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.staging_target_path_, &other->_impl_.staging_target_path_, arena);
}

::google::protobuf::Metadata NodeGetVolumeStatsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[96]);
}
// ===================================================================

class NodeGetVolumeStatsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeGetVolumeStatsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsResponse, _impl_._has_bits_);
  static const ::csi::v1::VolumeCondition& volume_condition(const NodeGetVolumeStatsResponse* msg);
  static void set_has_volume_condition(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeCondition& NodeGetVolumeStatsResponse::_Internal::volume_condition(const NodeGetVolumeStatsResponse* msg) {
  return *msg->_impl_.volume_condition_;
}
NodeGetVolumeStatsResponse::NodeGetVolumeStatsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeGetVolumeStatsResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetVolumeStatsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        usage_{visibility, arena, from.usage_} {}

NodeGetVolumeStatsResponse::NodeGetVolumeStatsResponse(
    ::google::protobuf::Arena* arena,
    const NodeGetVolumeStatsResponse& from)
    : ::google::protobuf::Message(arena) {
  NodeGetVolumeStatsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.volume_condition_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeCondition>(arena, *from._impl_.volume_condition_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeGetVolumeStatsResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetVolumeStatsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        usage_{visibility, arena} {}

inline void NodeGetVolumeStatsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volume_condition_ = {};
}
NodeGetVolumeStatsResponse::~NodeGetVolumeStatsResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeGetVolumeStatsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeGetVolumeStatsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.volume_condition_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeGetVolumeStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeGetVolumeStatsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.usage_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.volume_condition_ != nullptr);
    _impl_.volume_condition_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeGetVolumeStatsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> NodeGetVolumeStatsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeGetVolumeStatsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsResponse, _impl_.volume_condition_)}},
    // repeated .csi.v1.VolumeUsage usage = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsResponse, _impl_.usage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.VolumeUsage usage = 1;
    {PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsResponse, _impl_.usage_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(NodeGetVolumeStatsResponse, _impl_.volume_condition_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeUsage>()},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCondition>()},
  }}, {{
  }},
};

::uint8_t* NodeGetVolumeStatsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeGetVolumeStatsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.VolumeUsage usage = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_usage_size()); i < n; i++) {
    const auto& repfield = this->_internal_usage().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::volume_condition(this),
        _Internal::volume_condition(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeGetVolumeStatsResponse)
  return target;
}

::size_t NodeGetVolumeStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeGetVolumeStatsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.VolumeUsage usage = 1;
  total_size += 1UL * this->_internal_usage_size();
  for (const auto& msg : this->_internal_usage()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .csi.v1.VolumeCondition volume_condition = 2 [(.csi.v1.alpha_field) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_condition_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeGetVolumeStatsResponse::_class_data_ = {
    NodeGetVolumeStatsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeGetVolumeStatsResponse::GetClassData() const {
  return &_class_data_;
}

void NodeGetVolumeStatsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeGetVolumeStatsResponse*>(&to_msg);
  auto& from = static_cast<const NodeGetVolumeStatsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeGetVolumeStatsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_usage()->MergeFrom(
      from._internal_usage());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_volume_condition()->::csi::v1::VolumeCondition::MergeFrom(
        from._internal_volume_condition());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeGetVolumeStatsResponse::CopyFrom(const NodeGetVolumeStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeGetVolumeStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeGetVolumeStatsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeGetVolumeStatsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeGetVolumeStatsResponse::InternalSwap(NodeGetVolumeStatsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.usage_.InternalSwap(&other->_impl_.usage_);
  swap(_impl_.volume_condition_, other->_impl_.volume_condition_);
}

::google::protobuf::Metadata NodeGetVolumeStatsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[97]);
}
// ===================================================================

class VolumeUsage::_Internal {
 public:
};

VolumeUsage::VolumeUsage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeUsage)
}
VolumeUsage::VolumeUsage(
    ::google::protobuf::Arena* arena, const VolumeUsage& from)
    : VolumeUsage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VolumeUsage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VolumeUsage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, available_),
           0,
           offsetof(Impl_, unit_) -
               offsetof(Impl_, available_) +
               sizeof(Impl_::unit_));
}
VolumeUsage::~VolumeUsage() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeUsage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeUsage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeUsage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.available_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.unit_) -
      reinterpret_cast<char*>(&_impl_.available_)) + sizeof(_impl_.unit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeUsage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> VolumeUsage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VolumeUsage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeUsage.Unit unit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VolumeUsage, _impl_.unit_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.unit_)}},
    // int64 available = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VolumeUsage, _impl_.available_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.available_)}},
    // int64 total = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VolumeUsage, _impl_.total_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.total_)}},
    // int64 used = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VolumeUsage, _impl_.used_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.used_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 available = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.available_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 total = 2;
    {PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 used = 3;
    {PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.used_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .csi.v1.VolumeUsage.Unit unit = 4;
    {PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VolumeUsage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeUsage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 available = 1;
  if (this->_internal_available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_available(), target);
  }

  // int64 total = 2;
  if (this->_internal_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_total(), target);
  }

  // int64 used = 3;
  if (this->_internal_used() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_used(), target);
  }

  // .csi.v1.VolumeUsage.Unit unit = 4;
  if (this->_internal_unit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_unit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeUsage)
  return target;
}

::size_t VolumeUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeUsage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 available = 1;
  if (this->_internal_available() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_available());
  }

  // int64 total = 2;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total());
  }

  // int64 used = 3;
  if (this->_internal_used() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_used());
  }

  // .csi.v1.VolumeUsage.Unit unit = 4;
  if (this->_internal_unit() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_unit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeUsage::_class_data_ = {
    VolumeUsage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeUsage::GetClassData() const {
  return &_class_data_;
}

void VolumeUsage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeUsage*>(&to_msg);
  auto& from = static_cast<const VolumeUsage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeUsage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_available() != 0) {
    _this->_internal_set_available(from._internal_available());
  }
  if (from._internal_total() != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  if (from._internal_used() != 0) {
    _this->_internal_set_used(from._internal_used());
  }
  if (from._internal_unit() != 0) {
    _this->_internal_set_unit(from._internal_unit());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeUsage::CopyFrom(const VolumeUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeUsage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeUsage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeUsage::InternalSwap(VolumeUsage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.unit_)
      + sizeof(VolumeUsage::_impl_.unit_)
      - PROTOBUF_FIELD_OFFSET(VolumeUsage, _impl_.available_)>(
          reinterpret_cast<char*>(&_impl_.available_),
          reinterpret_cast<char*>(&other->_impl_.available_));
}

::google::protobuf::Metadata VolumeUsage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[98]);
}
// ===================================================================

class VolumeCondition::_Internal {
 public:
};

VolumeCondition::VolumeCondition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeCondition)
}
inline PROTOBUF_NDEBUG_INLINE VolumeCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

VolumeCondition::VolumeCondition(
    ::google::protobuf::Arena* arena,
    const VolumeCondition& from)
    : ::google::protobuf::Message(arena) {
  VolumeCondition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.abnormal_ = from._impl_.abnormal_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeCondition)
}
inline PROTOBUF_NDEBUG_INLINE VolumeCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void VolumeCondition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.abnormal_ = {};
}
VolumeCondition::~VolumeCondition() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeCondition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeCondition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeCondition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.abnormal_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeCondition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> VolumeCondition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VolumeCondition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeCondition, _impl_.message_)}},
    // bool abnormal = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VolumeCondition, _impl_.abnormal_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeCondition, _impl_.abnormal_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool abnormal = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeCondition, _impl_.abnormal_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(VolumeCondition, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\7\0\0\0\0\0"
    "csi.v1.VolumeCondition"
    "message"
  }},
};

::uint8_t* VolumeCondition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool abnormal = 1;
  if (this->_internal_abnormal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_abnormal(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.VolumeCondition.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeCondition)
  return target;
}

::size_t VolumeCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // bool abnormal = 1;
  if (this->_internal_abnormal() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeCondition::_class_data_ = {
    VolumeCondition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeCondition::GetClassData() const {
  return &_class_data_;
}

void VolumeCondition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeCondition*>(&to_msg);
  auto& from = static_cast<const VolumeCondition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_abnormal() != 0) {
    _this->_internal_set_abnormal(from._internal_abnormal());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeCondition::CopyFrom(const VolumeCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeCondition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeCondition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeCondition::InternalSwap(VolumeCondition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.abnormal_, other->_impl_.abnormal_);
}

::google::protobuf::Metadata VolumeCondition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[99]);
}
// ===================================================================

class NodeGetCapabilitiesRequest::_Internal {
 public:
};

NodeGetCapabilitiesRequest::NodeGetCapabilitiesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeGetCapabilitiesRequest)
}
NodeGetCapabilitiesRequest::NodeGetCapabilitiesRequest(
    ::google::protobuf::Arena* arena,
    const NodeGetCapabilitiesRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NodeGetCapabilitiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeGetCapabilitiesRequest)
}









::google::protobuf::Metadata NodeGetCapabilitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[100]);
}
// ===================================================================

class NodeGetCapabilitiesResponse::_Internal {
 public:
};

NodeGetCapabilitiesResponse::NodeGetCapabilitiesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeGetCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : capabilities_{visibility, arena, from.capabilities_},
        _cached_size_{0} {}

NodeGetCapabilitiesResponse::NodeGetCapabilitiesResponse(
    ::google::protobuf::Arena* arena,
    const NodeGetCapabilitiesResponse& from)
    : ::google::protobuf::Message(arena) {
  NodeGetCapabilitiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeGetCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capabilities_{visibility, arena},
        _cached_size_{0} {}

inline void NodeGetCapabilitiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeGetCapabilitiesResponse::~NodeGetCapabilitiesResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeGetCapabilitiesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeGetCapabilitiesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeGetCapabilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeGetCapabilitiesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeGetCapabilitiesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NodeGetCapabilitiesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeGetCapabilitiesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .csi.v1.NodeServiceCapability capabilities = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeGetCapabilitiesResponse, _impl_.capabilities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.NodeServiceCapability capabilities = 1;
    {PROTOBUF_FIELD_OFFSET(NodeGetCapabilitiesResponse, _impl_.capabilities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::NodeServiceCapability>()},
  }}, {{
  }},
};

::uint8_t* NodeGetCapabilitiesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeGetCapabilitiesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.NodeServiceCapability capabilities = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeGetCapabilitiesResponse)
  return target;
}

::size_t NodeGetCapabilitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeGetCapabilitiesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.NodeServiceCapability capabilities = 1;
  total_size += 1UL * this->_internal_capabilities_size();
  for (const auto& msg : this->_internal_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeGetCapabilitiesResponse::_class_data_ = {
    NodeGetCapabilitiesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeGetCapabilitiesResponse::GetClassData() const {
  return &_class_data_;
}

void NodeGetCapabilitiesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeGetCapabilitiesResponse*>(&to_msg);
  auto& from = static_cast<const NodeGetCapabilitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeGetCapabilitiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capabilities()->MergeFrom(
      from._internal_capabilities());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeGetCapabilitiesResponse::CopyFrom(const NodeGetCapabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeGetCapabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeGetCapabilitiesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeGetCapabilitiesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeGetCapabilitiesResponse::InternalSwap(NodeGetCapabilitiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
}

::google::protobuf::Metadata NodeGetCapabilitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[101]);
}
// ===================================================================

class NodeServiceCapability_RPC::_Internal {
 public:
};

NodeServiceCapability_RPC::NodeServiceCapability_RPC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeServiceCapability.RPC)
}
NodeServiceCapability_RPC::NodeServiceCapability_RPC(
    ::google::protobuf::Arena* arena, const NodeServiceCapability_RPC& from)
    : NodeServiceCapability_RPC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NodeServiceCapability_RPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeServiceCapability_RPC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
NodeServiceCapability_RPC::~NodeServiceCapability_RPC() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeServiceCapability.RPC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeServiceCapability_RPC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeServiceCapability_RPC::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeServiceCapability.RPC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeServiceCapability_RPC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NodeServiceCapability_RPC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeServiceCapability_RPC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.NodeServiceCapability.RPC.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeServiceCapability_RPC, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NodeServiceCapability_RPC, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.NodeServiceCapability.RPC.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(NodeServiceCapability_RPC, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NodeServiceCapability_RPC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeServiceCapability.RPC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.NodeServiceCapability.RPC.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeServiceCapability.RPC)
  return target;
}

::size_t NodeServiceCapability_RPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeServiceCapability.RPC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.NodeServiceCapability.RPC.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeServiceCapability_RPC::_class_data_ = {
    NodeServiceCapability_RPC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeServiceCapability_RPC::GetClassData() const {
  return &_class_data_;
}

void NodeServiceCapability_RPC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeServiceCapability_RPC*>(&to_msg);
  auto& from = static_cast<const NodeServiceCapability_RPC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeServiceCapability.RPC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeServiceCapability_RPC::CopyFrom(const NodeServiceCapability_RPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeServiceCapability.RPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeServiceCapability_RPC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeServiceCapability_RPC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeServiceCapability_RPC::InternalSwap(NodeServiceCapability_RPC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata NodeServiceCapability_RPC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[102]);
}
// ===================================================================

class NodeServiceCapability::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::csi::v1::NodeServiceCapability, _impl_._oneof_case_);
  static const ::csi::v1::NodeServiceCapability_RPC& rpc(const NodeServiceCapability* msg);
};

const ::csi::v1::NodeServiceCapability_RPC& NodeServiceCapability::_Internal::rpc(const NodeServiceCapability* msg) {
  return *msg->_impl_.type_.rpc_;
}
void NodeServiceCapability::set_allocated_rpc(::csi::v1::NodeServiceCapability_RPC* rpc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (rpc) {
    ::google::protobuf::Arena* submessage_arena = rpc->GetArena();
    if (message_arena != submessage_arena) {
      rpc = ::google::protobuf::internal::GetOwnedMessage(message_arena, rpc, submessage_arena);
    }
    set_has_rpc();
    _impl_.type_.rpc_ = rpc;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.NodeServiceCapability.rpc)
}
NodeServiceCapability::NodeServiceCapability(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeServiceCapability)
}
inline PROTOBUF_NDEBUG_INLINE NodeServiceCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

NodeServiceCapability::NodeServiceCapability(
    ::google::protobuf::Arena* arena,
    const NodeServiceCapability& from)
    : ::google::protobuf::Message(arena) {
  NodeServiceCapability* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kRpc:
        _impl_.type_.rpc_ = CreateMaybeMessage<::csi::v1::NodeServiceCapability_RPC>(arena, *from._impl_.type_.rpc_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeServiceCapability)
}
inline PROTOBUF_NDEBUG_INLINE NodeServiceCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void NodeServiceCapability::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeServiceCapability::~NodeServiceCapability() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeServiceCapability)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeServiceCapability::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void NodeServiceCapability::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:csi.v1.NodeServiceCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kRpc: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.rpc_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void NodeServiceCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeServiceCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeServiceCapability::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NodeServiceCapability::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeServiceCapability_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.NodeServiceCapability.RPC rpc = 1;
    {PROTOBUF_FIELD_OFFSET(NodeServiceCapability, _impl_.type_.rpc_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::NodeServiceCapability_RPC>()},
  }}, {{
  }},
};

::uint8_t* NodeServiceCapability::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeServiceCapability)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.NodeServiceCapability.RPC rpc = 1;
  if (type_case() == kRpc) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc(this),
        _Internal::rpc(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeServiceCapability)
  return target;
}

::size_t NodeServiceCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeServiceCapability)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .csi.v1.NodeServiceCapability.RPC rpc = 1;
    case kRpc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.rpc_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeServiceCapability::_class_data_ = {
    NodeServiceCapability::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeServiceCapability::GetClassData() const {
  return &_class_data_;
}

void NodeServiceCapability::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeServiceCapability*>(&to_msg);
  auto& from = static_cast<const NodeServiceCapability&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeServiceCapability)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kRpc: {
      _this->_internal_mutable_rpc()->::csi::v1::NodeServiceCapability_RPC::MergeFrom(
          from._internal_rpc());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeServiceCapability::CopyFrom(const NodeServiceCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeServiceCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeServiceCapability::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeServiceCapability::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeServiceCapability::InternalSwap(NodeServiceCapability* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata NodeServiceCapability::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[103]);
}
// ===================================================================

class NodeGetInfoRequest::_Internal {
 public:
};

NodeGetInfoRequest::NodeGetInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeGetInfoRequest)
}
NodeGetInfoRequest::NodeGetInfoRequest(
    ::google::protobuf::Arena* arena,
    const NodeGetInfoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NodeGetInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeGetInfoRequest)
}









::google::protobuf::Metadata NodeGetInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[104]);
}
// ===================================================================

class NodeGetInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeGetInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_._has_bits_);
  static const ::csi::v1::Topology& accessible_topology(const NodeGetInfoResponse* msg);
  static void set_has_accessible_topology(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::Topology& NodeGetInfoResponse::_Internal::accessible_topology(const NodeGetInfoResponse* msg) {
  return *msg->_impl_.accessible_topology_;
}
NodeGetInfoResponse::NodeGetInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeGetInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_id_(arena, from.node_id_) {}

NodeGetInfoResponse::NodeGetInfoResponse(
    ::google::protobuf::Arena* arena,
    const NodeGetInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  NodeGetInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.accessible_topology_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::Topology>(arena, *from._impl_.accessible_topology_)
                : nullptr;
  _impl_.max_volumes_per_node_ = from._impl_.max_volumes_per_node_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeGetInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeGetInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        node_id_(arena) {}

inline void NodeGetInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accessible_topology_),
           0,
           offsetof(Impl_, max_volumes_per_node_) -
               offsetof(Impl_, accessible_topology_) +
               sizeof(Impl_::max_volumes_per_node_));
}
NodeGetInfoResponse::~NodeGetInfoResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeGetInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeGetInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.node_id_.Destroy();
  delete _impl_.accessible_topology_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeGetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeGetInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.accessible_topology_ != nullptr);
    _impl_.accessible_topology_->Clear();
  }
  _impl_.max_volumes_per_node_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeGetInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 42, 2> NodeGetInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeGetInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.node_id_)}},
    // int64 max_volumes_per_node = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NodeGetInfoResponse, _impl_.max_volumes_per_node_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.max_volumes_per_node_)}},
    // .csi.v1.Topology accessible_topology = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.accessible_topology_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 max_volumes_per_node = 2;
    {PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.max_volumes_per_node_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .csi.v1.Topology accessible_topology = 3;
    {PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.accessible_topology_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Topology>()},
  }}, {{
    "\32\7\0\0\0\0\0\0"
    "csi.v1.NodeGetInfoResponse"
    "node_id"
  }},
};

::uint8_t* NodeGetInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeGetInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string node_id = 1;
  if (!this->_internal_node_id().empty()) {
    const std::string& _s = this->_internal_node_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeGetInfoResponse.node_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 max_volumes_per_node = 2;
  if (this->_internal_max_volumes_per_node() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_max_volumes_per_node(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.Topology accessible_topology = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::accessible_topology(this),
        _Internal::accessible_topology(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeGetInfoResponse)
  return target;
}

::size_t NodeGetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeGetInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string node_id = 1;
  if (!this->_internal_node_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_node_id());
  }

  // .csi.v1.Topology accessible_topology = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.accessible_topology_);
  }

  // int64 max_volumes_per_node = 2;
  if (this->_internal_max_volumes_per_node() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_max_volumes_per_node());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeGetInfoResponse::_class_data_ = {
    NodeGetInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeGetInfoResponse::GetClassData() const {
  return &_class_data_;
}

void NodeGetInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeGetInfoResponse*>(&to_msg);
  auto& from = static_cast<const NodeGetInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeGetInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_accessible_topology()->::csi::v1::Topology::MergeFrom(
        from._internal_accessible_topology());
  }
  if (from._internal_max_volumes_per_node() != 0) {
    _this->_internal_set_max_volumes_per_node(from._internal_max_volumes_per_node());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeGetInfoResponse::CopyFrom(const NodeGetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeGetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeGetInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeGetInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeGetInfoResponse::InternalSwap(NodeGetInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.max_volumes_per_node_)
      + sizeof(NodeGetInfoResponse::_impl_.max_volumes_per_node_)
      - PROTOBUF_FIELD_OFFSET(NodeGetInfoResponse, _impl_.accessible_topology_)>(
          reinterpret_cast<char*>(&_impl_.accessible_topology_),
          reinterpret_cast<char*>(&other->_impl_.accessible_topology_));
}

::google::protobuf::Metadata NodeGetInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[105]);
}
// ===================================================================

NodeExpandVolumeRequest_SecretsEntry_DoNotUse::NodeExpandVolumeRequest_SecretsEntry_DoNotUse() {}
NodeExpandVolumeRequest_SecretsEntry_DoNotUse::NodeExpandVolumeRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NodeExpandVolumeRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[106]);
}
// ===================================================================

class NodeExpandVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeExpandVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_._has_bits_);
  static const ::csi::v1::CapacityRange& capacity_range(const NodeExpandVolumeRequest* msg);
  static void set_has_capacity_range(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::csi::v1::VolumeCapability& volume_capability(const NodeExpandVolumeRequest* msg);
  static void set_has_volume_capability(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::csi::v1::CapacityRange& NodeExpandVolumeRequest::_Internal::capacity_range(const NodeExpandVolumeRequest* msg) {
  return *msg->_impl_.capacity_range_;
}
const ::csi::v1::VolumeCapability& NodeExpandVolumeRequest::_Internal::volume_capability(const NodeExpandVolumeRequest* msg) {
  return *msg->_impl_.volume_capability_;
}
NodeExpandVolumeRequest::NodeExpandVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeExpandVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeExpandVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        secrets_{visibility, arena, from.secrets_},
        volume_id_(arena, from.volume_id_),
        volume_path_(arena, from.volume_path_),
        staging_target_path_(arena, from.staging_target_path_) {}

NodeExpandVolumeRequest::NodeExpandVolumeRequest(
    ::google::protobuf::Arena* arena,
    const NodeExpandVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeExpandVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.capacity_range_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::CapacityRange>(arena, *from._impl_.capacity_range_)
                : nullptr;
  _impl_.volume_capability_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::csi::v1::VolumeCapability>(arena, *from._impl_.volume_capability_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.NodeExpandVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeExpandVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        secrets_{visibility, arena},
        volume_id_(arena),
        volume_path_(arena),
        staging_target_path_(arena) {}

inline void NodeExpandVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capacity_range_),
           0,
           offsetof(Impl_, volume_capability_) -
               offsetof(Impl_, capacity_range_) +
               sizeof(Impl_::volume_capability_));
}
NodeExpandVolumeRequest::~NodeExpandVolumeRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeExpandVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeExpandVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.volume_id_.Destroy();
  _impl_.volume_path_.Destroy();
  _impl_.staging_target_path_.Destroy();
  delete _impl_.capacity_range_;
  delete _impl_.volume_capability_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeExpandVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeExpandVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secrets_.Clear();
  _impl_.volume_id_.ClearToEmpty();
  _impl_.volume_path_.ClearToEmpty();
  _impl_.staging_target_path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.capacity_range_ != nullptr);
      _impl_.capacity_range_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.volume_capability_ != nullptr);
      _impl_.volume_capability_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeExpandVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 85, 2> NodeExpandVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeExpandVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string volume_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.volume_id_)}},
    // string volume_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.volume_path_)}},
    // .csi.v1.CapacityRange capacity_range = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.capacity_range_)}},
    // string staging_target_path = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.staging_target_path_)}},
    // .csi.v1.VolumeCapability volume_capability = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.volume_capability_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.volume_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string volume_path = 2;
    {PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.volume_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .csi.v1.CapacityRange capacity_range = 3;
    {PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.capacity_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string staging_target_path = 4;
    {PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.staging_target_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .csi.v1.VolumeCapability volume_capability = 5;
    {PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.volume_capability_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> secrets = 6 [(.csi.v1.csi_secret) = true, (.csi.v1.alpha_field) = true];
    {PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.secrets_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::CapacityRange>()},
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeCapability>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodeExpandVolumeRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\36\11\13\0\23\0\7\0"
    "csi.v1.NodeExpandVolumeRequest"
    "volume_id"
    "volume_path"
    "staging_target_path"
    "secrets"
  }},
};

::uint8_t* NodeExpandVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeExpandVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    const std::string& _s = this->_internal_volume_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeExpandVolumeRequest.volume_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string volume_path = 2;
  if (!this->_internal_volume_path().empty()) {
    const std::string& _s = this->_internal_volume_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeExpandVolumeRequest.volume_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.CapacityRange capacity_range = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::capacity_range(this),
        _Internal::capacity_range(this).GetCachedSize(), target, stream);
  }

  // string staging_target_path = 4;
  if (!this->_internal_staging_target_path().empty()) {
    const std::string& _s = this->_internal_staging_target_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeExpandVolumeRequest.staging_target_path");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // .csi.v1.VolumeCapability volume_capability = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::volume_capability(this),
        _Internal::volume_capability(this).GetCachedSize(), target, stream);
  }

  // map<string, string> secrets = 6 [(.csi.v1.csi_secret) = true, (.csi.v1.alpha_field) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeExpandVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeExpandVolumeRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeExpandVolumeRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.NodeExpandVolumeRequest.secrets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeExpandVolumeRequest)
  return target;
}

::size_t NodeExpandVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeExpandVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 6 [(.csi.v1.csi_secret) = true, (.csi.v1.alpha_field) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string volume_id = 1;
  if (!this->_internal_volume_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_id());
  }

  // string volume_path = 2;
  if (!this->_internal_volume_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_path());
  }

  // string staging_target_path = 4;
  if (!this->_internal_staging_target_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_staging_target_path());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .csi.v1.CapacityRange capacity_range = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.capacity_range_);
    }

    // .csi.v1.VolumeCapability volume_capability = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.volume_capability_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeExpandVolumeRequest::_class_data_ = {
    NodeExpandVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeExpandVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void NodeExpandVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeExpandVolumeRequest*>(&to_msg);
  auto& from = static_cast<const NodeExpandVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeExpandVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_volume_id().empty()) {
    _this->_internal_set_volume_id(from._internal_volume_id());
  }
  if (!from._internal_volume_path().empty()) {
    _this->_internal_set_volume_path(from._internal_volume_path());
  }
  if (!from._internal_staging_target_path().empty()) {
    _this->_internal_set_staging_target_path(from._internal_staging_target_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_capacity_range()->::csi::v1::CapacityRange::MergeFrom(
          from._internal_capacity_range());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_volume_capability()->::csi::v1::VolumeCapability::MergeFrom(
          from._internal_volume_capability());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeExpandVolumeRequest::CopyFrom(const NodeExpandVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeExpandVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeExpandVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeExpandVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeExpandVolumeRequest::InternalSwap(NodeExpandVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_id_, &other->_impl_.volume_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_path_, &other->_impl_.volume_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.staging_target_path_, &other->_impl_.staging_target_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.volume_capability_)
      + sizeof(NodeExpandVolumeRequest::_impl_.volume_capability_)
      - PROTOBUF_FIELD_OFFSET(NodeExpandVolumeRequest, _impl_.capacity_range_)>(
          reinterpret_cast<char*>(&_impl_.capacity_range_),
          reinterpret_cast<char*>(&other->_impl_.capacity_range_));
}

::google::protobuf::Metadata NodeExpandVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[107]);
}
// ===================================================================

class NodeExpandVolumeResponse::_Internal {
 public:
};

NodeExpandVolumeResponse::NodeExpandVolumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.NodeExpandVolumeResponse)
}
NodeExpandVolumeResponse::NodeExpandVolumeResponse(
    ::google::protobuf::Arena* arena, const NodeExpandVolumeResponse& from)
    : NodeExpandVolumeResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NodeExpandVolumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeExpandVolumeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.capacity_bytes_ = {};
}
NodeExpandVolumeResponse::~NodeExpandVolumeResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.NodeExpandVolumeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeExpandVolumeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeExpandVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.NodeExpandVolumeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capacity_bytes_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeExpandVolumeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NodeExpandVolumeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeExpandVolumeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 capacity_bytes = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NodeExpandVolumeResponse, _impl_.capacity_bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NodeExpandVolumeResponse, _impl_.capacity_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 capacity_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(NodeExpandVolumeResponse, _impl_.capacity_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NodeExpandVolumeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.NodeExpandVolumeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 capacity_bytes = 1;
  if (this->_internal_capacity_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_capacity_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.NodeExpandVolumeResponse)
  return target;
}

::size_t NodeExpandVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.NodeExpandVolumeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 capacity_bytes = 1;
  if (this->_internal_capacity_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_capacity_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeExpandVolumeResponse::_class_data_ = {
    NodeExpandVolumeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeExpandVolumeResponse::GetClassData() const {
  return &_class_data_;
}

void NodeExpandVolumeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeExpandVolumeResponse*>(&to_msg);
  auto& from = static_cast<const NodeExpandVolumeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.NodeExpandVolumeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_capacity_bytes() != 0) {
    _this->_internal_set_capacity_bytes(from._internal_capacity_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeExpandVolumeResponse::CopyFrom(const NodeExpandVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.NodeExpandVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeExpandVolumeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeExpandVolumeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeExpandVolumeResponse::InternalSwap(NodeExpandVolumeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.capacity_bytes_, other->_impl_.capacity_bytes_);
}

::google::protobuf::Metadata NodeExpandVolumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[108]);
}
// ===================================================================

class GroupControllerGetCapabilitiesRequest::_Internal {
 public:
};

GroupControllerGetCapabilitiesRequest::GroupControllerGetCapabilitiesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.GroupControllerGetCapabilitiesRequest)
}
GroupControllerGetCapabilitiesRequest::GroupControllerGetCapabilitiesRequest(
    ::google::protobuf::Arena* arena,
    const GroupControllerGetCapabilitiesRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GroupControllerGetCapabilitiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.GroupControllerGetCapabilitiesRequest)
}









::google::protobuf::Metadata GroupControllerGetCapabilitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[109]);
}
// ===================================================================

class GroupControllerGetCapabilitiesResponse::_Internal {
 public:
};

GroupControllerGetCapabilitiesResponse::GroupControllerGetCapabilitiesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GroupControllerGetCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GroupControllerGetCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : capabilities_{visibility, arena, from.capabilities_},
        _cached_size_{0} {}

GroupControllerGetCapabilitiesResponse::GroupControllerGetCapabilitiesResponse(
    ::google::protobuf::Arena* arena,
    const GroupControllerGetCapabilitiesResponse& from)
    : ::google::protobuf::Message(arena) {
  GroupControllerGetCapabilitiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.GroupControllerGetCapabilitiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GroupControllerGetCapabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capabilities_{visibility, arena},
        _cached_size_{0} {}

inline void GroupControllerGetCapabilitiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupControllerGetCapabilitiesResponse::~GroupControllerGetCapabilitiesResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.GroupControllerGetCapabilitiesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupControllerGetCapabilitiesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupControllerGetCapabilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GroupControllerGetCapabilitiesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupControllerGetCapabilitiesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GroupControllerGetCapabilitiesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GroupControllerGetCapabilitiesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .csi.v1.GroupControllerServiceCapability capabilities = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GroupControllerGetCapabilitiesResponse, _impl_.capabilities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .csi.v1.GroupControllerServiceCapability capabilities = 1;
    {PROTOBUF_FIELD_OFFSET(GroupControllerGetCapabilitiesResponse, _impl_.capabilities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::GroupControllerServiceCapability>()},
  }}, {{
  }},
};

::uint8_t* GroupControllerGetCapabilitiesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GroupControllerGetCapabilitiesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .csi.v1.GroupControllerServiceCapability capabilities = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capabilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_capabilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GroupControllerGetCapabilitiesResponse)
  return target;
}

::size_t GroupControllerGetCapabilitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GroupControllerGetCapabilitiesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.GroupControllerServiceCapability capabilities = 1;
  total_size += 1UL * this->_internal_capabilities_size();
  for (const auto& msg : this->_internal_capabilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupControllerGetCapabilitiesResponse::_class_data_ = {
    GroupControllerGetCapabilitiesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupControllerGetCapabilitiesResponse::GetClassData() const {
  return &_class_data_;
}

void GroupControllerGetCapabilitiesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupControllerGetCapabilitiesResponse*>(&to_msg);
  auto& from = static_cast<const GroupControllerGetCapabilitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GroupControllerGetCapabilitiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capabilities()->MergeFrom(
      from._internal_capabilities());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupControllerGetCapabilitiesResponse::CopyFrom(const GroupControllerGetCapabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GroupControllerGetCapabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupControllerGetCapabilitiesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GroupControllerGetCapabilitiesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupControllerGetCapabilitiesResponse::InternalSwap(GroupControllerGetCapabilitiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
}

::google::protobuf::Metadata GroupControllerGetCapabilitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[110]);
}
// ===================================================================

class GroupControllerServiceCapability_RPC::_Internal {
 public:
};

GroupControllerServiceCapability_RPC::GroupControllerServiceCapability_RPC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GroupControllerServiceCapability.RPC)
}
GroupControllerServiceCapability_RPC::GroupControllerServiceCapability_RPC(
    ::google::protobuf::Arena* arena, const GroupControllerServiceCapability_RPC& from)
    : GroupControllerServiceCapability_RPC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GroupControllerServiceCapability_RPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GroupControllerServiceCapability_RPC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
GroupControllerServiceCapability_RPC::~GroupControllerServiceCapability_RPC() {
  // @@protoc_insertion_point(destructor:csi.v1.GroupControllerServiceCapability.RPC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupControllerServiceCapability_RPC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupControllerServiceCapability_RPC::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GroupControllerServiceCapability.RPC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupControllerServiceCapability_RPC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GroupControllerServiceCapability_RPC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GroupControllerServiceCapability_RPC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.GroupControllerServiceCapability.RPC.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GroupControllerServiceCapability_RPC, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GroupControllerServiceCapability_RPC, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.GroupControllerServiceCapability.RPC.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(GroupControllerServiceCapability_RPC, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GroupControllerServiceCapability_RPC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GroupControllerServiceCapability.RPC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.GroupControllerServiceCapability.RPC.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GroupControllerServiceCapability.RPC)
  return target;
}

::size_t GroupControllerServiceCapability_RPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GroupControllerServiceCapability.RPC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.GroupControllerServiceCapability.RPC.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupControllerServiceCapability_RPC::_class_data_ = {
    GroupControllerServiceCapability_RPC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupControllerServiceCapability_RPC::GetClassData() const {
  return &_class_data_;
}

void GroupControllerServiceCapability_RPC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupControllerServiceCapability_RPC*>(&to_msg);
  auto& from = static_cast<const GroupControllerServiceCapability_RPC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GroupControllerServiceCapability.RPC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupControllerServiceCapability_RPC::CopyFrom(const GroupControllerServiceCapability_RPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GroupControllerServiceCapability.RPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupControllerServiceCapability_RPC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GroupControllerServiceCapability_RPC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupControllerServiceCapability_RPC::InternalSwap(GroupControllerServiceCapability_RPC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata GroupControllerServiceCapability_RPC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[111]);
}
// ===================================================================

class GroupControllerServiceCapability::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::csi::v1::GroupControllerServiceCapability, _impl_._oneof_case_);
  static const ::csi::v1::GroupControllerServiceCapability_RPC& rpc(const GroupControllerServiceCapability* msg);
};

const ::csi::v1::GroupControllerServiceCapability_RPC& GroupControllerServiceCapability::_Internal::rpc(const GroupControllerServiceCapability* msg) {
  return *msg->_impl_.type_.rpc_;
}
void GroupControllerServiceCapability::set_allocated_rpc(::csi::v1::GroupControllerServiceCapability_RPC* rpc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (rpc) {
    ::google::protobuf::Arena* submessage_arena = rpc->GetArena();
    if (message_arena != submessage_arena) {
      rpc = ::google::protobuf::internal::GetOwnedMessage(message_arena, rpc, submessage_arena);
    }
    set_has_rpc();
    _impl_.type_.rpc_ = rpc;
  }
  // @@protoc_insertion_point(field_set_allocated:csi.v1.GroupControllerServiceCapability.rpc)
}
GroupControllerServiceCapability::GroupControllerServiceCapability(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GroupControllerServiceCapability)
}
inline PROTOBUF_NDEBUG_INLINE GroupControllerServiceCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GroupControllerServiceCapability::GroupControllerServiceCapability(
    ::google::protobuf::Arena* arena,
    const GroupControllerServiceCapability& from)
    : ::google::protobuf::Message(arena) {
  GroupControllerServiceCapability* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kRpc:
        _impl_.type_.rpc_ = CreateMaybeMessage<::csi::v1::GroupControllerServiceCapability_RPC>(arena, *from._impl_.type_.rpc_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:csi.v1.GroupControllerServiceCapability)
}
inline PROTOBUF_NDEBUG_INLINE GroupControllerServiceCapability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GroupControllerServiceCapability::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupControllerServiceCapability::~GroupControllerServiceCapability() {
  // @@protoc_insertion_point(destructor:csi.v1.GroupControllerServiceCapability)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupControllerServiceCapability::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void GroupControllerServiceCapability::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:csi.v1.GroupControllerServiceCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kRpc: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.rpc_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void GroupControllerServiceCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GroupControllerServiceCapability)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupControllerServiceCapability::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GroupControllerServiceCapability::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GroupControllerServiceCapability_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.GroupControllerServiceCapability.RPC rpc = 1;
    {PROTOBUF_FIELD_OFFSET(GroupControllerServiceCapability, _impl_.type_.rpc_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::GroupControllerServiceCapability_RPC>()},
  }}, {{
  }},
};

::uint8_t* GroupControllerServiceCapability::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GroupControllerServiceCapability)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .csi.v1.GroupControllerServiceCapability.RPC rpc = 1;
  if (type_case() == kRpc) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc(this),
        _Internal::rpc(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GroupControllerServiceCapability)
  return target;
}

::size_t GroupControllerServiceCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GroupControllerServiceCapability)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .csi.v1.GroupControllerServiceCapability.RPC rpc = 1;
    case kRpc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.rpc_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupControllerServiceCapability::_class_data_ = {
    GroupControllerServiceCapability::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupControllerServiceCapability::GetClassData() const {
  return &_class_data_;
}

void GroupControllerServiceCapability::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupControllerServiceCapability*>(&to_msg);
  auto& from = static_cast<const GroupControllerServiceCapability&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GroupControllerServiceCapability)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kRpc: {
      _this->_internal_mutable_rpc()->::csi::v1::GroupControllerServiceCapability_RPC::MergeFrom(
          from._internal_rpc());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupControllerServiceCapability::CopyFrom(const GroupControllerServiceCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GroupControllerServiceCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupControllerServiceCapability::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GroupControllerServiceCapability::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupControllerServiceCapability::InternalSwap(GroupControllerServiceCapability* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GroupControllerServiceCapability::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[112]);
}
// ===================================================================

CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse() {}
CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata CreateVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[113]);
}
// ===================================================================

CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse() {}
CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse::CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata CreateVolumeGroupSnapshotRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[114]);
}
// ===================================================================

class CreateVolumeGroupSnapshotRequest::_Internal {
 public:
};

CreateVolumeGroupSnapshotRequest::CreateVolumeGroupSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.CreateVolumeGroupSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : source_volume_ids_{visibility, arena, from.source_volume_ids_},
        secrets_{visibility, arena, from.secrets_},
        parameters_{visibility, arena, from.parameters_},
        name_(arena, from.name_),
        _cached_size_{0} {}

CreateVolumeGroupSnapshotRequest::CreateVolumeGroupSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const CreateVolumeGroupSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateVolumeGroupSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.CreateVolumeGroupSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : source_volume_ids_{visibility, arena},
        secrets_{visibility, arena},
        parameters_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void CreateVolumeGroupSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateVolumeGroupSnapshotRequest::~CreateVolumeGroupSnapshotRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.CreateVolumeGroupSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateVolumeGroupSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateVolumeGroupSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.CreateVolumeGroupSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_volume_ids_.Clear();
  _impl_.secrets_.Clear();
  _impl_.parameters_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateVolumeGroupSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 2, 86, 2> CreateVolumeGroupSnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateVolumeGroupSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string source_volume_ids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotRequest, _impl_.source_volume_ids_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string source_volume_ids = 2;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotRequest, _impl_.source_volume_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> parameters = 4;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotRequest, _impl_.parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateVolumeGroupSnapshotRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateVolumeGroupSnapshotRequest()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\4\21\7\12\0\0\0"
    "csi.v1.CreateVolumeGroupSnapshotRequest"
    "name"
    "source_volume_ids"
    "secrets"
    "parameters"
  }},
};

::uint8_t* CreateVolumeGroupSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.CreateVolumeGroupSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string source_volume_ids = 2;
  for (int i = 0, n = this->_internal_source_volume_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_source_volume_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.source_volume_ids");
    target = stream->WriteString(2, s, target);
  }

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.secrets");
      }
    }
  }

  // map<string, string> parameters = 4;
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.CreateVolumeGroupSnapshotRequest.parameters");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.CreateVolumeGroupSnapshotRequest)
  return target;
}

::size_t CreateVolumeGroupSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.CreateVolumeGroupSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string source_volume_ids = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_source_volume_ids().size());
  for (int i = 0, n = _internal_source_volume_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_source_volume_ids().Get(i));
  }
  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> parameters = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateVolumeGroupSnapshotRequest::_class_data_ = {
    CreateVolumeGroupSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateVolumeGroupSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void CreateVolumeGroupSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateVolumeGroupSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const CreateVolumeGroupSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.CreateVolumeGroupSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_source_volume_ids()->MergeFrom(from._internal_source_volume_ids());
  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVolumeGroupSnapshotRequest::CopyFrom(const CreateVolumeGroupSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.CreateVolumeGroupSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateVolumeGroupSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateVolumeGroupSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateVolumeGroupSnapshotRequest::InternalSwap(CreateVolumeGroupSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.source_volume_ids_.InternalSwap(&other->_impl_.source_volume_ids_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata CreateVolumeGroupSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[115]);
}
// ===================================================================

class CreateVolumeGroupSnapshotResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateVolumeGroupSnapshotResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotResponse, _impl_._has_bits_);
  static const ::csi::v1::VolumeGroupSnapshot& group_snapshot(const CreateVolumeGroupSnapshotResponse* msg);
  static void set_has_group_snapshot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeGroupSnapshot& CreateVolumeGroupSnapshotResponse::_Internal::group_snapshot(const CreateVolumeGroupSnapshotResponse* msg) {
  return *msg->_impl_.group_snapshot_;
}
CreateVolumeGroupSnapshotResponse::CreateVolumeGroupSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.CreateVolumeGroupSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeGroupSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateVolumeGroupSnapshotResponse::CreateVolumeGroupSnapshotResponse(
    ::google::protobuf::Arena* arena,
    const CreateVolumeGroupSnapshotResponse& from)
    : ::google::protobuf::Message(arena) {
  CreateVolumeGroupSnapshotResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.group_snapshot_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeGroupSnapshot>(arena, *from._impl_.group_snapshot_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.CreateVolumeGroupSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateVolumeGroupSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateVolumeGroupSnapshotResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_snapshot_ = {};
}
CreateVolumeGroupSnapshotResponse::~CreateVolumeGroupSnapshotResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.CreateVolumeGroupSnapshotResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateVolumeGroupSnapshotResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.group_snapshot_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateVolumeGroupSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.CreateVolumeGroupSnapshotResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.group_snapshot_ != nullptr);
    _impl_.group_snapshot_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateVolumeGroupSnapshotResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateVolumeGroupSnapshotResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateVolumeGroupSnapshotResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotResponse, _impl_.group_snapshot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
    {PROTOBUF_FIELD_OFFSET(CreateVolumeGroupSnapshotResponse, _impl_.group_snapshot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeGroupSnapshot>()},
  }}, {{
  }},
};

::uint8_t* CreateVolumeGroupSnapshotResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.CreateVolumeGroupSnapshotResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::group_snapshot(this),
        _Internal::group_snapshot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.CreateVolumeGroupSnapshotResponse)
  return target;
}

::size_t CreateVolumeGroupSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.CreateVolumeGroupSnapshotResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.group_snapshot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateVolumeGroupSnapshotResponse::_class_data_ = {
    CreateVolumeGroupSnapshotResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateVolumeGroupSnapshotResponse::GetClassData() const {
  return &_class_data_;
}

void CreateVolumeGroupSnapshotResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateVolumeGroupSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const CreateVolumeGroupSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.CreateVolumeGroupSnapshotResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_group_snapshot()->::csi::v1::VolumeGroupSnapshot::MergeFrom(
        from._internal_group_snapshot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVolumeGroupSnapshotResponse::CopyFrom(const CreateVolumeGroupSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.CreateVolumeGroupSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateVolumeGroupSnapshotResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateVolumeGroupSnapshotResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateVolumeGroupSnapshotResponse::InternalSwap(CreateVolumeGroupSnapshotResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.group_snapshot_, other->_impl_.group_snapshot_);
}

::google::protobuf::Metadata CreateVolumeGroupSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[116]);
}
// ===================================================================

class VolumeGroupSnapshot::_Internal {
 public:
  using HasBits = decltype(std::declval<VolumeGroupSnapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& creation_time(const VolumeGroupSnapshot* msg);
  static void set_has_creation_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& VolumeGroupSnapshot::_Internal::creation_time(const VolumeGroupSnapshot* msg) {
  return *msg->_impl_.creation_time_;
}
void VolumeGroupSnapshot::clear_creation_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.creation_time_ != nullptr) _impl_.creation_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VolumeGroupSnapshot::VolumeGroupSnapshot(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.VolumeGroupSnapshot)
}
inline PROTOBUF_NDEBUG_INLINE VolumeGroupSnapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        snapshots_{visibility, arena, from.snapshots_},
        group_snapshot_id_(arena, from.group_snapshot_id_) {}

VolumeGroupSnapshot::VolumeGroupSnapshot(
    ::google::protobuf::Arena* arena,
    const VolumeGroupSnapshot& from)
    : ::google::protobuf::Message(arena) {
  VolumeGroupSnapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.creation_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.creation_time_)
                : nullptr;
  _impl_.ready_to_use_ = from._impl_.ready_to_use_;

  // @@protoc_insertion_point(copy_constructor:csi.v1.VolumeGroupSnapshot)
}
inline PROTOBUF_NDEBUG_INLINE VolumeGroupSnapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        snapshots_{visibility, arena},
        group_snapshot_id_(arena) {}

inline void VolumeGroupSnapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_time_),
           0,
           offsetof(Impl_, ready_to_use_) -
               offsetof(Impl_, creation_time_) +
               sizeof(Impl_::ready_to_use_));
}
VolumeGroupSnapshot::~VolumeGroupSnapshot() {
  // @@protoc_insertion_point(destructor:csi.v1.VolumeGroupSnapshot)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeGroupSnapshot::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.group_snapshot_id_.Destroy();
  delete _impl_.creation_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeGroupSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.VolumeGroupSnapshot)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshots_.Clear();
  _impl_.group_snapshot_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.creation_time_ != nullptr);
    _impl_.creation_time_->Clear();
  }
  _impl_.ready_to_use_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeGroupSnapshot::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 52, 2> VolumeGroupSnapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VolumeGroupSnapshot_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool ready_to_use = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VolumeGroupSnapshot, _impl_.ready_to_use_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.ready_to_use_)}},
    // string group_snapshot_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.group_snapshot_id_)}},
    // repeated .csi.v1.Snapshot snapshots = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.snapshots_)}},
    // .google.protobuf.Timestamp creation_time = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.creation_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string group_snapshot_id = 1;
    {PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.group_snapshot_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .csi.v1.Snapshot snapshots = 2;
    {PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.snapshots_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp creation_time = 3;
    {PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.creation_time_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool ready_to_use = 4;
    {PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.ready_to_use_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::Snapshot>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\32\21\0\0\0\0\0\0"
    "csi.v1.VolumeGroupSnapshot"
    "group_snapshot_id"
  }},
};

::uint8_t* VolumeGroupSnapshot::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.VolumeGroupSnapshot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string group_snapshot_id = 1;
  if (!this->_internal_group_snapshot_id().empty()) {
    const std::string& _s = this->_internal_group_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.VolumeGroupSnapshot.group_snapshot_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .csi.v1.Snapshot snapshots = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_snapshots_size()); i < n; i++) {
    const auto& repfield = this->_internal_snapshots().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp creation_time = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::creation_time(this),
        _Internal::creation_time(this).GetCachedSize(), target, stream);
  }

  // bool ready_to_use = 4;
  if (this->_internal_ready_to_use() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_ready_to_use(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.VolumeGroupSnapshot)
  return target;
}

::size_t VolumeGroupSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.VolumeGroupSnapshot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .csi.v1.Snapshot snapshots = 2;
  total_size += 1UL * this->_internal_snapshots_size();
  for (const auto& msg : this->_internal_snapshots()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string group_snapshot_id = 1;
  if (!this->_internal_group_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_group_snapshot_id());
  }

  // .google.protobuf.Timestamp creation_time = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.creation_time_);
  }

  // bool ready_to_use = 4;
  if (this->_internal_ready_to_use() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeGroupSnapshot::_class_data_ = {
    VolumeGroupSnapshot::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeGroupSnapshot::GetClassData() const {
  return &_class_data_;
}

void VolumeGroupSnapshot::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeGroupSnapshot*>(&to_msg);
  auto& from = static_cast<const VolumeGroupSnapshot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.VolumeGroupSnapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshots()->MergeFrom(
      from._internal_snapshots());
  if (!from._internal_group_snapshot_id().empty()) {
    _this->_internal_set_group_snapshot_id(from._internal_group_snapshot_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_creation_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_creation_time());
  }
  if (from._internal_ready_to_use() != 0) {
    _this->_internal_set_ready_to_use(from._internal_ready_to_use());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeGroupSnapshot::CopyFrom(const VolumeGroupSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.VolumeGroupSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeGroupSnapshot::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeGroupSnapshot::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeGroupSnapshot::InternalSwap(VolumeGroupSnapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.snapshots_.InternalSwap(&other->_impl_.snapshots_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_snapshot_id_, &other->_impl_.group_snapshot_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.ready_to_use_)
      + sizeof(VolumeGroupSnapshot::_impl_.ready_to_use_)
      - PROTOBUF_FIELD_OFFSET(VolumeGroupSnapshot, _impl_.creation_time_)>(
          reinterpret_cast<char*>(&_impl_.creation_time_),
          reinterpret_cast<char*>(&other->_impl_.creation_time_));
}

::google::protobuf::Metadata VolumeGroupSnapshot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[117]);
}
// ===================================================================

DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse() {}
DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata DeleteVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[118]);
}
// ===================================================================

class DeleteVolumeGroupSnapshotRequest::_Internal {
 public:
};

DeleteVolumeGroupSnapshotRequest::DeleteVolumeGroupSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.DeleteVolumeGroupSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : snapshot_ids_{visibility, arena, from.snapshot_ids_},
        secrets_{visibility, arena, from.secrets_},
        group_snapshot_id_(arena, from.group_snapshot_id_),
        _cached_size_{0} {}

DeleteVolumeGroupSnapshotRequest::DeleteVolumeGroupSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const DeleteVolumeGroupSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  DeleteVolumeGroupSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.DeleteVolumeGroupSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : snapshot_ids_{visibility, arena},
        secrets_{visibility, arena},
        group_snapshot_id_(arena),
        _cached_size_{0} {}

inline void DeleteVolumeGroupSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteVolumeGroupSnapshotRequest::~DeleteVolumeGroupSnapshotRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.DeleteVolumeGroupSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteVolumeGroupSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.group_snapshot_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteVolumeGroupSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.DeleteVolumeGroupSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshot_ids_.Clear();
  _impl_.secrets_.Clear();
  _impl_.group_snapshot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteVolumeGroupSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 84, 2> DeleteVolumeGroupSnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeleteVolumeGroupSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string snapshot_ids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteVolumeGroupSnapshotRequest, _impl_.snapshot_ids_)}},
    // string group_snapshot_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteVolumeGroupSnapshotRequest, _impl_.group_snapshot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string group_snapshot_id = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteVolumeGroupSnapshotRequest, _impl_.group_snapshot_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string snapshot_ids = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteVolumeGroupSnapshotRequest, _impl_.snapshot_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(DeleteVolumeGroupSnapshotRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DeleteVolumeGroupSnapshotRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\21\14\7\0\0\0\0"
    "csi.v1.DeleteVolumeGroupSnapshotRequest"
    "group_snapshot_id"
    "snapshot_ids"
    "secrets"
  }},
};

::uint8_t* DeleteVolumeGroupSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.DeleteVolumeGroupSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string group_snapshot_id = 1;
  if (!this->_internal_group_snapshot_id().empty()) {
    const std::string& _s = this->_internal_group_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeGroupSnapshotRequest.group_snapshot_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string snapshot_ids = 2;
  for (int i = 0, n = this->_internal_snapshot_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_snapshot_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeGroupSnapshotRequest.snapshot_ids");
    target = stream->WriteString(2, s, target);
  }

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeGroupSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeGroupSnapshotRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeGroupSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.DeleteVolumeGroupSnapshotRequest.secrets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.DeleteVolumeGroupSnapshotRequest)
  return target;
}

::size_t DeleteVolumeGroupSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.DeleteVolumeGroupSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string snapshot_ids = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_snapshot_ids().size());
  for (int i = 0, n = _internal_snapshot_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_snapshot_ids().Get(i));
  }
  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string group_snapshot_id = 1;
  if (!this->_internal_group_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_group_snapshot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteVolumeGroupSnapshotRequest::_class_data_ = {
    DeleteVolumeGroupSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteVolumeGroupSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void DeleteVolumeGroupSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteVolumeGroupSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const DeleteVolumeGroupSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.DeleteVolumeGroupSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshot_ids()->MergeFrom(from._internal_snapshot_ids());
  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_group_snapshot_id().empty()) {
    _this->_internal_set_group_snapshot_id(from._internal_group_snapshot_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVolumeGroupSnapshotRequest::CopyFrom(const DeleteVolumeGroupSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.DeleteVolumeGroupSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteVolumeGroupSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteVolumeGroupSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteVolumeGroupSnapshotRequest::InternalSwap(DeleteVolumeGroupSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.snapshot_ids_.InternalSwap(&other->_impl_.snapshot_ids_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_snapshot_id_, &other->_impl_.group_snapshot_id_, arena);
}

::google::protobuf::Metadata DeleteVolumeGroupSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[119]);
}
// ===================================================================

class DeleteVolumeGroupSnapshotResponse::_Internal {
 public:
};

DeleteVolumeGroupSnapshotResponse::DeleteVolumeGroupSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csi.v1.DeleteVolumeGroupSnapshotResponse)
}
DeleteVolumeGroupSnapshotResponse::DeleteVolumeGroupSnapshotResponse(
    ::google::protobuf::Arena* arena,
    const DeleteVolumeGroupSnapshotResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  DeleteVolumeGroupSnapshotResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.DeleteVolumeGroupSnapshotResponse)
}









::google::protobuf::Metadata DeleteVolumeGroupSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[120]);
}
// ===================================================================

GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse() {}
GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata GetVolumeGroupSnapshotRequest_SecretsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[121]);
}
// ===================================================================

class GetVolumeGroupSnapshotRequest::_Internal {
 public:
};

GetVolumeGroupSnapshotRequest::GetVolumeGroupSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetVolumeGroupSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : snapshot_ids_{visibility, arena, from.snapshot_ids_},
        secrets_{visibility, arena, from.secrets_},
        group_snapshot_id_(arena, from.group_snapshot_id_),
        _cached_size_{0} {}

GetVolumeGroupSnapshotRequest::GetVolumeGroupSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const GetVolumeGroupSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  GetVolumeGroupSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetVolumeGroupSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetVolumeGroupSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : snapshot_ids_{visibility, arena},
        secrets_{visibility, arena},
        group_snapshot_id_(arena),
        _cached_size_{0} {}

inline void GetVolumeGroupSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetVolumeGroupSnapshotRequest::~GetVolumeGroupSnapshotRequest() {
  // @@protoc_insertion_point(destructor:csi.v1.GetVolumeGroupSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetVolumeGroupSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.group_snapshot_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetVolumeGroupSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GetVolumeGroupSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshot_ids_.Clear();
  _impl_.secrets_.Clear();
  _impl_.group_snapshot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetVolumeGroupSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 81, 2> GetVolumeGroupSnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetVolumeGroupSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string snapshot_ids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotRequest, _impl_.snapshot_ids_)}},
    // string group_snapshot_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotRequest, _impl_.group_snapshot_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string group_snapshot_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotRequest, _impl_.group_snapshot_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string snapshot_ids = 2;
    {PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotRequest, _impl_.snapshot_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
    {PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotRequest, _impl_.secrets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetVolumeGroupSnapshotRequest()._impl_.secrets_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\44\21\14\7\0\0\0\0"
    "csi.v1.GetVolumeGroupSnapshotRequest"
    "group_snapshot_id"
    "snapshot_ids"
    "secrets"
  }},
};

::uint8_t* GetVolumeGroupSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GetVolumeGroupSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string group_snapshot_id = 1;
  if (!this->_internal_group_snapshot_id().empty()) {
    const std::string& _s = this->_internal_group_snapshot_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetVolumeGroupSnapshotRequest.group_snapshot_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string snapshot_ids = 2;
  for (int i = 0, n = this->_internal_snapshot_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_snapshot_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetVolumeGroupSnapshotRequest.snapshot_ids");
    target = stream->WriteString(2, s, target);
  }

  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  if (!_internal_secrets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_secrets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetVolumeGroupSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetVolumeGroupSnapshotRequest.secrets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetVolumeGroupSnapshotRequest.secrets");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "csi.v1.GetVolumeGroupSnapshotRequest.secrets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GetVolumeGroupSnapshotRequest)
  return target;
}

::size_t GetVolumeGroupSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GetVolumeGroupSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string snapshot_ids = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_snapshot_ids().size());
  for (int i = 0, n = _internal_snapshot_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_snapshot_ids().Get(i));
  }
  // map<string, string> secrets = 3 [(.csi.v1.csi_secret) = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_secrets_size());
  for (const auto& entry : _internal_secrets()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string group_snapshot_id = 1;
  if (!this->_internal_group_snapshot_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_group_snapshot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetVolumeGroupSnapshotRequest::_class_data_ = {
    GetVolumeGroupSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetVolumeGroupSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void GetVolumeGroupSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetVolumeGroupSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const GetVolumeGroupSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GetVolumeGroupSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshot_ids()->MergeFrom(from._internal_snapshot_ids());
  _this->_impl_.secrets_.MergeFrom(from._impl_.secrets_);
  if (!from._internal_group_snapshot_id().empty()) {
    _this->_internal_set_group_snapshot_id(from._internal_group_snapshot_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetVolumeGroupSnapshotRequest::CopyFrom(const GetVolumeGroupSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GetVolumeGroupSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetVolumeGroupSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetVolumeGroupSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetVolumeGroupSnapshotRequest::InternalSwap(GetVolumeGroupSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.snapshot_ids_.InternalSwap(&other->_impl_.snapshot_ids_);
  _impl_.secrets_.InternalSwap(&other->_impl_.secrets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_snapshot_id_, &other->_impl_.group_snapshot_id_, arena);
}

::google::protobuf::Metadata GetVolumeGroupSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[122]);
}
// ===================================================================

class GetVolumeGroupSnapshotResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetVolumeGroupSnapshotResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotResponse, _impl_._has_bits_);
  static const ::csi::v1::VolumeGroupSnapshot& group_snapshot(const GetVolumeGroupSnapshotResponse* msg);
  static void set_has_group_snapshot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::csi::v1::VolumeGroupSnapshot& GetVolumeGroupSnapshotResponse::_Internal::group_snapshot(const GetVolumeGroupSnapshotResponse* msg) {
  return *msg->_impl_.group_snapshot_;
}
GetVolumeGroupSnapshotResponse::GetVolumeGroupSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csi.v1.GetVolumeGroupSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetVolumeGroupSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetVolumeGroupSnapshotResponse::GetVolumeGroupSnapshotResponse(
    ::google::protobuf::Arena* arena,
    const GetVolumeGroupSnapshotResponse& from)
    : ::google::protobuf::Message(arena) {
  GetVolumeGroupSnapshotResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.group_snapshot_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::csi::v1::VolumeGroupSnapshot>(arena, *from._impl_.group_snapshot_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:csi.v1.GetVolumeGroupSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetVolumeGroupSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetVolumeGroupSnapshotResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_snapshot_ = {};
}
GetVolumeGroupSnapshotResponse::~GetVolumeGroupSnapshotResponse() {
  // @@protoc_insertion_point(destructor:csi.v1.GetVolumeGroupSnapshotResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetVolumeGroupSnapshotResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.group_snapshot_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetVolumeGroupSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csi.v1.GetVolumeGroupSnapshotResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.group_snapshot_ != nullptr);
    _impl_.group_snapshot_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetVolumeGroupSnapshotResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetVolumeGroupSnapshotResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetVolumeGroupSnapshotResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotResponse, _impl_.group_snapshot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
    {PROTOBUF_FIELD_OFFSET(GetVolumeGroupSnapshotResponse, _impl_.group_snapshot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::csi::v1::VolumeGroupSnapshot>()},
  }}, {{
  }},
};

::uint8_t* GetVolumeGroupSnapshotResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csi.v1.GetVolumeGroupSnapshotResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::group_snapshot(this),
        _Internal::group_snapshot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csi.v1.GetVolumeGroupSnapshotResponse)
  return target;
}

::size_t GetVolumeGroupSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csi.v1.GetVolumeGroupSnapshotResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .csi.v1.VolumeGroupSnapshot group_snapshot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.group_snapshot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetVolumeGroupSnapshotResponse::_class_data_ = {
    GetVolumeGroupSnapshotResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetVolumeGroupSnapshotResponse::GetClassData() const {
  return &_class_data_;
}

void GetVolumeGroupSnapshotResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetVolumeGroupSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const GetVolumeGroupSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csi.v1.GetVolumeGroupSnapshotResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_group_snapshot()->::csi::v1::VolumeGroupSnapshot::MergeFrom(
        from._internal_group_snapshot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetVolumeGroupSnapshotResponse::CopyFrom(const GetVolumeGroupSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csi.v1.GetVolumeGroupSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetVolumeGroupSnapshotResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetVolumeGroupSnapshotResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetVolumeGroupSnapshotResponse::InternalSwap(GetVolumeGroupSnapshotResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.group_snapshot_, other->_impl_.group_snapshot_);
}

::google::protobuf::Metadata GetVolumeGroupSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_getter, &descriptor_table_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto_once,
      file_level_metadata_lib_2fcxx_2f_2eprotoc_2fcsi_2eproto[123]);
}
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  alpha_enum(kAlphaEnumFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  alpha_enum_value(kAlphaEnumValueFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  csi_secret(kCsiSecretFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  alpha_field(kAlphaFieldFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  alpha_message(kAlphaMessageFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  alpha_method(kAlphaMethodFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  alpha_service(kAlphaServiceFieldNumber, false, nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace csi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
